@model SAG2.Models.Proyecto
@{
    Layout = "~/Views/Shared/_Layoutinf.cshtml";
    ViewBag.Title = "Indicadores SAG 2";
    SAG2.Classes.Util utils = new SAG2.Classes.Util();
    int mesPeriodoActual = (int)Session["Mes"];
    List<SAG2.Models.Movimiento> ingresos = new List<SAG2.Models.Movimiento>();
    List<SAG2.Models.DetalleEgreso> egresos = new List<SAG2.Models.DetalleEgreso>();
    List<SAG2.Models.Movimiento> reintegros = new List<SAG2.Models.Movimiento>();
    List<SAG2.Models.DetallePresupuesto> dp = new List<SAG2.Models.DetallePresupuesto>();
    List<SAG2.Models.Convenio> Pl = new List<SAG2.Models.Convenio>();
    List<SAG2.Models.Intervencion> Inter = new List<SAG2.Models.Intervencion>();
    List<SAG2.Models.IndicadoresGestion> Estandares = new List<SAG2.Models.IndicadoresGestion>();
    //List<int> Ingresos = (List<int>)@ViewBag.MovIngresos;
    //List<int> Reintegros = (List<int>)ViewBag.MovReintegros;
    List<SAG2.Models.DeudaPendiente> dpen = new List<SAG2.Models.DeudaPendiente>();
    List<SAG2.Models.IndicadorCalidad> Calidad = new List<SAG2.Models.IndicadorCalidad>();
    List<SAG2.Models.BoletaHonorario> Retencion = new List<SAG2.Models.BoletaHonorario>();
    List<SAG2.Models.HorasExtras > HorasEx = new List<SAG2.Models.HorasExtras>();
}

<style type="text/css" media="all">
            body 
            {
                font-family: Arial;    
            }

            th
            {
                font-weight: bold;    
            }

            td, th
            {
                white-space: nowrap;
                font-size: 12px;
            }
        .text{
            mso-number-format:"\@@"; /*force text*/
            white-space: nowrap;
            text-align: left;
            mso-protection:locked;
        }

        .por100 {
            white-space: nowrap;
            mso-number-format:"Percent";
            text-align: center;
            mso-number-format:"\[Black\]\#\,\#\#0\.00%\;\[Red\]\\-\#\,\#\#0\.00%\;0\.00%";
        }

        .num {
            white-space: nowrap;
            mso-number-format:"\[Balck\]\#\,\#\#0_ \;\[Red\]\-\#\,\#\#0\;0";
             text-align: right;
            /*mso-number-format:"\#\,\#\#0\.000";*/
            /*mso-number-format: "[Azul][>0]#.##0";*/
            /*mso-number-format:"0";*/
        }
        .celda{
        height: auto;
        width: 200px;
        }
        .celdaFactorN{
        height: auto;
        width: 100px;
        }

.ajustarFactor{


white-space: pre-line; /* CSS 3.0 */

}
div.limpiar{
clear: both;
}
</style>
<table>
    <tr>
    <td>Fundaci&oacute;n Ciudad del Ni&ntilde;o</td>
    </tr>
    <tr>
        <td>@ViewBag.Proyecto </td>
    </tr>
</table >
<h2>Indicadores de Gestion</h2>
<table class="table-condensed table-bordered table-striped">
    <tr>
    <td>Indicadores de Gestion A&ntilde;o</td><td><select name="periodoIndicador" id="periodoIndicador" class="añoPresupuesto">
            @for (int i = DateTime.Now.Year - 3; i < DateTime.Now.Year + 5; i++)
            {
            <option value="@Html.Raw((i).ToString())"
                @{
                if (i == ViewBag.Periodo)
                {
                    @Html.Raw(" selected=\"selected\"");
                }
                }>@Html.Raw((i).ToString())</option>
            }
        </select>  </td>
        <td>               <div class="form-group" style="margin-right:10px" >
            <a  value="Excel"  data-toggle="tooltip" data-placement="top" title="Exportar a Excel" tipo="Ingresos" class="excelIndicador1 btn btn-success" style="height: 100%;" >
                      <span class ="fa fa-file-excel-o  fa-2x"></span>
                     </a>
                     </div>

        </td>
    </tr>
   <tr></tr><tr></tr>
    <tr>
        <td>Proyecto</td><td>
            
                     <select name="ProyectosIndicador" id="ProyectosIndicador" >
            <option value="-1"> - Seleccione proyecto</option>
            @foreach (SAG2.Models.Proyecto Proyectos2 in ViewBag.Proyectos)
            {
                if (Proyectos2.ID == ViewBag.Pidin)
                {
                    <option selected="selected" value="@Proyectos2.ID">@Proyectos2.NombreEstado</option>
                }
                else
                {
                    <option value="@Proyectos2.ID">@Proyectos2.NombreEstado</option>
                }
            }
            </td>
        <td>Cod.SEN.</td><td>@ViewBag.CodigoSename</td>
        <td>Cod. Inst.</td><td>@ViewBag.CodigoCodeni</td>
    </tr>
    <tr>
        <td>Region</td><td>@ViewBag.Region</td><td>Ciudad</td><td>@ViewBag.Ciudad</td>
    </tr>
    <tr>
        <td>Auditor</td><td>@ViewBag.Auditor</td>
    </tr>
</table>
<br /><br />
<table class="table  table-bordered " style="table-layout:fixed;" >
   <thead>
       <th style= "text-align: center; width: 100px;" ><b>Factor</b></th>
       <th style= "text-align: center; width: 100px;" >Variable</th>
       <th style= "text-align: center;" >Indicador</th>
       <th style= "text-align: center;" >Estandar</th>
       <th style= "text-align: center;" class="ajustarFactor";>Base de Medicion</th>
       <th style= "text-align: center;width: 80px;white-space: pre-line;">1 Trimestre </th>
       <th style= "text-align: center;width: 80px;white-space: pre-line;" >2 Trimestre</th>
       <th style= "text-align: center;width: 80px;white-space: pre-line;" >1 Semestre</th>
       <th style= "text-align: center;width: 80px;white-space: pre-line;">3 Trimestre</th>
       <th style= "text-align: center;width: 80px;white-space: pre-line;" >4 Trimestre</th>
       <th style= "text-align: center;width: 80px;white-space: pre-line;" >2 Semestre</th>
      
</thead>
    @{
       
            }
    <tr> 
        @{ 
            var coberturasestandares = 0;
            try{
                coberturasestandares =  (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CapCobertura);
           } catch { }
           
            double factor1 = 0; 
            try{
            factor1 = Pl.Where(p => p.Mes <= 3).Sum(p => p.NroPlazas)/3; 
            }catch { }
            int factor2 = 0; 
            try{
           factor2 = Pl.Where(p => p.Mes >= 4 && p.Mes <= 6).Sum(p => p.NroPlazas) / 3; 
            }catch { }
            int factor3 = 0;
            try
            {
                factor3 = Pl.Where(p => p.Mes >= 7 && p.Mes <= 9).Sum(p => p.NroPlazas) / 3;
            }
            catch { }
            int factor4 = 0;
            try
            {
                factor4 = Pl.Where(p => p.Mes >= 10 && p.Mes <= 12).Sum(p => p.NroPlazas) / 3;
            }
            catch { } 
            
           } 
        <td style= "text-align: center;" rowspan="2">Capacidad</td>
        <td style= "text-align: center;"  rowspan="2">Coberturas</td>
        <td style= "text-align: center;" class="ajustarFactor"; >N&deg; de plazas establecidas en el Convenio</td>
        <td style= "text-align: center;" >@coberturasestandares</td>
        <td style= "text-align: center;">Trimestral</td>        
        <td class="num">@factor1.ToString("##,##")</td>
        <td class="num"> @((factor2).ToString("#,##0")) </td>
        <td style="background: #C0C0C0"> </td>
        <td class="num"> @((factor3).ToString("#,##0")) </td>
        <td class="num"> @((factor4).ToString("#,##0")) </td>
        <td class="active"> </td>
   
    </tr>
    <tr>

        <td style= "text-align: center;white-space: pre-line;" > % de Intervenciones Mensuales</td>
        @{
        int intermensualesestandares = 0;
        try{
        intermensualesestandares = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CapIntervenciones);}
        catch{}
        }
        <td style= "text-align: center;">@intermensualesestandares.ToString("0.#0") %</td>
        <td style= "text-align: center;">Trimestral</td>
         <td class="por100">@{
             int cobertura = 0;
             float plaza = 0;
             float porcentaje = 0;
             var porcentaje_str2 = "";
               try
                {
                    cobertura = Inter.Where(p => p.Mes <= 3).Sum(p => p.Atenciones);

                      plaza = Pl.Where(p => p.Mes <= 3).Sum(p => p.NroPlazas);
                     porcentaje = cobertura * 100/ plaza;
                     porcentaje_str2 = porcentaje.ToString("0.#0");
               }
               catch (Exception)
               {
                    cobertura = 0;
                   plaza = 0;
                    porcentaje = 0;
                   porcentaje_str2 = "0";
               }
               
         }
              @Html.Raw(porcentaje_str2.ToString()) %
              </td>
        <td class="por100">@{
            float cobertura2 = 0;
             try
             {
                 cobertura2 = Inter.Where(p => p.Mes >= 4 && p.Mes <= 6).Sum(p => p.Atenciones);
                 plaza = Pl.Where(p => p.Mes >= 4 && p.Mes <= 6).Sum(p => p.NroPlazas);
                 if (cobertura2 == 0){
                     porcentaje_str2 = cobertura2.ToString(("0.#0"));
                  }else{   
                 porcentaje = (cobertura2 * 100) / plaza;
                 porcentaje_str2 = porcentaje.ToString(("0.#0"));}
                 }
                   catch (Exception)
               {
                    cobertura2 = 0;
                   plaza = 0;
                    porcentaje = 0;
                   porcentaje_str2 = "";
               }
                 
         }
             @Html.Raw(porcentaje_str2) %
            
            </td>
        <td class="active"></td>
        <td class="por100" >
            @{
                float cobertura3;
                float porcentaje3 = 0;
                try
                {
                cobertura3 = Inter.Where(p => p.Mes >= 7 && p.Mes <= 9).Sum(p => p.Atenciones);
                plaza = Pl.Where(p => p.Mes >= 7 && p.Mes <= 9).Sum(p => p.NroPlazas);
              porcentaje3 = cobertura3 * 100/ plaza;
             if(cobertura3 == 0){
                 porcentaje3 = 0;
             }
                                              }
                              catch (Exception)
               {
                    cobertura3 = 0;
                   plaza = 0;
                    porcentaje3 = 0;
                  
               }   
         }
            @Html.Raw(porcentaje3.ToString("0.#0"))  % </td>
         @{
            int cobertura4 = 0;
            int plaza4 = 0;
            int porcentaje4 = 0;
             try
                {
                    cobertura4 = Inter.Where(p => p.Mes >= 10 && p.Mes <= 12).Sum(p => p.Atenciones);
                    plaza4 = Pl.Where(p => p.Mes >= 10 && p.Mes <= 12).Sum(p => p.NroPlazas);
                    porcentaje4 = (cobertura4 / plaza4) * 100;
                                  }
                   catch (Exception)
                   {
                       cobertura4 = 0;
                       plaza4 = 0;
                       porcentaje4 = 0;
                       
                   }   
            }
           <td class="por100"> @Html.Raw(porcentaje4.ToString("0.#0")) % </td>
        <td class="active"></td>
       
      </tr>
    <tr>
        <td style= "text-align: center;" rowspan="2"> Ingresos</td>
        <td style= "text-align: center;" class="ajustarFactor";>Subvenci&oacute;n SENAME</td>
        <td style= "text-align: center;" class="ajustarFactor";>Ingresos por subenci&oacute;n del Trimestre / 3</td>
        @{
            int subencionsenameestandar = 0;
            try{
            subencionsenameestandar = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.IngSubvencion);
            }catch{}
        }
        <td style= "text-align: right;">$ @subencionsenameestandar.ToString("#,###,###")</td>

        <td style= "text-align: center;">Trimestral</td>
         @{ 
            int subenvion_1 = 0;
            int subenvion_2= 0;
            int subenvion_3 = 0;
            int subenvion_4 = 0;
             try{
            subenvion_1 = Model.Movimientos.Where(p => p.Periodo == ViewBag.Periodo).Where(p => p.Mes < 4).Where(p => p.TipoComprobanteID == 1).Where(p => p.Cuenta.CuentaID == 2 || p.Cuenta.CuentaID == 7).Sum(p => p.Monto_Ingresos) / 3;
             }catch{}
            try{
            subenvion_2 = Model.Movimientos.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes >= 4 && p.Mes <= 6).Where(p => p.TipoComprobanteID == 1).Where(p => p.Cuenta.CuentaID == 2 || p.Cuenta.CuentaID == 7).Sum(p => p.Monto_Ingresos) / 3;
            }catch{}
            try{
            subenvion_3 = Model.Movimientos.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes >= 7 && p.Mes <= 9).Where(p => p.TipoComprobanteID == 1).Where(p => p.Cuenta.CuentaID ==2 || p.Cuenta.CuentaID == 7 ).Sum(p => p.Monto_Ingresos) / 3;
            }catch{}
            try{
            subenvion_4 = Model.Movimientos.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes > 9 && p.Mes <= 12).Where(p => p.TipoComprobanteID == 1).Where(p => p.Cuenta.CuentaID == 2 || p.Cuenta.CuentaID == 7).Sum(p => p.Monto_Ingresos) / 3;
            }catch{}
            }
        <td class="num"> $@( (subenvion_1).ToString("#,###,###"))</td>
         <td class="num">$ @( (subenvion_2).ToString("#,###,###")) </td>
        <td class="active"></td>
         <td class="num">$ @( (subenvion_3).ToString("#,###,##0")) </td>
        <td class="num">$ @( (subenvion_4).ToString("#,###,##0"))</td>
        <td class="active"> </td>
         
         
     
    </tr>
    <tr>
         
        <td style= "text-align: center;" class="ajustarFactor";>Otros Ingresos </td>
        <td style= "text-align: center;" class="ajustarFactor";>Otros Ingresos del Trimestre / 3</td>
        @{
            int otrosingresoestandares = 0;
            try{
                otrosingresoestandares = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.IngOtros);
            }catch{}
                
        }
        <td style= "text-align: right;" >$ @otrosingresoestandares</td>
        <td style= "text-align: center;">Trimestral</td>
         <td class="num">$ @Model.Movimientos.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes < 4).Where(p => p.TipoComprobanteID == 1).Where(p => p.Cuenta.CuentaID ==11 || p.CuentaID == 16).Sum(p => p.Monto_Ingresos).ToString("#,###,#0") </td>
         <td class="num">$ @Model.Movimientos.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes >= 4 && p.Mes <= 6).Where(p => p.TipoComprobanteID == 1).Where(p => p.Cuenta.CuentaID ==11 ||  p.CuentaID == 16).Sum(p => p.Monto_Ingresos).ToString("#,###,#0") </td>
        <td class="active"></td>
         <td class="num">$ @Model.Movimientos.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes >= 7 && p.Mes <= 9).Where(p => p.TipoComprobanteID == 1).Where(p => p.Cuenta.CuentaID ==11 || p.CuentaID == 16).Sum(p => p.Monto_Ingresos).ToString("#,###,#0")</td>
        <td class="num">$ @Model.Movimientos.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes > 9 && p.Mes <= 12).Where(p => p.TipoComprobanteID == 1).Where(p => p.Cuenta.CuentaID ==11  ||  p.CuentaID == 16).Sum(p => p.Monto_Ingresos).ToString("#,###,#0") </td>
        <td class="active"></td>
        
         

    </tr>
        
            @foreach (SAG2.Models.IndicadoresCuenta  FCostosReales in  ViewBag.CostosReales )
            {
               
                <tr>
                 @if (FCostosReales.ID  == 1)
                {
                    <td style= "text-align: center;" rowspan="6"> Costos Reales</td>
                }
           
                 <td style= "text-align: center;" class="ajustarFactor";>@FCostosReales.VARIABLE </td>
                 <td style= "text-align: center;" class="ajustarFactor";>@FCostosReales.INDICADOR  </td>
                @{
                int cospersonalestandar = 0;
                int cosfuncionamiento = 0;
                int costecnico = 0;
                int cosbeneficiario = 0;
                int cosinversion = 0;
                int cosfondo = 0;
                try{
                    cospersonalestandar = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CosPersonal);
                    cosfuncionamiento =  (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CosFuncionamiento);
                    costecnico = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CosTecnico);
                    cosbeneficiario = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CosBeneficiario);
                    cosinversion = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CosInversion);
                    cosfondo = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CosFondo);
                }catch{}
                
                  }
                 @if (FCostosReales.ID  == 1)
                {
                    <td style= "text-align: center;" > @cospersonalestandar.ToString("0.#0") %</td>
                }
                @if (FCostosReales.ID  == 2)
                {
                    <td style= "text-align: center;" > @cosfuncionamiento.ToString("0.#0") %</td>
                }
                @if (FCostosReales.ID  == 3)
                {
                    <td style= "text-align: center;" > @costecnico.ToString("0.#0") %</td>
                }
                @if (FCostosReales.ID  == 4)
                {
                    <td style= "text-align: center;" > @cosbeneficiario.ToString("0.#0") %</td>
                }
               @if (FCostosReales.ID  == 5)
                {
                    <td style= "text-align: center;" > @cosinversion.ToString("0.#0") %</td>
                }
               @if (FCostosReales.ID  == 6)
                {
                    <td style= "text-align: center;"> @cosfondo.ToString("0.#0") %</td>
                }
                <td style= "text-align: center;">Trimestral</td>
              @{
                 float valor_egresos_1t = 0;
                 float valor_reintegros_1t = 0;
                 float valor_ingresos_1t = 0;
                 float resultado_1t = 0;
                try
                {
                    valor_ingresos_1t = ingresos.Where(d => d.Cuenta.resumen == 1 || d.Cuenta.resumen == 2 || d.Cuenta.resumen == 3).Where(d => d.Mes <= 3).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                                      
                    valor_egresos_1t = egresos.Where(d => d.Cuenta.indicador == FCostosReales.ID).Where(d => d.Egreso.Mes < 4).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                     valor_reintegros_1t = reintegros.Where(d => d.Cuenta.indicador == FCostosReales.ID).Where(d => d.Mes < 4).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                     if (valor_ingresos_1t == 0)
                     {
                         valor_ingresos_1t = 1;
                     }
                     resultado_1t = (valor_egresos_1t - valor_reintegros_1t)*100/(valor_ingresos_1t); ///valor_egresos_1t - valor_reintegros_1t)*100/
                }
                catch (Exception)
                {
                    valor_egresos_1t = 0;
                     valor_reintegros_1t =0;
                }
        
             }
           <td class="por100">  @( (resultado_1t).ToString("0.#0")) % </td>   
         @{
              float valor_egresos_2p = 0;
              float valor_reintegros_2p = 0;
              int valor_ingresos_2p = 0;
              float resultado_2p = 0;
             try{
                 valor_ingresos_2p = ingresos.Where(d => d.Cuenta.resumen == 1 || d.Cuenta.resumen == 2 || d.Cuenta.resumen == 3).Where(d => d.Mes >= 4 && d.Mes <= 6).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                 
                  valor_egresos_2p = egresos.Where(d => d.Cuenta.indicador == FCostosReales.ID).Where(d => d.Egreso.Mes >= 4 && d.Egreso.Mes <= 6).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                  valor_reintegros_2p = reintegros.Where(d => d.Cuenta.indicador == FCostosReales.ID).Where(d => d.Mes >= 4 && d.Mes <= 6).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
             if (valor_ingresos_2p == 0){
                 valor_ingresos_2p = 1;
             }
                 resultado_2p = (valor_egresos_2p-valor_reintegros_2p)*100/valor_ingresos_2p;
             }
             catch (Exception)
             {
                  valor_egresos_2p = 0;
                 valor_reintegros_2p = 0;
                 valor_ingresos_2p = 1;
             }
   
             }
 <td class="por100" >   @((resultado_2p).ToString("0.#0")) % </td>
          <td class="active"></td>
            @{
                float valor_egresos_3p = 0;
                float valor_reintegros_3p = 0;
                int valor_ingresos_3p = 1;
                float resultado_3p = 0;
             try
             {
                 valor_ingresos_3p = ingresos.Where(d => d.Cuenta.resumen == 1 || d.Cuenta.resumen == 2 || d.Cuenta.resumen == 3).Where(d => d.Mes >= 7 && d.Mes <= 9).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                 
                 valor_egresos_3p = egresos.Where(d => d.Cuenta.indicador == FCostosReales.ID).Where(d => d.Egreso.Mes >= 7 && d.Egreso.Mes <= 9).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                 valor_reintegros_3p = reintegros.Where(d => d.Cuenta.indicador == FCostosReales.ID).Where(d => d.Mes >= 7 && d.Mes <= 9).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                 if (valor_ingresos_3p == 0)
                 {
                     valor_ingresos_3p = 1;
                 }
             resultado_3p = (valor_egresos_3p-valor_reintegros_3p)*100/valor_ingresos_3p;
             }
             catch (Exception)
             {
                 valor_egresos_3p = 0;
                 valor_reintegros_3p = 0;
                 valor_ingresos_3p = 1;
             }
                
             
                 }
           <td class="por100">   @((resultado_3p).ToString("0.#0")) % </td>
             @{
                float valor_egresos_4p = 0;
                float valor_reintegros_4p = 0;
                float valor_ingresos_4p = 1;
                float resultado_4p = 0;
                try
                {
                    valor_ingresos_4p = ingresos.Where(d => d.Cuenta.resumen == 1 || d.Cuenta.resumen == 2 || d.Cuenta.resumen == 3).Where(d => d.Mes >= 10 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                   valor_egresos_4p = egresos.Where(d => d.Cuenta.indicador == FCostosReales.ID).Where(d => d.Egreso.Mes >= 10 && d.Egreso.Mes <= 12).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                    valor_reintegros_4p = reintegros.Where(d => d.Cuenta.indicador == FCostosReales.ID).Where(d => d.Mes >= 10 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                    if (valor_ingresos_4p == 0)
                    {
                        valor_ingresos_4p = 1;
                    }
                resultado_4p = (valor_egresos_4p-valor_reintegros_4p)* 100/valor_ingresos_4p;
                }
                catch (Exception)
                {
                    valor_egresos_4p = 0;
                    valor_reintegros_4p = 0;
                }
                   
               }
          <td class="por100">   @((resultado_4p).ToString("0.#0")) % </td>
         <td class="active"></td>


</tr> 
                }

    @{ int pinf = 0; }
              @foreach (SAG2.Models.IndicadoresCuenta FFinanciamiento in ViewBag.Financiamiento)
            {
               
                <tr>
                 @if (pinf == 0 )
                {
                    pinf = 1;
                    <td style= "text-align: center;" rowspan="6"> Financiamiento</td>
                }
           
                 <td style= "text-align: center;"  class="ajustarFactor";>@FFinanciamiento.VARIABLE </td>
                 <td style= "text-align: center;"  class="ajustarFactor";>@FFinanciamiento.INDICADOR  </td>
                                @{
                int fnPrestamos = 0;
                int fnPrestamosOtros = 0;
                int fnAportes = 0;
                int fnAportesExcedentes = 0;
                int fnAportesTerceros = 0;
           
                try{
                    fnPrestamos = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.FinPrestamos);
                    fnPrestamosOtros = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.FinPrestamosOtros);
                    fnAportes = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.FinAportes);
                    fnAportesExcedentes = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.FinAportesExcendentes);
                    fnAportesTerceros = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.FinAportesTerceros);
                 
                }catch{}
                
                  }
                 @if (FFinanciamiento.ID == 7)
                {
                    <td style= "text-align: right;" >$ @fnPrestamos </td>
                }

                @if (FFinanciamiento.ID == 8)
                {
                    <td style= "text-align: right;" >$ @fnPrestamosOtros </td>
                }
                @if (FFinanciamiento.ID == 9)
                {
                    <td style= "text-align: right;" >$ @fnAportes </td>
                }
                @if (FFinanciamiento.ID == 10)
                {
                    <td style= "text-align: right;" >$ @fnAportesExcedentes </td>
                }
                @if (FFinanciamiento.ID == 11)
                {
                    <td style= "text-align: right;" >$ @fnAportesTerceros </td>
                }
                <td style= "text-align: right;">Trimestral</td>
              @{
                float valor_egresos_1ft = 0;
                float valor_reintegros_1ft = 0;
                float resultado_1ft = 0;
                try
                {
                    valor_egresos_1ft = egresos.Where(d => d.Cuenta.indicador == FFinanciamiento.ID).Where(d => d.Egreso.Mes < 4).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                     valor_reintegros_1ft = reintegros.Where(d => d.Cuenta.indicador == FFinanciamiento.ID).Where(d => d.Mes < 4).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                resultado_1ft = valor_egresos_1ft -valor_reintegros_1ft;
                }
                catch (Exception)
                {
               
                }
                
                }
           <td class="num"> $  @((resultado_1ft).ToString("#,##0")) </td>   
         @{
             int valor_egresos_2fp = 0;
             int valor_reintegros_2fp =  0;
               try
                {
                 valor_egresos_2fp = egresos.Where(d => d.Cuenta.indicador == FFinanciamiento.ID).Where(d => d.Egreso.Mes >= 4 && d.Egreso.Mes <= 6).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                 valor_reintegros_2fp = reintegros.Where(d => d.Cuenta.indicador == FFinanciamiento.ID).Where(d => d.Mes >= 4 && d.Mes <= 6).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                 }
                catch (Exception)
                {
               
                }
               
               }
 <td class="num"> $  @((valor_egresos_2fp-valor_reintegros_2fp).ToString("#,##0")) </td>
          <td class="active"></td>
            @{
                int valor_egresos_3fp = 0;
                int valor_reintegros_3fp = 0;
                 try
                {
                 valor_egresos_3fp = egresos.Where(d => d.Cuenta.indicador == FFinanciamiento.ID).Where(d => d.Egreso.Mes >= 7 && d.Egreso.Mes <= 9).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                 valor_reintegros_3fp = reintegros.Where(d => d.Cuenta.indicador == FFinanciamiento.ID).Where(d => d.Mes >= 7 && d.Mes <= 9).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
             
                    }
                catch (Exception)
                {
               
                }
                }
           <td class="num"> $  @((valor_egresos_3fp-valor_reintegros_3fp).ToString("#,##0")) </td>
             @{
                 int valor_egresos_4fp = 0;
                 int valor_reintegros_4fp =  0;
                 try
                {  
                 
                 valor_egresos_4fp = egresos.Where(d => d.Cuenta.indicador == FFinanciamiento.ID).Where(d => d.Egreso.Mes >= 10 && d.Egreso.Mes <= 12).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                 valor_reintegros_4fp = reintegros.Where(d => d.Cuenta.indicador == FFinanciamiento.ID).Where(d => d.Mes >= 10 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);

                }
                 catch (Exception)
                 {
                     valor_egresos_4fp = 0;
                     valor_reintegros_4fp = 0;
                 }
                 }
          <td class="num"> $  @((valor_egresos_4fp-valor_reintegros_4fp).ToString("#,##0")) </td>
         <td class="active"></td>


</tr> 
                }
    <tr>
       
        <td  class="ajustarFactor";>Proveedores</td>
        <td  class="ajustarFactor";>Deudas por Pagar a Proveedores del Trimestre</td>
        @{
            int deudaspagar = 0;
            try{
                deudaspagar = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.FinProveedores);
            }catch{}
        }
        <td style= "text-align: right;">$ @deudaspagar.ToString("#,##0")</td>
        <td style= "text-align: center;">Trimestral</td>
        @{
            int prove1t = 0;
            int prove2t = 0;
            int prove3t = 0;
            int prove4t = 0;
            try{
            prove1t = dpen.Where(d => d.Mes < 4).Sum(d => d.Monto);
            }
            catch{
                prove1t = 0;
            }
            
            try
            {
                prove2t = dpen.Where(d => d.Mes >= 4 && d.Mes <= 6 ).Sum(d => d.Monto);
            }
            catch
            {
                prove2t = 0;
            }
            
            try
            {
                prove3t = dpen.Where(d => d.Mes >= 7 && d.Mes <= 9).Sum(d => d.Monto);
            }
            catch
            {
                prove3t = 0;
            }
            try
            {
                prove4t = dpen.Where(d => d.Mes >= 10 && d.Mes <= 12).Sum(d => d.Monto);
            }
            catch
            {
                prove4t = 0;
            }
        }
         <td class="num"> $  @((prove1t).ToString("#,##0")) </td>
        <td class="num">  $ @((prove2t).ToString("#,##0")) </td>
        <td class="active"></td>
         <td class="num"> $  @((prove3t).ToString("#,##0")) </td>
        <td class="num">  $ @((prove4t).ToString("#,##0")) </td>
        <td class="active"></td>
    </tr>
    <tr>
    @{
         int GastosObjetados_1s = 0;
          int GastosRechazados_1s = 0;
          int Observaciones_1s = 0;
          
          int GastosObjetados_1sCodeni = 0;
          int GastosRechazados_1sCodeni = 0;
          int Observaciones_1sCodeni = 0;
          int Observaciones_1sCodeniInventario = 0;

          try{
          GastosObjetados_1s = Calidad.Where(d => d.Mes < 7).Where(d => d.Tipo == 1).Sum(d => d.GastoObjetado);
          }catch{}
          try{
          GastosObjetados_1sCodeni = Calidad.Where(d => d.Mes < 7).Where(d => d.Tipo == 2).Sum(d => d.GastoObjetado);
          }catch{}
          try{    
          GastosRechazados_1s = Calidad.Where(d => d.Mes < 7).Where(d => d.Tipo == 1).Sum(d => d.GastoRechazado);
          }catch{}
          try{
          GastosRechazados_1sCodeni = Calidad.Where(d => d.Mes < 7).Where(d => d.Tipo == 2).Sum(d => d.GastoRechazado);
          }catch{}
          try{
          Observaciones_1s = Calidad.Where(d => d.Mes < 7).Where(d => d.Tipo == 1).Sum(d => d.CantidadObservaciones);
          }catch{}
          try{
          Observaciones_1sCodeni = Calidad.Where(d => d.Mes < 7).Where(d => d.Tipo == 2).Sum(d => d.CantidadObservaciones);
          }catch{}
          try{
          Observaciones_1sCodeniInventario = Calidad.Where(d => d.Mes < 7).Where(d => d.Tipo == 4).Sum(d => d.CantidadObservaciones);
          }catch{}
      }
        @{       
          int GastosObjetados_2s = 0;
          int GastosRechazados_2s = 0;
          int Observaciones_2s = 0;
          
          int GastosObjetados_2sCodeni = 0;
          int GastosRechazados_2sCodeni = 0;
          int Observaciones_2sCodeni = 0;
          int Observaciones_2sCodeniInventario = 0;
        
          try{
          GastosObjetados_2s = Calidad.Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Tipo == 1).Sum(d => d.GastoObjetado);
          }catch{}
          try{
          GastosObjetados_2sCodeni = Calidad.Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Tipo == 2).Sum(d => d.GastoObjetado);
          }catch{}
          try{
          GastosRechazados_2s = Calidad.Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Tipo == 1).Sum(d => d.GastoRechazado);
          }catch{}
          try{
          GastosRechazados_2sCodeni = Calidad.Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Tipo == 2).Sum(d => d.GastoRechazado);
          }catch{}   
          try{ 
          Observaciones_2s = Calidad.Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Tipo == 1).Sum(d => d.CantidadObservaciones);
          } catch{}
          try{
          Observaciones_2sCodeni = Calidad.Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Tipo == 2).Sum(d => d.CantidadObservaciones);
          }catch{}
          try{
          Observaciones_2sCodeniInventario = Calidad.Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Tipo == 4).Sum(d => d.CantidadObservaciones);
          }catch{}
       }    
        @{
          int retencion_1 = 0;
          int retencion_2 = 0;
          int retencion_3 = 0;
          int retencion_4 = 0;
          
          try{
          retencion_1 = Retencion.Where(d => d.Mes < 4 && d.Nula != "S").Sum(d => d.Retencion);
          }catch{} 
          try{
          retencion_2 = Retencion.Where(d => d.Mes >= 4 && d.Mes <= 6 && d.Nula != "S").Sum(d => d.Retencion);
          }catch{} 
          try{  
          retencion_3 = Retencion.Where(d => d.Mes >= 7 && d.Mes <= 9 && d.Nula != "S").Sum(d => d.Retencion);
          }catch{} 
          try{    
          retencion_4 = Retencion.Where(d => d.Mes >= 10 && d.Mes <= 12 && d.Nula != "S").Sum(d => d.Retencion);
          }catch{} 
          
          // retencion 2
          int retencion_1_2 = 0;
          int retencion_2_2 = 0;
          int retencion_3_2 = 0;
          int retencion_4_2 = 0;
          try{
          retencion_1_2 = Calidad.Where(d => d.Mes < 4).Where(d => d.Tipo == 3).Sum(d => d.CantidadObservaciones);
          }catch{}
          try{
          retencion_2_2 = Calidad.Where(d => d.Mes >= 4 && d.Mes <= 6).Where(d => d.Tipo == 3).Sum(d => d.CantidadObservaciones);
          }catch{}
          try{
          retencion_3_2 = Calidad.Where(d => d.Mes >= 7 && d.Mes <= 9).Where(d => d.Tipo == 3).Sum(d => d.CantidadObservaciones);
          }catch{}
          try{
          retencion_4_2 = Calidad.Where(d => d.Mes >= 10 && d.Mes <= 12).Where(d => d.Tipo == 3).Sum(d => d.CantidadObservaciones);
          }catch{}
                
            int gastoobjetadossename = 0;
            try{
                gastoobjetadossename = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CalObjSename);
            }catch{}
            int gastorechazadossename = 0;
            try
            {
                gastorechazadossename = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CalObjSename);
            }catch { }
          
            int observacionessename = 0;
            try
            {
                observacionessename = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CalObsSename);
            }
            catch { }
            int gastosobjetadoscodeni = 0;
            try
            {
                gastosobjetadoscodeni = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CalObjCodeni);
            }catch { }
            int gastosrechazadoscodeni = 0;
            try
            {
                gastosrechazadoscodeni = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CalRecCodeni);
            }catch { }
            int observacionescodeni = 0;
             try
            {
                observacionescodeni = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CalObsCodeni);
            }catch { }

            int retenciones = 0;
            try
             {
                 retenciones = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.CalImpuestos);
             }
             catch { }   
            
            int inventarioestandar = 0;
            try{
                inventarioestandar = (int) Estandares.Where(p => p.Periodo == ViewBag.Periodo).Sum(p => p.CalInventario);
            }catch { }
                 
    }    
      <td rowspan="8">Calidad</td>
       <td class="ajustarFactor";> Gastos Objetados Sename</td>
        <td class="ajustarFactor";>Total ($) Gastos Objetados en el Semestre</td>
        <td style= "text-align: right;">$ @gastoobjetadossename.ToString("#,###,##0")</td>
        <td style= "text-align: center;">Semestral</td>
        <td class="active"></td><td class="active"></td><td class="num"> $ @((GastosObjetados_1s).ToString("#,##0"))</td><td class="active"></td><td class="active"></td><td class="num">$ @((GastosObjetados_2s).ToString("#,##0"))</td>
        
          
    </tr>
    <tr>
         <td class="ajustarFactor";> Gastos Rechazados Sename</td>
        <td class="ajustarFactor";>Total ($) Gastos Rechazados en el Semestre</td>
        <td style= "text-align: right;">$ @gastorechazadossename.ToString("#,###,##0")</td>
        <td style= "text-align: center;">Semestral</td>
        <td  class="active"></td><td  class="active"></td><td class="num">$ @((GastosRechazados_1s).ToString("#,##0"))</td><td class="active"></td><td  class="active"></td><td class="num">$ @((GastosRechazados_2s).ToString("#,##0"))</td>

    </tr>
       <tr>
         <td class="ajustarFactor";> Observaciones Sename</td>
        <td class="ajustarFactor";>N° Observaciones en el Semestre</td>
        <td style= "text-align: center;">@observacionessename</td>
        <td style= "text-align: center;">Semestral</td>
        <td  class="active"></td><td  class="active"></td><td style= "text-align: center;"> @((Observaciones_1s).ToString("#,##0"))</td><td  class="active"></td><td  class="active"></td><td style= "text-align: center;"> @((Observaciones_2s).ToString("#,##0"))</td>

    </tr>
    <tr>
      <td class="ajustarFactor";> Gastos Objetados Codeni</td>
        <td class="ajustarFactor";>Total ($) Gastos Objetados en el Semestre</td>
        <td style= "text-align: right;">$ @gastosobjetadoscodeni</td>
        <td style= "text-align: center;">Semestral</td>
        <td  class="active"></td><td  class="active"></td><td class="num">$ @((GastosObjetados_1sCodeni).ToString("#,##0"))</td><td  class="active"></td><td  class="active"></td><td class="num"> $ @((GastosObjetados_2sCodeni).ToString("#,##0"))</td>
        
          
    </tr>
    <tr>
         <td class="ajustarFactor";> Gastos Rechazados Codeni</td>
        <td class="ajustarFactor";>Total ($) Gastos Rechazados en el Semestre</td>
        <td style= "text-align: right;"> $ @gastosrechazadoscodeni</td>
        <td style= "text-align: center;">Semestral</td>
        <td  class="active"></td><td  class="active"></td><td class="num">$ @((GastosRechazados_1sCodeni).ToString("#,##0"))</td><td class="active"></td><td class="active"></td><td class="num">$ @((GastosRechazados_2sCodeni).ToString("#,##0"))</td>

    </tr>
        <tr>
         <td class="ajustarFactor";> Observaciones Codeni</td>
        <td class="ajustarFactor";>N° Observaciones en el Semestre</td>
        <td style= "text-align: center;">@observacionescodeni</td>
        <td style= "text-align: center;">Semestral</td>
        <td class="active"></td><td class="active"></td><td style= "text-align: center;"> @((Observaciones_1sCodeni).ToString("#,##0"))</td><td class="active"></td><td class="active"></td><td style= "text-align: center;"> @((Observaciones_2sCodeni).ToString("#,##0"))</td>

    </tr>
       <tr>
         <td class="ajustarFactor";> Retenciones</td>
        <td class="ajustarFactor";>Retenciones</td>
        <td style= "text-align: center;">@retenciones</td>
        <td style= "text-align: center;">Trimestral</td>
        <td style= "text-align: right;"> $ @((retencion_1 + retencion_1_2).ToString("#,##0"))</td><td style= "text-align: right;">$ @((retencion_2 + retencion_2_2).ToString("#,##0"))</td><td class="active"></td><td style= "text-align: right;">$ @((retencion_3 + retencion_3_2).ToString("#,##0"))</td><td style= "text-align: right;"> $ @((retencion_4 + retencion_4_2).ToString("#,##0"))</td><td class="active"> </td>

    </tr>
        <tr>
         <td class="ajustarFactor";> Inventario General</td>
        <td class="ajustarFactor";>N° Observaciones en el Semestre</td>
        <td style= "text-align: center;">@inventarioestandar</td>
        <td style= "text-align: center;">Semestral</td>
        <td class="active"></td><td class="active"></td><td style= "text-align: center;"> @((Observaciones_1sCodeniInventario).ToString("#,##0"))</td><td class="active"> </td><td class="active"></td><td style= "text-align: center;"> @((Observaciones_2sCodeniInventario).ToString("#,##0"))</td>

    </tr>
    <tr>
        @{
            int prodefiestandar = 0;
            try{
                prodefiestandar = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.ProAporte);
            }catch{}
        }
        <td style= "text-align: center;" class="ajustarFactor"; rowspan="7" >Productividad Eficiente</td>
        <td style= "text-align: center;" class="ajustarFactor";> Aporte subvención </td>
        <td style= "text-align: center;" class="ajustarFactor";> Transferencia Mensual al <br />Proy. Administración <br />Centralizada </td>
        <td  style= "text-align: center;">@prodefiestandar.ToString("0.#0") %</td>
        <td style= "text-align: center;"> Trimestal</td>
        @{
            int valorPE1t1 = 0;
            float porcentaje_PE1t1 = 0;
            float porcentaje_PE1t3 = 0;
             float porcentaje_PE1t4 = 0;
             
            
            try{
                int valorPE1t1_T = ingresos.Where(d => d.Cuenta.resumen == 1).Where(d => d.Mes < 4).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                valorPE1t1 = (egresos.Where(d => d.Cuenta.ID == 64).Where(d => d.Egreso.Mes < 4).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto));
            porcentaje_PE1t1 = (valorPE1t1 * 100) / valorPE1t1_T;
            }
            catch { porcentaje_PE1t1 = 0; }   
        }
        <td style= "text-align: center;">   @((porcentaje_PE1t1).ToString("0.#0")) %</td>
                @{
           float porcentaje_PE1t2 = 0;
            int valorPE1t2 = 0;
            int valorPE1t2_T = ingresos.Where(d => d.Cuenta.resumen == 1).Where(d => d.Mes >= 4 && d.Mes <= 6).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
            valorPE1t2 = egresos.Where(d => d.Cuenta.ID == 64).Where(d => d.Egreso.Mes >= 4 && d.Egreso.Mes <= 6).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
            try{
            porcentaje_PE1t2 = (valorPE1t2 * 100) / valorPE1t2_T;
            }catch{porcentaje_PE1t2 = 0;
            }}
        <td style= "text-align: center;">   @((porcentaje_PE1t2).ToString("0.#0")) % </td>
        <td class="active"></td>
            @{
              
            int valorPE1t3 = 0;
           
            int valorPE1t3_T = ingresos.Where(d => d.Cuenta.resumen == 1).Where(d => d.Mes >=  7 && d.Mes <= 9).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
            valorPE1t3 = egresos.Where(d => d.Cuenta.ID == 64).Where(d => d.Egreso.Mes >= 7 && d.Egreso.Mes <= 9).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
            try{
                 porcentaje_PE1t3 = (valorPE1t3 * 100) / valorPE1t3_T;}
                 catch{porcentaje_PE1t3 = 0;}
            }
        <td style= "text-align: center;">   @((porcentaje_PE1t3).ToString("0.#0")) % </td>
                    @{
            int valorPE1t4 = 0;
            int valorPE1t4_T = ingresos.Where(d => d.Cuenta.resumen == 1).Where(d => d.Mes >=  10 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
            valorPE1t4 = egresos.Where(d => d.Cuenta.ID == 64).Where(d => d.Egreso.Mes >= 10 && d.Egreso.Mes <= 12).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                        try{
                 porcentaje_PE1t4 = (valorPE1t4 * 100) / valorPE1t4_T;}
                 catch{porcentaje_PE1t3 = 0;}
            }
        <td style= "text-align: center;">   @((porcentaje_PE1t4).ToString("0.#0")) % </td>
        <td class="active"></td>
    </tr>
        <tr>
       @{
           int TotHorasExtras1 = 0;
           int TotHorasExtras2 = 0;
           int TotHorasExtras3 = 0;
           int TotHorasExtras4 = 0;

           try{
           TotHorasExtras1 = HorasEx.Where(d => d.Mes < 4).Sum(d => d.MontoHorasExtras);
           }catch{}
          try{
           TotHorasExtras2 = HorasEx.Where(d => d.Mes >= 4 && d.Mes <= 6).Sum(d => d.MontoHorasExtras);
          }catch { }
          try{
           TotHorasExtras3 = HorasEx.Where(d => d.Mes >= 7 && d.Mes <= 9).Sum(d => d.MontoHorasExtras);
          }catch{}
          try{
           TotHorasExtras4 = HorasEx.Where(d => d.Mes >= 10 && d.Mes <= 12).Sum(d => d.MontoHorasExtras);
          }catch{}

          int prohoras = 0;
                  try{
                      prohoras = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.ProHoras);
          }catch{
              prohoras = 0;
          } 
          int prosaldo = 0;
                         try{
                      prosaldo = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.ProSaldo);
          }catch{
              prosaldo = 0;
          } 
          
          
           }
       
       
        <td style= "text-align: center;" class="ajustarFactor";> Horas Extraordinarias </td>
        <td style= "text-align: center;" class="ajustarFactor";> Costo Total por Trimestre </td>
        <td style= "text-align: right;"> $ @prohoras</td>
        <td style= "text-align: center;"> Trimestal</td>
        <td class="num"> $  @((TotHorasExtras1).ToString("#,##0")) </td>
        <td class="num"> $  @((TotHorasExtras2).ToString("#,##0")) </td>
        <td class="active"></td>   
        <td class="num"> $  @((TotHorasExtras3).ToString("#,##0")) </td>       
        <td class="num"> $  @((TotHorasExtras4).ToString("#,##0")) </td>
        <td class="active"></td>
    </tr>
        </tr>
        <tr>
       
        <td style= "text-align: center;" class="ajustarFactor";> Saldo Banco </td>
        <td style= "text-align: center;" class="ajustarFactor";> Saldo Banco Ultimo día del Trimestre </td>
        <td style= "text-align: right;">$ @prosaldo.ToString("#,##0")</td>
        <td style= "text-align: center;"> Trimestal</td>
            @{
              List<SAG2.Models.Saldo> Sbanco = new List<SAG2.Models.Saldo>();
             Sbanco = (List<SAG2.Models.Saldo >)@ViewBag.SaldoBanco;
             int saldo1 = 0;
             int saldo2 = 0;
             int saldo3 = 0;
             int saldo4 = 0;
             int vingresos = 0;
             int vegresos = 0;
             int vreintegros = 0;
             int vresultado = 0;    
             try
                {
             
    //int mesPeriodoActual = (int)Session["Mes"];

             vingresos = ingresos.Where(d => d.Mes == mesPeriodoActual).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
             vegresos = egresos.Where(d => d.Egreso.Mes == mesPeriodoActual).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
             vreintegros = reintegros.Where(d => d.Mes == mesPeriodoActual).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
             vresultado = (vingresos) - (vegresos - vreintegros);
                 
             saldo1 = Sbanco.Where(ms => ms.Mes == 3).Sum(d => d.SaldoFinal);   
             saldo2 = Sbanco.Where(ms => ms.Mes == 6).Sum(d => d.SaldoFinal);
             saldo3 = Sbanco.Where(ms => ms.Mes == 9).Sum(d => d.SaldoFinal);
             saldo4 = Sbanco.Where(ms => ms.Mes == 12).Sum(d => d.SaldoFinal);
             if (mesPeriodoActual == 3)
             {
                 saldo1 = saldo1 + vresultado;
             }   
              if (mesPeriodoActual == 6){
                  saldo2 = saldo2 + vresultado;
              }
              if (mesPeriodoActual == 9)
              {
                  saldo3 = saldo3 + vresultado;
              }
              if (mesPeriodoActual == 12)
              {
                  saldo4 = saldo4 + vresultado;
              }      
             }
             catch
             {
                 saldo1 = 0;
                 saldo2 = 0;
                 saldo3 = 0;
                 saldo4 = 0;
             }
             
             
            }
            <td class="num">$ @((saldo1).ToString("#,##0")) </td>
            <td class="num">$ @((saldo2).ToString("#,##0")) </td>
            <td class="active"></td>
             <td class="num">$ @((saldo3).ToString("#,##0")) </td>
             <td class="num">$ @((saldo4).ToString("#,##0")) </td>
            <td class="active"></td>
    </tr>
    <tr>
        @{
            int resultadoestandar = 0;
            try{
              resultadoestandar = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.ProResultado);  
            }catch{}
            }
        <td style= "text-align: center;" class="ajustarFactor";>Resultado </td>
        <td style= "text-align: center;" class="ajustarFactor";> (Ingresos Operacionales - Gastos Operacionales) / Ingresos Operacionales -1 </td>
        <td style= "text-align: center;">@resultadoestandar</td>
        <td style= "text-align: center;" class="ajustarFactor";> Trimestral </td>
        @{
            float valorIngresos1T = 0;
            float valorEgresos1T = 0;
            float valorReintegros1T = 0;
            float resultado1;
              try
                {
                    valorIngresos1T = ingresos.Where(d => d.Cuenta.ProResultado == 1 ).Where(d => d.Mes < 4).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);

                    valorEgresos1T = egresos.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Egreso.Mes < 4).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                    valorReintegros1T = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes < 4).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
              
              }
              catch
              {
                  valorIngresos1T = 0;
                  valorEgresos1T = 0;
                  valorReintegros1T = 0;
              }

              resultado1 = ((valorIngresos1T / (valorEgresos1T - valorReintegros1T))-1)*100 ;
              
        }
         <td class="por100">   @( (resultado1 ).ToString("0.#0")) %</td>
               
         @{

             try
             {
                 valorIngresos1T = ingresos.Where(d => d.Cuenta.ProResultado == 1).Where(d => d.Mes >= 4 && d.Mes <= 6).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);

                 valorEgresos1T = egresos.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Egreso.Mes >= 4 && d.Egreso.Mes <= 6).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                 valorReintegros1T = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes >= 4 && d.Mes <= 6).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);

             }
             catch
             {
                 valorIngresos1T = 0;
                 valorEgresos1T = 0;
                 valorReintegros1T = 0;
             }

             resultado1 = ((valorIngresos1T / (valorEgresos1T - valorReintegros1T)) - 1) * 100;
              
        }
        <td class="por100"> @( (resultado1).ToString("0.#0")) %</td>
        <td class="active"></td>
  @{

             try
             {
                 valorIngresos1T = ingresos.Where(d => d.Cuenta.ProResultado == 1).Where(d => d.Mes >= 7 && d.Mes <= 9).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);

                 valorEgresos1T = egresos.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Egreso.Mes >= 7 && d.Egreso.Mes <= 9).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                 valorReintegros1T = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes >= 7 && d.Mes <= 9).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);

             }
             catch
             {
                 valorIngresos1T = 0;
                 valorEgresos1T = 0;
                 valorReintegros1T = 0;
             }

             resultado1 = ((valorIngresos1T / (valorEgresos1T - valorReintegros1T)) - 1) * 100;
             if (valorIngresos1T == 0)
             {
                 resultado1 = 0;
             } 
              
        }
        <td class="por100">   @( (resultado1).ToString("0.#0")) % </td>
  @{

             try
             {
                 valorIngresos1T = ingresos.Where(d => d.Cuenta.ProResultado == 1).Where(d => d.Mes >= 10 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);

                 valorEgresos1T = egresos.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Egreso.Mes >= 10 && d.Egreso.Mes <= 12).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                 valorReintegros1T = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes >= 10 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);

             }
             catch
             {
                 valorIngresos1T = 0;
                 valorEgresos1T = 0;
                 valorReintegros1T = 0;
             }

             resultado1 = ((valorIngresos1T / (valorEgresos1T - valorReintegros1T)) - 1) * 100;
             if (valorIngresos1T == 0)
             {
                 resultado1 = 0;
             } 
              
        }
        <td class="por100"> @( (resultado1).ToString("0.#0")) %</td>
        <td class="active"></td>
    </tr>
    <tr>
        @{
            int desviacionpestandar = 0;
            try{
                desviacionpestandar = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.ProDesviacion);
            }catch{}
        }
        <td style= "text-align: center;" class="ajustarFactor";>Desviación Presupuesto </td>
        <td style= "text-align: center;" class="ajustarFactor";> Desviación (+/-) de los <br />Ingresos Operacionales </td>
        <td style= "text-align: center;">@desviacionpestandar.ToString("0.#0") %</td>
        <td style= "text-align: center;"> Semestral </td>
        @{
            float valorIngresos1TD = 0;
            float presupuesto1TD = 0;
            float resultado1D = 0;
            try{
                valorIngresos1TD = ingresos.Where(d => d.Cuenta.ProResultado == 1).Where(d => d.Mes < 7).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                presupuesto1TD = dp.Where(d => d.Cuenta.ProResultado == 1).Where(d => d.Mes < 7).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
            }
            catch{
                valorIngresos1TD = 0;
                presupuesto1TD = 0;
            }
          if (presupuesto1TD == 0)
          {
              resultado1D = 0;
          }
          else{
              if (valorIngresos1TD == 0) { resultado1D = 0; }
              else {
              resultado1D =(( presupuesto1TD - valorIngresos1TD )/presupuesto1TD)*100;}
          }
          
        }
        <td class="active"></td><td class="active"></td>
        <td class="por100"> @( ( resultado1D).ToString("0.#0")) %</td>
        <td class="active"></td><td class="active"></td>
        @{
            int valorIngresos2TD = 0;
            int presupuesto2TD = 0;
            int resultado2D = 0;
            try{
                valorIngresos2TD = ingresos.Where(d => d.Cuenta.ProResultado == 1).Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
                presupuesto2TD = dp.Where(d => d.Cuenta.ProResultado == 1).Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
            }
            catch{
                valorIngresos2TD = 0;
                presupuesto2TD = 0;
            }
          if (presupuesto2TD == 0)
          {
              resultado2D = 0;
          }
          else{
              if (valorIngresos2TD == 0){
                  resultado2D = 0; 
              }else{
              resultado2D = ((presupuesto2TD -valorIngresos2TD) / presupuesto2TD)*100;}
          }
          
        }
        <td class="por100"> @( (resultado2D).ToString("0.#0")) %</td>
        
    </tr>
    <tr>
     @{
         int desviacionestandar2 = 0;
         try{
             desviacionestandar2 = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.ProDesviacionEgr);
         }catch{}
         
         
     }

        <td style= "text-align: center;" class="ajustarFactor";>Desviación Presupuesto </td>
        <td style= "text-align: center;" class="ajustarFactor";> Desviación (+/-) de los <br />Gastos Operacionales </td>
        <td style= "text-align: center;">@desviacionestandar2.ToString("0.#0") %</td>
        <td style= "text-align: center;"> Semestral </td>
        <td class="active"></td><td class="active"></td>
 @{
     float valorEgresos1TD = 0;
     float valorReintegros1TD = 0;
     float gastoso1td = 0; 
     presupuesto1TD = 0;
     try{
        
     valorEgresos1TD = egresos.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Egreso.Mes < 7).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
     valorReintegros1TD = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes < 7).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
     presupuesto1TD = dp.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes < 7).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
     }
     catch
     {
         valorEgresos1TD = 0;
         valorReintegros1TD = 0;
     }
     resultado1D = 0;
     if (presupuesto1TD == 0)
     {
         resultado1D = 0;
     }
     else
     {
         gastoso1td = valorEgresos1TD - valorReintegros1TD;
         if (gastoso1td == 0){
             resultado1D = 0;}
         else{
             resultado1D = ((presupuesto1TD - gastoso1td) / presupuesto1TD)*100;
         }
     }
  }
         <td class="por100"> @( (resultado1D).ToString("0.#0")) % </td>
        <td class="active"></td><td class="active"></td>
 @{
     int valorEgresos2TD = 0;
     int valorReintegros2TD = 0;
     presupuesto2TD = 0;
     try{

         valorEgresos2TD = egresos.Where(d => d.Cuenta.ProResultado == 2 ).Where(d => d.Egreso.Mes >= 7 && d.Egreso.Mes <= 12).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
         valorReintegros2TD = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
         presupuesto2TD = dp.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes >= 7 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
     }
     catch
     {
         valorEgresos2TD = 0;
         valorReintegros2TD = 0;
     }
     resultado2D = 0;
     if (presupuesto2TD == 0)
     {
         resultado2D = 0;
     }
     else
     {

         gastoso1td = valorEgresos2TD - valorReintegros2TD;
         if (gastoso1td == 0)
         {
             resultado1D = 0;
         }
         else
         {
             resultado1D = ((presupuesto2TD - gastoso1td) / presupuesto2TD) * 100;
         }
     }
  }
         <td class="por100"> @( (resultado1D).ToString("0.#0")) %</td>
       

    </tr>
    <tr>
       @{
           int totgastoestandar = 0;
           try{
               totgastoestandar = (int)Estandares.Where(p => p.Periodo == @ViewBag.Periodo).Sum(p => p.ProCostoNino);
           }catch{}
       }
        <td class="ajustarFactor";>Costo Niño/Mes</td>
        <td class="ajustarFactor";>Total Gastos Operacionales Trim. / Nº de Intervenciones  Trim.)/ Valor de la Subvención</td>
        <td style= "text-align: center;"> @totgastoestandar.ToString("0.#0") %</td>
        <td style= "text-align: center;">Trimestral</td>


        @{
            float intervenciones1tf =0;
            float valorEgresos1Tf = 0;
            float valorReintegros1Tf = 0;
           float valorSub = (int)ViewBag.ValorSubvencion;
            float resultado1t = 0;
            try
            {
                intervenciones1tf = Model.Intervenciones.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes < 4).Sum(p => p.Atenciones);
                valorEgresos1Tf = egresos.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Egreso.Mes < 4).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                valorReintegros1Tf = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes < 4).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
        
            }
            catch{
                intervenciones1tf = 0;
                valorEgresos1Tf = 0;
                valorReintegros1Tf = 0;
            }
            if(intervenciones1tf == 0){
                resultado1t = 0;               
            }
            else{
                if (valorSub == 0)
                {
                    resultado1t = 0;
                }
                else
                {
                    resultado1t = (valorEgresos1Tf - valorReintegros1Tf) / intervenciones1tf;// ) / valorSub)*100;
                    resultado1t = (resultado1t / valorSub)*100;
                } 
            }  
        }
         <td class="por100"> @( (resultado1t).ToString("0.#0")) %</td>

                @{
             intervenciones1tf =0;
             valorEgresos1Tf = 0;
             valorReintegros1Tf = 0;
            valorSub = (int)ViewBag.ValorSubvencion;
             resultado1t = 0;
            try
            {
                intervenciones1tf = Model.Intervenciones.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes >= 4 && p.Mes <= 6).Sum(p => p.Atenciones);
                valorEgresos1Tf = egresos.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Egreso.Mes >= 4 && d.Egreso.Mes <= 6).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                valorReintegros1Tf = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes >= 4 && d.Mes <= 6).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
        
            }
            catch{
                intervenciones1tf = 0;
                valorEgresos1Tf = 0;
                valorReintegros1Tf = 0;
            }
            if(intervenciones1tf == 0){
                resultado1t = 0;               
            }
            else{
                if (valorSub == 0)
                {
                    resultado1t = 0;
                }
                else
                {
                    resultado1t = (valorEgresos1Tf - valorReintegros1Tf) / intervenciones1tf;// ) / valorSub)*100;
                    resultado1t = (resultado1t / valorSub)*100;
                } 
            }  
        }
         <td class="por100"> @( (resultado1t).ToString("0.#0")) %</td>
        <td class="active"></td>
                @{
             intervenciones1tf =0;
             valorEgresos1Tf = 0;
             valorReintegros1Tf = 0;
            valorSub = (int)ViewBag.ValorSubvencion;
             resultado1t = 0;
            try
            {
                intervenciones1tf = Model.Intervenciones.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes >= 7 && p.Mes <= 9).Sum(p => p.Atenciones);
                valorEgresos1Tf = egresos.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Egreso.Mes >= 7 && d.Egreso.Mes <= 9).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                valorReintegros1Tf = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes >= 7 && d.Mes <= 9).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
        
            }
            catch{
                intervenciones1tf = 0;
                valorEgresos1Tf = 0;
                valorReintegros1Tf = 0;
            }
            if(intervenciones1tf == 0){
                resultado1t = 0;               
            }
            else{
                if (valorSub == 0)
                {
                    resultado1t = 0;
                }
                else
                {
                    resultado1t = (valorEgresos1Tf - valorReintegros1Tf) / intervenciones1tf;// ) / valorSub)*100;
                    resultado1t = (resultado1t / valorSub)*100;
                } 
            }  
        }
         <td class="por100"> @( (resultado1t).ToString("0.#0")) %</td>
                @{
             intervenciones1tf =0;
             valorEgresos1Tf = 0;
             valorReintegros1Tf = 0;
            valorSub = (int)ViewBag.ValorSubvencion;
             resultado1t = 0;
            try
            {
                intervenciones1tf = Model.Intervenciones.Where(p => p.Periodo == @ViewBag.Periodo).Where(p => p.Mes >= 10 && p.Mes <= 12).Sum(p => p.Atenciones);
                valorEgresos1Tf = egresos.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Egreso.Mes >= 10 && d.Egreso.Mes <= 12).Where(d => d.Egreso.Periodo == @ViewBag.Periodo).Sum(d => d.Monto);
                valorReintegros1Tf = reintegros.Where(d => d.Cuenta.ProResultado == 2).Where(d => d.Mes >= 10 && d.Mes <= 12).Where(d => d.Periodo == @ViewBag.Periodo).Sum(d => d.Monto_Ingresos);
        
            }
            catch{
                intervenciones1tf = 0;
                valorEgresos1Tf = 0;
                valorReintegros1Tf = 0;
            }
            if(intervenciones1tf == 0){
                resultado1t = 0;               
            }
            else{
                if (valorSub == 0)
                {
                    resultado1t = 0;
                }
                else
                {
                    resultado1t = (valorEgresos1Tf - valorReintegros1Tf) / intervenciones1tf;// ) / valorSub)*100;
                    resultado1t = (resultado1t / valorSub)*100;
                } 
            }  
        }
         <td class="por100"> @( (resultado1t).ToString("0.#0")) %</td>
        <td class="active"></td>
    </tr>
   
</table>