@model IEnumerable<SAG2.Models.Cuenta>
@{
    ViewBag.Title = "Control Presupuestario";
    Layout = null;
    List<SAG2.Models.DetallePresupuesto> dp = new List<SAG2.Models.DetallePresupuesto>();
    List<SAG2.Models.Movimiento> ingresos = new List<SAG2.Models.Movimiento>();
    List<SAG2.Models.DetalleEgreso> egresos = new List<SAG2.Models.DetalleEgreso>();
    List<SAG2.Models.Movimiento> reintegros = new List<SAG2.Models.Movimiento>();
    SAG2.Models.SAG2DB db = new SAG2.Models.SAG2DB();
    //int proyectoid = ViewBag.pr_id;
    
   // string Proyecto = ((SAG2.Models.Proyecto)Session["Proyecto"]).NombreLista;
    //string proyecto_file = Proyecto.Replace(" ", string.Empty);
    List<int> Ingresos = (List<int>)@ViewBag.MovIngresos;
    List<int> Egresos = (List<int>)@ViewBag.MovEgresos;
    List<int> Reintegros = (List<int>)ViewBag.MovReintegros;
    List<int> PreIngresos = (List<int>)ViewBag.PreIngresos;
    List<int> PreEgresos = (List<int>)ViewBag.PreEgresos;
    SAG2.Models.Cuenta cuentaAnterior = new SAG2.Models.Cuenta();
    bool totalIngresos = false;
    int mes_inicio = ViewBag.tri, periodo_inicio = 0; 
    bool subtotales = false;
    try
    {
        dp = (List<SAG2.Models.DetallePresupuesto>)@ViewBag.Detalle;
        ingresos = (List<SAG2.Models.Movimiento>)@ViewBag.Ingresos;
        reintegros = (List<SAG2.Models.Movimiento>)@ViewBag.Reintegros;
        egresos = (List<SAG2.Models.DetalleEgreso>)@ViewBag.Egresos;
        mes_inicio = ViewBag.tri; 
        periodo_inicio = Int32.Parse(ViewBag.Periodo_Inicio);
    }
    catch (Exception)
    { }
    int tr = 0;
    
    int j = 0;
    var Meses = new string[12]
    {
	    "Ene.",
	    "Feb.",
	    "Mar.",
	    "Abr.",
	    "May.",
	    "Jun.",
	    "Jul.",
	    "Ago.",
	    "Sep.",
	    "Oct.",
	    "Nov.",
	    "Dic."
	};

    var celdas = new string[]
    {
	    "", "A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","AA","AB","AC","AD","AE","AF","AG","AH","AI","AJ","AK","AL","AM","AN","AO","AP","AQ","AR","AS","AT","AU","AV","AW","AX","AY","AZ","BA","BB","BC","BD","BE","BF","BG","BH","BI","BJ","BK","BL","BM","BN","BO","BP","BQ","BR","BS","BT","BU","BV","BW","BX","BY","BZ", "CA", "CB", "CC", "CD"
	};
    var glosaresumen = new string[]
    {
     "", "Ingresos","Personal","Funcionamiento","Apoyo T&eacute;cnico","Apoyo a Beneficiarios","Inversi&oacute;n","Financiamiento"
   
    };



    /*foreach (SAG2.Models.Proyecto Proyectos2 in ViewBag.Proyectos)
    {
        if (proyectoid == Proyectos2.ID)
        {
            Proyecto = Proyectos2.NombreLista;

        }
    }*/
    string proyecto_file = "Excel";
    
    
    Response.Clear();
    Response.Buffer = true;
    Response.ContentType = "application/vnd.ms-excel";
    Response.Charset = "utf-8";
    Response.AddHeader("Content-Disposition", "attachment;filename=CONTROL.PRESUP-" + proyecto_file + "-TRIMESTRAL-" + DateTime.Now.ToShortDateString() + ".xls");
}
<!DOCTYPE html>

<html>
<head>
    <title>Control Presupuestario</title>
    <style>
       .textConcepto{
            mso-number-format:"\@@"; /*force text*/
            white-space: nowrap;
            text-align: left;
            mso-protection:locked;
        }
        .text{
            mso-number-format:"\@@"; /*force text*/
            white-space: nowrap;
            text-align: center;
            mso-protection:locked;
        }

        .por100 {
            white-space: nowrap;
            mso-number-format:"Percent";
            text-align: right;
            mso-number-format:"\[Black\]\#\,\#\#0\.00%\;\[Red\]\\-\#\,\#\#0\.00%\;0\.00%";
            vertical-align: middle;
        }

        .num {
            white-space: nowrap;
            text-align: right;
            mso-number-format:"\[Black\]\#\,\#\#0_ \;\[Red\]\-\#\,\#\#0\;0";
            /*mso-number-format:"\#\,\#\#0\.000";*/
            /*mso-number-format: "[Azul][>0]#.##0";*/
            /*mso-number-format:"0";*/
        }
        .numT {
            white-space: nowrap;
            text-align: right;
            mso-number-format:"\[Black\]\#\,\#\#0_ \;\[Red\]\-\#\,\#\#0\;0";
            font-weight: 700;
            /*mso-number-format:"\#\,\#\#0\.000";*/
            /*mso-number-format: "[Azul][>0]#.##0";*/
            /*mso-number-format:"0";*/
        }
    </style>
</head>
<body>
<table>
    <tr>
        <td><h2>Control Presupuestario </h2></td>
        <td colspan="6"><h3>Periodo @periodo_inicio @ViewBag.NombreLinea  @ViewBag.NombreTipoproyecto</h3></td>
    </tr>
</table>
@if (@ViewBag.NoHayPresupuesto != null)
{
        @Html.Raw(@ViewBag.NoHayPresupuesto);
}
else
{
    j = 0;
    using (Html.BeginForm())
    {
    <table align="center" cellspacing="0" cellpadding="3" width="100%" border="1">
        <tr>
            <th rowspan="2">
               Concepto
            </th>
             @{mes_inicio = ViewBag.tri;}
           @for (int i = 0; i < 3; i++)
            {
       
                    <th style="width: 55px;" colspan="4" class="@Html.Raw("Periodo" + mes_inicio)">@Html.Raw(Meses[(mes_inicio) - 1])</th>
                
                mes_inicio = mes_inicio + 1;
            }

            <th style="white-space: nowrap;" colspan="4">Totales</th>
        </tr>
        <tr>
           @{mes_inicio = ViewBag.tri;}

            @for (int i = 0; i < 3; i++)
            {
      
                    <th style="width: 55px;" class="@Html.Raw("Periodo" + mes_inicio)">Ppto. $</th>
                    <th style="width: 55px;" class="@Html.Raw("Periodo" + mes_inicio)">Real  $</th>
                    <th style="width: 55px;" class="@Html.Raw("Periodo" + mes_inicio)">Desv. $</th>
                    <th style="width: 55px;" class="@Html.Raw("Periodo" + mes_inicio)">Desv. %</th>
             mes_inicio = mes_inicio + 1;
                
            }
            <th style="white-space: nowrap;">Ppto. $</th>
            <th style="white-space: nowrap;">Real  $</th>
            <th style="white-space: nowrap;">Desv. $</th>
            <th style="white-space: nowrap;">Desv. %</th>
        </tr>
  @{
       @Html.Raw("<tr ><td  class=\"textConcepto\" style=\"text-align: right;\">&nbsp;" + "&nbsp;<b>Saldo Inicial<b></td>");
                                  tr = 2;
                           mes_inicio = ViewBag.tri; 
                           int saldoInicial = Int32.Parse(ViewBag.SaldoInicial.ToString());
                           int saldoInicialPre = Int32.Parse(ViewBag.SaldoInicial.ToString());
                           for (int ij = 0; ij < 3; ij++)
                           {
                               if (mes_inicio == ViewBag.tri)
                               {

                                   if (ViewBag.tri > 1)
                                   {
                                       int presupuestoEntrada = dp.Where(d => d.Cuenta.Tipo.Equals("I") && d.Cuenta.resumen > 0).Where(d => d.Mes < ViewBag.tri).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto);
                                       int presupuestoSalida = dp.Where(d => d.Cuenta.Tipo.Equals("E") && d.Cuenta.resumen > 0).Where(d => d.Mes < ViewBag.tri).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto);
                                       saldoInicialPre = presupuestoEntrada - presupuestoSalida;
                                       saldoInicialPre = saldoInicialPre + saldoInicial;

                                       int v_ingresos = ingresos.Where(d => d.Cuenta.resumen > 0).Where(d => d.Mes < ViewBag.tri).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                       int v_egresos = egresos.Where(d => d.Cuenta.resumen > 0).Where(d => d.Egreso.Mes < ViewBag.tri).Where(d => d.Egreso.Periodo == periodo_inicio).Sum(d => d.Monto);
                                       int v_reintegros = reintegros.Where(d => d.Cuenta.resumen > 0).Where(d => d.Mes < ViewBag.tri).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);

                                       v_egresos = v_egresos - v_reintegros;
                                       v_ingresos = v_ingresos - v_egresos;
                                       saldoInicial = saldoInicial + v_ingresos;
                                   }
                                   
                          @Html.Raw("<td class=\"numT\">" + (saldoInicialPre).ToString("#,##0") + "</td><td class=\"num\">" + (saldoInicial).ToString("#,##0") +"</td><td class=\"numT\">="+ celdas[tr+1] +"6 -"+celdas[tr]+"6  </td><td class=\"por100\">="+ celdas[tr+2] +"6 /"+celdas[tr]+"7</td>");
                            }else
                            {
                                @Html.Raw("<td class=\"numT\">="  + celdas[tr] + "18 </td><td  class=\"numT\">=" + celdas[tr+1] + "18 </td><td>="+ celdas[tr+5] +"6 -"+celdas[tr+4]+"6</td><td class=\"por100\">="+ celdas[tr+6] +"6 /"+celdas[tr+4]+"7</td>");
                               tr = tr + 4;
                           } 
                        
                           mes_inicio++;
                           }
                             @Html.Raw("<td class=\"numT\">" + (saldoInicialPre).ToString("#,##0") + "</td><td class=\"num\">" + (saldoInicial).ToString("#,##0") + "</td><td class=\"numT\">=" + celdas[tr + 5] + "6 -" + celdas[tr+4] + "6  </td><td class=\"por100\">="+ celdas[tr+6] +"6 /"+celdas[tr+4]+"6</td>"); 
                           }
             
                @for (int ix = 1; ix < 8; ix++)
                {
                    if (ix == 2)
                    {
                        @Html.Raw("<tr ><td  class=\"textConcepto\" style=\"text-align: center;\">&nbsp;" + "&nbsp;<b>Egresos<b></td>");

                    }
                    
                     if (ix == 3)
                            {
                                @Html.Raw("<tr ><td  class=\"textConcepto\">&nbsp;" + "&nbsp;<b>Operacion<b></td>");
                               
                     }
                    if (ix == 7)
                    {
                        @Html.Raw("<tr ><td  class=\"textConcepto\" style=\"text-align: right;\">&nbsp;" + "&nbsp;<b>Total Egresos<b></td>");
                        tr = 2;
                        for (int ij = 0; ij < 4; ij++)
                        {
                        @Html.Raw("<td class=\"num\">=SUMA(" + celdas[tr] + "9:" + celdas[tr] + "14) </td><td class=\"num\">=SUMA(" + celdas[tr +1] + "9:" + celdas[tr+1] + "14) </td><td class=\"numT\">=VALOR(DECIMAL(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2));0))</td><td class=\"por100\">="  + celdas[tr+2] + "15 / "  + celdas[tr] + "7 </td>");
                        tr = tr + 4;
                        }
                        @Html.Raw("</tr><tr ><td  class=\"textConcepto\" style=\"text-align: right;\">&nbsp;" + "&nbsp;<b>Resultado<b></td>");
                        tr = 2;
                        for (int ij = 0; ij < 4; ij++)
                        {
                           @Html.Raw("<td class=\"numT\">=" + celdas[tr] + "7 -" + celdas[tr] + "15 </td><td class=\"numT\">=" + celdas[tr + 1] + "7 -" + celdas[tr + 1] + "15 </td><td class=\"numT\">=VALOR(DECIMAL(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2));0))</td><td class=\"por100\">="  + celdas[tr+2] + "16 / "  + celdas[tr] + "7</td>");
                           tr = tr + 4;
                        }
                         @Html.Raw("</tr>");
                    }
                    @Html.Raw("<tr ><td  class=\"textConcepto\">&nbsp;" + "&nbsp;<b>" + @glosaresumen[ix] + "<b></td>");
                       
                        // Se imprimen valores mensuales
                        try
                        {
                            mes_inicio = ViewBag.tri; 
                            periodo_inicio = Int32.Parse(ViewBag.Periodo_Inicio);
                        }
                        catch (Exception)
                        { }
                        //periodo_actual = periodo_inicio;
                        int ttr = 2;
                        for (int i = 0; i < 3; i++)
                        { 
                    
                            if (ix == 1)
                            {
                                int valor_presupuesto = dp.Where(d => d.Cuenta.resumen == 1 || d.Cuenta.resumen == 2 || d.Cuenta.resumen == 3).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_ingresos = ingresos.Where(d => d.Cuenta.resumen == 1 || d.Cuenta.resumen == 2 || d.Cuenta.resumen == 3).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                int valor_egresos = egresos.Where(d => d.Cuenta.resumen == 1 || d.Cuenta.resumen == 2 || d.Cuenta.resumen == 3).Where(d => d.Egreso.Mes == mes_inicio).Where(d => d.Egreso.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_reintegros = reintegros.Where(d => d.Cuenta.resumen == 1 || d.Cuenta.resumen == 2 || d.Cuenta.resumen == 3).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                             
                                <td  class="num">@valor_presupuesto.ToString("#,##0")</td>
                                <td class="num">@valor_ingresos.ToString("#,##0") </td>
                                <td  class="num">=VALOR(DECIMAL(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2));0))</td>
                                <td class="por100">=SI(VALOR(INDIRECTO(DIRECCION(FILA();COLUMNA()-1)))=0;0;VALOR(SI(Y(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))=0;INDIRECTO(DIRECCION(FILA();COLUMNA()-3))=0);0;SI(INDIRECTO(DIRECCION(FILA();COLUMNA()-3))=0;-1;SI(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))=0;1;INDIRECTO(DIRECCION(FILA();COLUMNA()-1))/INDIRECTO(DIRECCION(FILA();COLUMNA()-3)))))))    </td>
                            
                            }

                            if (ix == 2)
                            {
                                //ttr = 2;
                                int valor_presupuesto = dp.Where(d => d.Cuenta.resumen == 4 || d.Cuenta.resumen == 5 ).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_ingresos = ingresos.Where(d => d.Cuenta.resumen == 4 || d.Cuenta.resumen == 5).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                int valor_egresos = egresos.Where(d => d.Cuenta.resumen == 4 || d.Cuenta.resumen == 5).Where(d => d.Egreso.Mes == mes_inicio).Where(d => d.Egreso.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_reintegros = reintegros.Where(d => d.Cuenta.resumen == 4 || d.Cuenta.resumen == 5).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                <td class="num">@valor_presupuesto.ToString("#,##0")</td>
                                <td class="num">@((valor_egresos-valor_reintegros).ToString("#,##0"))</td>
                                <td class="num">=VALOR(DECIMAL(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2));0))</td>
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "9 /" + celdas[ttr] + "7" )</td>
                            }

                            if (ix == 3)
                            {
                                int valor_presupuesto = dp.Where(d => d.Cuenta.resumen == 6 || d.Cuenta.resumen == 7 || d.Cuenta.resumen == 8 || d.Cuenta.resumen == 9 || d.Cuenta.resumen == 10 || d.Cuenta.resumen == 11 || d.Cuenta.resumen == 12 || d.Cuenta.resumen == 13 || d.Cuenta.resumen == 14 ).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_ingresos = ingresos.Where(d => d.Cuenta.resumen == 6 || d.Cuenta.resumen == 7 || d.Cuenta.resumen == 8 || d.Cuenta.resumen == 9 || d.Cuenta.resumen == 10 || d.Cuenta.resumen == 11 || d.Cuenta.resumen == 12 || d.Cuenta.resumen == 13 || d.Cuenta.resumen == 14 ).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                int valor_egresos = egresos.Where(d => d.Cuenta.resumen == 6 || d.Cuenta.resumen == 7 || d.Cuenta.resumen == 8 || d.Cuenta.resumen == 9 || d.Cuenta.resumen == 10 || d.Cuenta.resumen == 11 || d.Cuenta.resumen == 12 || d.Cuenta.resumen == 13 || d.Cuenta.resumen == 14 ).Where(d => d.Egreso.Mes == mes_inicio).Where(d => d.Egreso.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_reintegros = reintegros.Where(d => d.Cuenta.resumen == 6 || d.Cuenta.resumen == 7 || d.Cuenta.resumen == 8 || d.Cuenta.resumen == 9 || d.Cuenta.resumen == 10 || d.Cuenta.resumen == 11 || d.Cuenta.resumen == 12 || d.Cuenta.resumen == 13 || d.Cuenta.resumen == 14 ).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);

                                <td  class="num">@valor_presupuesto.ToString("#,##0")</td>
                                <td class="num">@((valor_egresos-valor_reintegros).ToString("#,##0"))</td>
                                <td class="num">=VALOR(DECIMAL(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2));0))</td>
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "11 /" + celdas[ttr] + "7" )</td>
                            
                            }

                            if (ix == 4)
                            {
                                int valor_presupuesto = dp.Where(d => d.Cuenta.resumen == 15 || d.Cuenta.resumen == 16 || d.Cuenta.resumen == 17 || d.Cuenta.resumen == 18 || d.Cuenta.resumen == 19).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_ingresos = ingresos.Where(d => d.Cuenta.resumen == 15 || d.Cuenta.resumen == 16 || d.Cuenta.resumen == 17 || d.Cuenta.resumen == 18 || d.Cuenta.resumen == 19).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                int valor_egresos = egresos.Where(d => d.Cuenta.resumen == 15 || d.Cuenta.resumen == 16 || d.Cuenta.resumen == 17 || d.Cuenta.resumen == 18 || d.Cuenta.resumen == 19).Where(d => d.Egreso.Mes == mes_inicio).Where(d => d.Egreso.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_reintegros = reintegros.Where(d => d.Cuenta.resumen == 15 || d.Cuenta.resumen == 16 || d.Cuenta.resumen == 17 || d.Cuenta.resumen == 18 || d.Cuenta.resumen == 19).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                <td  class="num">@valor_presupuesto.ToString("#,##0")</td>
                                <td class="num">@((valor_egresos-valor_reintegros).ToString("#,##0"))</td>
                                <td class="num">=VALOR(DECIMAL(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2));0))</td>
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "12 /" + celdas[ttr] + "7" )</td>

                            }

                            if (ix == 5)
                            {
                                int valor_presupuesto = dp.Where(d => d.Cuenta.resumen == 20 || d.Cuenta.resumen == 21 || d.Cuenta.resumen == 22 || d.Cuenta.resumen == 23 || d.Cuenta.resumen == 24 || d.Cuenta.resumen == 25 || d.Cuenta.resumen == 26).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_ingresos = ingresos.Where(d => d.Cuenta.resumen == 20 || d.Cuenta.resumen == 21 || d.Cuenta.resumen == 22 || d.Cuenta.resumen == 23 || d.Cuenta.resumen == 24 || d.Cuenta.resumen == 25 || d.Cuenta.resumen == 26).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                int valor_egresos = egresos.Where(d => d.Cuenta.resumen == 20 || d.Cuenta.resumen == 21 || d.Cuenta.resumen == 22 || d.Cuenta.resumen == 23 || d.Cuenta.resumen == 24 || d.Cuenta.resumen == 25 || d.Cuenta.resumen == 26).Where(d => d.Egreso.Mes == mes_inicio).Where(d => d.Egreso.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_reintegros = reintegros.Where(d => d.Cuenta.resumen == 20 || d.Cuenta.resumen == 21 || d.Cuenta.resumen == 22 || d.Cuenta.resumen == 23 || d.Cuenta.resumen == 24 || d.Cuenta.resumen == 25 || d.Cuenta.resumen == 26).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                
                                <td class="num">@valor_presupuesto.ToString("#,##0")</td>
                                <td class="num">@((valor_egresos-valor_reintegros).ToString("#,##0"))</td>
                                <td class="num">=VALOR(DECIMAL(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2));0))</td>
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "13 /" + celdas[ttr] + "7" )</td>                           
                            } 
                            if (ix == 6)
                            {
                                int valor_presupuesto = dp.Where(d => d.Cuenta.resumen == 27 || d.Cuenta.resumen == 28 ).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_ingresos = ingresos.Where(d => d.Cuenta.resumen == 27 || d.Cuenta.resumen == 28).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                int valor_egresos = egresos.Where(d => d.Cuenta.resumen == 27 || d.Cuenta.resumen == 28).Where(d => d.Egreso.Mes == mes_inicio).Where(d => d.Egreso.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_reintegros = reintegros.Where(d => d.Cuenta.resumen == 27 || d.Cuenta.resumen == 28).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                <td  class="num">@valor_presupuesto.ToString("#,##0")</td>
                                <td class="num">@((valor_egresos-valor_reintegros).ToString("#,##0"))</td>
                                <td class="num">=VALOR(DECIMAL(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2));0))</td>
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "14 /" + celdas[ttr] + "7" )</td>
                            }
                            
                                if (ix == 7)
                            {
                                int valor_presupuesto = dp.Where(d => d.Cuenta.resumen == 29 || d.Cuenta.resumen == 31 ).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto);
                                int valor_ingresos = ingresos.Where(d => d.Cuenta.resumen == 29 || d.Cuenta.resumen == 31).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                int valor_egresos = egresos.Where(d => d.Cuenta.resumen == 30 || d.Cuenta.resumen == 30).Where(d => d.Egreso.Mes == mes_inicio).Where(d => d.Egreso.Periodo == periodo_inicio).Sum(d => d.Monto);
                               // int valor_reintegros = reintegros.Where(d => d.Cuenta.resumen == 30 ).Where(d => d.Mes == mes_inicio).Where(d => d.Periodo == periodo_inicio).Sum(d => d.Monto_Ingresos);
                                <td class="num">@valor_presupuesto.ToString("#,##0")</td>
                                <td class="num">@((valor_ingresos - valor_egresos).ToString("#,##0"))</td>
                                <td class="num">=VALOR(DECIMAL(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2));0))</td>
                                <td  class="por100">=@Html.Raw( celdas[ttr + 2] + "17 /" + celdas[ttr] + "7" )</td>
                            }
                            ttr = ttr + 4;
                            mes_inicio++;
                        }
                        <td class="num" >=@for (int i = 1; i <= 3; i++)
                        {     
                            @Html.Raw("VALOR(INDIRECTO(DIRECCION(FILA();COLUMNA()-"+(i*4)+")))+");
                        }0</td>
                        <td class="num" >=@for (int i = 1; i <= 3; i++)
                        {     
                            @Html.Raw("VALOR(INDIRECTO(DIRECCION(FILA();COLUMNA()-"+(i*4)+")))+");
                        }0</td>
                
                       
                        <td class="num" >=VALOR(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))-INDIRECTO(DIRECCION(FILA();COLUMNA()-2)))</td>
                        
                      
                            if (ix == 1)
                            {
                             
                                <td class="por100">=SI(VALOR(INDIRECTO(DIRECCION(FILA();COLUMNA()-1)))=0;0;VALOR(SI(Y(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))=0;INDIRECTO(DIRECCION(FILA();COLUMNA()-3))=0);0;SI(INDIRECTO(DIRECCION(FILA();COLUMNA()-3))=0;-1;SI(INDIRECTO(DIRECCION(FILA();COLUMNA()-1))=0;1;INDIRECTO(DIRECCION(FILA();COLUMNA()-1))/INDIRECTO(DIRECCION(FILA();COLUMNA()-3)))))))    </td>
                            
                            }

                            if (ix == 2)
                            {
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "9 /" + celdas[ttr] + "7" )</td>
                            }

                            if (ix == 3)
                            {
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "11 /" + celdas[ttr] + "7" )</td>
                            
                            }

                            if (ix == 4)
                            {
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "12 /" + celdas[ttr] + "7" )</td>

                            }

                            if (ix == 5)
                            {
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "13 /" + celdas[ttr] + "7" )</td>                           
                            } 
                            if (ix == 6)
                            {
                                <td class="por100">=@Html.Raw( celdas[ttr + 2] + "14 /" + celdas[ttr] + "7" )</td>
                            }
                            
                                if (ix == 7)
                            {
                                <td  class="por100">=@Html.Raw( celdas[ttr + 2] + "17 /" + celdas[ttr] + "7" )</td>
                            }
                        
                        
                        @Html.Raw("</tr>");
                    }
               
                            @{
                            @Html.Raw("<tr ><td  class=\"text\" style=\"text-align: right;\">&nbsp;" + "&nbsp;<b>Saldo Final<b></td>");
                            tr = 2;
                            mes_inicio = ViewBag.tri;
                         
                           for (int ij = 0; ij < 4; ij++)
                           {
                          //=B6+B16+B17
                                @Html.Raw("<td class=\"numT\">="  + celdas[tr] + "6 + "  + celdas[tr] + "16 + "  + celdas[tr] + "17 </td><td  class=\"numT\">="  + celdas[tr +1 ] + "6 + "  + celdas[tr +1] + "16 + "  + celdas[tr +1] + "17 </td><td class=\"numT\">="  + celdas[tr+1] + "18 - "  + celdas[tr] + "18 </td><td  class=\"por100\">="  + celdas[tr+2] + "18 / "  + celdas[tr] + "7</td>");
                               tr = tr + 4;
                          
                           mes_inicio++;
                           }   
                           } 
                              
                                }
                 
                    
        </table>
    }
}
</body>
</html>