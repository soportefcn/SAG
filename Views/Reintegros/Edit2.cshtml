@model SAG2.Models.Movimiento
@using SAG2.Models
@{
    ViewBag.Title = "Modificar";
    DetalleEgreso detalle = (DetalleEgreso)@ViewBag.detalle;
    var descripcion = Model.Descripcion;
    Usuario Usuario = (Usuario)Session["Usuario"];
    DateTime Fecha = new DateTime();
    Int32 Monto_Egresos = 0;
    try{
        Monto_Egresos = detalle.Egreso.Monto_Egresos;
    }catch(Exception){
        Monto_Egresos = 0;
    }
    var Meses = new string[12]
    {
	    "Enero",
	    "Febrero",
	    "Marzo",
	    "Abril",
	    "Mayo",
	    "Junio",
	    "Julio",
	    "Agosto",
	    "Septiembre",
	    "Octubre",
	    "Noviembre",
	    "Diciembre"
	};
    try
    {
        Fecha = new DateTime((int)Session["Periodo"], (int)Session["Mes"], DateTime.Now.Day);
    }
    catch (Exception)
    {
        try
        {
            Fecha = new DateTime((int)Session["Periodo"], (int)Session["Mes"], 30);
        }
        catch (Exception)
        {
            try
            {
                Fecha = new DateTime((int)Session["Periodo"], (int)Session["Mes"], 29);
            }
            catch (Exception)
            {
                Fecha = new DateTime((int)Session["Periodo"], (int)Session["Mes"], 28);
            }
        }
    }
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<style>
/* Conversion a mayusculas */
input[type="text"], textarea
{
    text-transform: uppercase;
}
</style>
@if (ViewBag.Imprimir != null && ViewBag.Imprimir.Equals("true"))
{ 
    <script type="text/javascript" language="javascript">
        window.open("../../Imprimir/Reintegro/@Html.Raw(Model.ID.ToString())", 'Comprobante de Reintegro', 'width=800,height=600,scrollbars=yes,menubar=no,toolbars=no');
    </script>
}
<div id="SAGBox">

    <div class="panel panel-default">
  <div class="panel-heading"><h3><b>Registro de Comprobante de Reintegro</b></h3></div>
   <div class="panel-body">
   

        @if (Model.Nulo == null || Model.Nulo.Equals("N"))
        {
             <div class="btn-group">
       <a href="./Index" id="linkGeneral" class="btn btn-default">GENERAL</a>
       <a href="./Index" class="linkDetalle btn btn-default" editar="1">DETALLE</a>
             </div>
        }

    <div id="contenido" class="cuentacorriente egreso">
<fieldset id="general">
  <p>&nbsp;</p>
          
@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    @Html.Raw(@ViewBag.Mensaje)
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.ProyectoID)
    @Html.HiddenFor(model => model.CuentaCorrienteID)
    @Html.HiddenFor(model => model.Periodo)
    @Html.HiddenFor(model => model.Mes)
    @Html.HiddenFor(model => model.TipoComprobanteID)
    @Html.HiddenFor(model => model.FechaCreacion)
    @Html.Hidden("MontoOriginal", "0")

         <div class ="form-group form-inline">
            <div class="form-group" style="margin-right: 20px;">
                <label>Nº Comprobante</label>
            </div>
            <div class="form-group" style="margin-right: 350px;">
            <input id="NumeroComprobante" name="NumeroComprobante" class="form-control" type="text" readonly="readonly" value="@Model.NumeroComprobante.ToString()" size="@Model.NumeroComprobante.ToString().Length" />        
            </div>     
        <div class="form-group" style="margin-right: 30px;">
            @Html.LabelFor(model => model.Fecha, "Fecha Comprobante")
        </div>
        <div class="form-group">
             @Html.TextBoxFor(model => model.Fecha, new { @class = "form-control calendario_mov", @Value = ((DateTime)Model.Fecha).ToShortDateString(), @readonly = "readonly" })
        </div>
      </div>   

       <!-- INICIO DATOS EGRESO -->
        <div class ="form-group form-inline">
            <div class="form-group" style="margin-right: 58px;">
                @Html.LabelFor(model => model.DetalleEgresoID, "Nº Egreso")
            </div>
            <div class="form-group" style="margin-right: 320px;">
            @try
            {
                @Html.HiddenFor(model => model.DetalleEgresoID, Model.DetalleEgresoID)
                 @Html.Hidden("MontoI")
                @Html.TextBox("ComprobanteEgreso", null, new { @class = "form-control segre", @readonly = "readonly", @Value = detalle.Egreso.NumeroComprobante, @size = "3" })
                if (Model.Nulo == null || Model.Nulo.Equals("N"))
                {
                    <img id="BuscarComprobanteEgresoID" src="@Url.Content("~/Content/Images/Buscar2.png")" alt="Buscar" title="Buscar" style="cursor: pointer; vertical-align: middle;" />
                }
            }
            catch (Exception)
            {
                @Html.TextBox("ComprobanteEgreso", null, new {  @class = "form-control segre", @readonly = "readonly", @Value = "", @size = "3" })
                if (Model.Nulo == null || Model.Nulo.Equals("N"))
                {
                    <img id="BuscarComprobanteEgresoID" src="@Url.Content("~/Content/Images/Buscar2.png")" alt="Buscar" title="Buscar" style="cursor: pointer; vertical-align: middle;" />
                
                }
            }
            </div>
            <div class="form-group" style="margin-right: 65px;">
                @Html.Label("Fecha Egreso")
            </div>
            <div class="form-group">
            @try
            {
                @Html.TextBox("fechaEgreso", null, new { @class = "form-control", @readonly = "readonly", @Value = detalle.Egreso.Fecha.Value.ToShortDateString() })
            }
            catch (Exception)
            {
                @Html.TextBox("fechaEgreso", null, new { @class = "form-control", @readonly = "readonly", @Value = "" })
            }
            </div>
        </div>

        <div >
     <div class="form-group">
                @try
                {
                    Monto_Egresos = detalle.Egreso.Monto_Egresos;


                }

                catch (Exception)
                {

                <div id="msgError" class="alert alert-danger2 centrado"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> ERROR EGRESO ASOCIADO NO FUE ENCONTRADO. </div>

                }
                </div>
        </div>
        <!-- FIN DATOS EGRESO -->

         <div class ="form-group form-inline">
            <div class="form-group" style="margin-right: 20px;">
            @Html.Label("Cuenta contable")
        </div>
        <div class="form-group">
            <select class="form-control" name="CuentaID" id="CuentaID">
                @Html.Raw(@ViewBag.Arbol)
            </select>
        </div>
             </div>
              <div class="form-inline form-group>">
            <div class="form-group" style="margin-right: 42px;">
                @Html.Label("Beneficiario")
                    </div>
                    <div class="form-group tipobeneficiario">
                        <span id="InfoBeneficiario">
                            @Html.TextBoxFor(model => model.Rut, new { @class = "form-control", @maxlength = "8", @style = "width: 100px;", @readonly = "readonly", @Value = @ViewBag.brut })-@Html.TextBoxFor(model => model.DV, new { @id = "DVBuscar", @class = "form-control", @style = "width: 70px;", @maxlength = "1", @readonly = "readonly" }) 

                            @Html.TextBoxFor(model => model.Beneficiario, new { @style = "width: 350px;", @class = "form-control", @readonly = "readonly", @Value = @ViewBag.bnombre })
                        </span>
                    </div>
                </div>
                    <div class ="form-group form-inline" style="margin-top:10px;">
                    <div class="form-group" style="margin-right: 65px;">
                         @Html.LabelFor(model => model.Monto_Ingresos, "Monto $")
                    </div>
                    <div class="form-group" style="margin-right: 30px;">
                        @{
                            
                            try { }catch{}   
                        } 
                         <input id="eMonto" type="text" readonly="true" value="@Monto_Egresos" class="form-control">
                    </div>

                    <div class="form-group" style="margin-right: 65px;">
                         @Html.LabelFor(model => model.Monto_Ingresos, "Monto $")
                    </div>
                    <div class="form-group" style="margin-right: 30px;">
                         @Html.TextBoxFor(model => model.Monto_Ingresos, new { @class = "form-control", @readonly = "true" })
                    </div>
                </div>
    
        <div class="form-group">
            @if (Model.Nulo == null || Model.Nulo.Equals("N"))
            {
                @Html.TextArea("Descripcion", new { @class = "form-control", @value = Model.Descripcion })
            }
            else
            {
                @Html.Raw("<textarea name=\"Descripcion\" id=\"Descripcion\" cols=\"60\" rows=\"7\">COMPROBANTE NULO</textarea>")
            }
        </div>
    
            if (Usuario.esAdministrador)
            {
       <div class="form-group form-inline">
         <div class="form-group" style="margin-right: 15px;">
            Período
        </div>
        <div class="form-group" style="margin-right: 15px;">
            <input class="form-control" type="text" value="@Model.Periodo" readonly="readonly" />
        </div>
         <div class="form-group" style="margin-right: 15px;">
            Mes
        </div>
        <div class="form-group">
            <input class="form-control" type="text" value="@Meses[@Model.Mes - 1]" readonly="readonly" />
        </div>
           </div>
            }

            if (Model.Nulo == null || Model.Nulo.Equals("N"))
            {

            }
             <div class="panel-footer"> 
	    <div  style ="width: 500px ; display:inline-block">
              <a class="btn btn-success" data-toggle="tooltip" data-placement="top" title="Buscar" href="../Index" onclick="window.open(this.href, 'Buscar','width=1100,height=350,scrollbars=yes,menubar=no,toolbars=no'); return false"><span class ="fa fa-search fa-lg"></span></a>
           <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Nuevo" href="@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Reintegros/Create2"><span class ="fa fa-file-o  fa-lg"></span></a>
           <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Imprimir" href="../../Imprimir/Reintegro/@Html.Raw(Model.ID.ToString())" onclick="window.open(this.href, 'Comprobante de Reintegro','width=800,height=600,scrollbars=yes,menubar=no,toolbars=no'); return false"><span class ="fa fa-print fa-lg"></span></a>
            @if (Model.Nulo == null || Model.Nulo.Equals("N"))
            {
                <a class="btn btn-warning" data-toggle="tooltip" data-placement="top" title="Anular" href="../Anular/@Html.Raw(Model.ID.ToString())" onclick="return confirm('Realmente desea anular este reintegro?Si lo hace, PERDERÁ el correlativo.');"><span class ="fa fa-times fa-lg"></span></a>
                if (@ViewBag.UltimoIdentificador != null && @ViewBag.UltimoIdentificador.Equals(Model.ID.ToString()))
                {
                    <a class="btn btn-danger" data-toggle="tooltip" data-placement="top" title="Eliminar" href="../Delete/@Html.Raw(Model.ID.ToString())" onclick="return confirm('Realmente desea eliminar este reintegro? Si lo hace, podrá utilizar nuevamente este correlativo.');"><span class ="fa fa-trash-o fa-fw"></span></a>
                }
            }
            <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Cancelar" href="@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Reintegros/Create2"><span class ="fa fa-undo fa-fw"></span></a>
        
        </div>
          <div style="float :right;width:200px;display:inline-block">
     @if (Model.Nulo == null || Model.Nulo.Equals("N"))
     {
            <input class="btn btn-primary" type="submit" value="Guardar" />
     }
      </div>
      </div>

      

            
}
    <br />
    </fieldset>
    <fieldset id="detalle">
       <p>&nbsp;</p> 
@using (Html.BeginForm())
{
        @Html.ValidationSummary(true)
        @Html.Hidden("DetalleReintegroIndex", null);
     @Html.Hidden("MontoOriginal", null);
    
        <div class="form-group form-inline">
        <div class="form-group" style="margin-left: 7px; margin-right:10px">
            @Html.Label("Tipo Documento")
        </div>
        <div class="form-group">

             @Html.DropDownList("DocumentoIDD", null, "-- SELECCIONE TIPO DOCUMENTO --", new { @class = "form-control" })
        </div>
        </div>
    
             <div class="form-group form-inline">
            <div class="form-group" style="margin-left: 7px; margin-right:10px">
                 @Html.Label("Nº Documento")
        <br />
                    <input id="NDocumentoD" name="NDocumentoD" type="text" value="" class="valid validarDocumento form-control">
        </div>

        <div class="form-group">
            @Html.Label("Monto $")
        <br />
            @*Html.TextBox("Monto")*@
            <input id="Monto" name="Monto" type="text" value="" class="valid validarCeroN form-control">
        </div>
             
        <div class="form-group">
            @Html.Label("Emisión")
        <br />
            @Html.TextBox("FechaEmision", Fecha.ToShortDateString(), new { @class = "calendario form-control" })
        </div>
             </div>
          <div class="form-group form-inline">
        <div class="form-group" style="margin-left: 7px; margin-right:10px">
            @Html.Label("Cuenta")
        </div>
        <div class="form-group">
            <select name="CuentaIDD" id="CuentaIDD" class="form-control">
                <option></option>
                @Html.Raw(@ViewBag.Arbol)
            </select>
        </div>
          </div>
      <div class="form-group">
            <div class="alert alert-success" role="alert"><label id="texto" ></label></div>
        </div>
    
                               
             <div class="btn-group">
                <input class="btn btn-primary" type="button" value="Guardar línea" id="GuardarLineaR" class="boton" />
                <input class="btn btn-danger" type="button" value="Borrar línea" id="BorrarLineaR" class="boton" />
            </div>
                                    
        
        <p>&nbsp;</p>
       
    
        <table style="margin: 0; padding: 0;">
            <tr style="margin: 0; padding: 0;">
                <td style="margin: 0; padding: 0;"><h3 style="margin: 0; padding: 0;">Detalle del Reintegro</h3></td>
                <td style="margin: 0; padding: 0; text-align: right;">Haga clic en una línea para ver información</td>
            </tr>
        </table>
    <iframe src="@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Reintegros/ListarLineas/?t=@Model.ID" width="100%" height="200px" id="iframeDetalle" frameborder="0" scrolling="auto"></iframe>
       
}
        </fieldset>
    </div>
    </div> 
 
    </div>
</div>
<script>
    $(document).ready(function () {

        $(".validarCeroN").change(function () {
            var ceID = $('#CuentaID').val();
            if(ceID != 60){
              var monto = $(this).val();
              if (monto != "") {
                  if (monto > 0) {
                      return true;
                  }
              }
              alert("Debe ingresar un monto mayor a cero.");
              $(this).val("");
              $(this).focus();
            }
           
        });
        $("#BorrarLineaR").click(function () {

            var monto = new Number($("#Monto").val());
            var montoEgreso = new Number($("#Monto_Ingresos").val());
            // Guardamos linea del formulario si opcion es otro

            $.post("@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Reintegros/BorrarLinea", $("#detalle form").serialize(),
            function (data) {
                if (data == "OK") {
                    $.get('@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Data/SumaDetalleReintegro', function (data) {
                        $("#DetalleReintegroIndex").val("");
                        $('#Monto_Ingresos').val(data);
                        $('body').css('opacity', '0.25');
                        alert("Detalle borrada con exito!");
                        $('body').css('opacity', '1');
                    });
                } else {
                    $('body').css('opacity', '0.25');
                    alert("Ocurrió un error al borrar el detalle.");
                    $('body').css('opacity', '1');
                    return false;
                }
            })
            .success(function () { })
            .error(function () { })
            .complete(function () { });




            var currSrc = $("#iframeDetalle").attr("src");
            $("#iframeDetalle").attr("src", "");
            $("#iframeDetalle").attr("src", currSrc);
            $("#iframeDetalle").show();

            $("#iframeDetalle").attr("src", "");
            $("#iframeDetalle").attr("src", currSrc);
            $("#iframeDetalle").show();


        });
        $("#GuardarLineaR").click(function () {
            
            if ($("#CuentaIDD").val() == "" && $(".egreso #Origen").val() != "ff") {
                $('body').css('opacity', '0.25');
                alert("Debe seleccionar una cuenta para guardar el detalle.");
                $('body').css('opacity', '1');
                $("#CuentaIDD").focus();
                return false;
            }
            var monto = new Number($("#Monto").val());
            var MontoOriginal = new Number($("#MontoOriginal").val());
            var montoEgreso = new Number($("#eMonto").val());
            var montoR = $("#MontoI").val();
            var cuenta = new Number(($("#CuentaID").val()));

            if (cuenta != 60) {

            } else {
                if (montoEgreso == 0) {
                    montoEgreso = montoR;

                }
                var montoTotal = montoEgreso - (monto - MontoOriginal);
                if (montoTotal < 0) {
                    alert("Supera el monto del Documento");
                    exit;
                }


            }
 
            $.post("@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Reintegros/GuardarLinea", $("#detalle form").serialize(),
      function (data) {
          if (data == "OK") {
              $('#Monto_Ingresos').val(montoTotal);
              $('body').css('opacity', '0.25');
              alert("Línea guardada con exito!");
              $('body').css('opacity', '1');
              $("#DocumentoIDD").val("");
              $("#NDocumentoD").val("");
              $("#Monto").val("");
              $("#CuentaIDD").val("");
              $("#DetalleReintegroIndex").val("");
              $("#MontoOriginal").val("");
          } else {
              $('body').css('opacity', '0.25');
              alert(data);
              $('body').css('opacity', '1');
              return false;
          }
      })
            var currSrc = $("#iframeDetalle").attr("src");
            $("#iframeDetalle").attr("src", "");
            $("#iframeDetalle").attr("src", currSrc);
            $("#iframeDetalle").show();

            $("#iframeDetalle").attr("src", function (i, val) { return val; });

            try {
                $('#iframeDetalle').contentWindow.location.reload(true);
                $('#iframeDetalle').contentWindow.location.reload(true);
                $('#iframeDetalle').contentWindow.location.reload(true);
                $('#iframeDetalle').contentWindow.location.reload(true);
                $('#iframeDetalle').contentWindow.location.reload(true);
                $('#iframeDetalle').contentWindow.location.reload(true);
            } catch (err) { }
        })

       
    });
</script>