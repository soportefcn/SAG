@model IEnumerable<SAG2.Models.Movimiento>
@using SAG2.Models;
@{
    Layout = "~/Views/Shared/_Layoutinf.cshtml";
    ViewBag.Title = "Conciliación Bancaria";
    var Saldo = 0;
    SAG2.Models.SAG2DB db = new SAG2.Models.SAG2DB();

    if (@ViewBag.SaldoInicial != null && !@ViewBag.SaldoInicial.Equals("0"))
    {
        Saldo = Int32.Parse(@ViewBag.SaldoInicial.ToString());
    }

    SAG2.Models.CuentaCorriente CuentaCorriente = (SAG2.Models.CuentaCorriente)@ViewBag.cuentaCorriente;
    int periodoActual = (int)Session["Periodo"];
    int mesActual = (int)Session["Mes"];
    Usuario Usuario = (Usuario)Session["Usuario"];
    int PeriodoSeleccionado = (int)@ViewBag.periodo;
    int mesSeleccionado = (int)@ViewBag.mes;
    bool esSupervisor = false;

}
@{
    var Meses = new string[12]
    {
            "Enero",
            "Febrero",
            "Marzo",
            "Abril",
            "Mayo",
            "Junio",
            "Julio",
            "Agosto",
            "Septiembre",
            "Octubre",
            "Noviembre",
            "Diciembre"
    };

    try
    {
        esSupervisor = (bool)@ViewBag.esSupervisor;
    }
    catch (Exception)
    {
        esSupervisor = false;
    }

    var PuedeConciliar = true;

    /* Por peticion de Judith se autoriza conciliar a las supervisoras */
    /* if (periodoActual != PeriodoSeleccionado || mesActual != mesSeleccionado || esSupervisor) */
    if (periodoActual != PeriodoSeleccionado || mesActual != mesSeleccionado)
    {
        PuedeConciliar = false;
    }
}


@if (ViewBag.Imprimir != null && ViewBag.Imprimir.Equals("true"))
{ 
    <script type="text/javascript" language="javascript">
        $(document).ready(function () {
            var periodo = $("#Periodo").val();
            var mes = $("#Mes").val();
            window.open("/SAG_5/Imprimir/Conciliacion?Periodo=" + periodo + '&Mes=' + mes, 'Conciliacion');
        });
	</script>
}
<div id="SAGBox">
<h2>Conciliación bancaria</h2>
@using (Html.BeginForm())
{
<table border="0" class="sin-hover">
    <tr>
        <td>
                      <fieldset style="width: @if (Usuario.esAdministrador)
                        {@Html.Raw("458px;");} else {@Html.Raw("400px;");} height: 100px;">
                <div class="form-group form-inline">
                      
                <h3>Período</h3>
                    <div class="form-group" style="margin-right: 15px;">
                        <label>Mes</label>
                    </div>
                    <div class="form-group">
                        <select class="form-control" name="Mes" id="Mes">
                            @for (var i = 0; i < 12; i++)
                            {
                                <option value="@Html.Raw((@i + 1).ToString())"@if (@ViewBag.mes == (i + 1)) {@Html.Raw("selected=\"selected\"")}>@Html.Raw(@Meses[@i])</option>
                            }
                            </select>
                    </div>
                    <div  class="form-group">
                        <input class="btn btn-primary" type="submit" name="Resultados" value="Ver resultados" style="height:100%" />
                    </div>
                    <div class="form-group">
                        <input class="btn btn-primary" type="submit" name="Guardar" value="Guardar" style="height:100%" />
                    </div> 

                </div>
                   <div class="form-group form-inline">
                       <div class="form-group" style="margin-right: 15px;">
                           <label>Año</label>
                       </div>
                       <div  class="form-group" style="margin-right: 45px;">
                              <select class="form-control" name="Periodo" id="Periodo">
                            @for (var i = DateTime.Now.Year - 2; i <= DateTime.Now.Year + 1; i++)
                            {
                                <option value="@Html.Raw((@i).ToString())" @if (@ViewBag.periodo == i) {@Html.Raw("selected=\"selected\"")}>@Html.Raw((@i).ToString())</option>
                            }
                            </select>
                       </div>
                        @if (Usuario.esAdministrador)
                        {
                        <div class="form-group">
                                     <a  data-toggle="tooltip" data-placement="top" title="Exportar a Excel" id="ExportarConciliacion" class="btn btn-success" style="height: 100%;">
                                          <span class ="fa fa-file-excel-o  fa-2x"></span>
                                     </a>
                                 </div>
                        }
                            <div class="form-group">
                                 <input class="btn btn-default" type="submit" id="ImprimirConciliacion" name="ImprimirConciliacion" value="Imprimir" style="height:100%" />
                            </div>
                   </div>

            </fieldset>
        </td>
        <td>
            <fieldset style="width: 300px; height: 100px;">
                <h3>Cuenta corriente</h3>
                <table class="sin-hover" align="center" cellspacing="0" cellpadding="5">
                        <tr>
                        <td>
                            Cuenta
                        </td>
                        <td>
                            <input type="text" readonly="readonly" name="NumeroCuenta" id="NumeroCuenta" value="@Html.Raw(@ViewBag.NumeroCuenta)" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Saldo inicial período
                        </td>
                        <td>
                            <input type="text" readonly="readonly" name="SaldoInicial" id="SaldoInicial" value="$@Html.Raw(Saldo.ToString("#,##0"))" style="text-align: right;" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </td>
    </tr>
</table>
<br />
<table border="0" class="sin-hover">
<tr>
    <td>
<fieldset style="width: 778px;">
    <table class="sin-hover" style="width: 770px;" align="center" cellspacing="0" cellpadding="5">
        <tr>
            <td style="width: 193px;">Cartola bancaria al</td>
            <td style="width: 191px;"><input type="text" id="Fecha" name="Fecha" maxlength="10" class="calendario" value="@ViewBag.Fecha" /></td>
            <td style="width: 193px;">(-) Total cheques girados<br /> y no cobrados</td>
            <td style="width: 191px;"><input type="text" id="ChequesNoCobrados" name="ChequesNoCobrados"   readonly="readonly" style="text-align: right; background-color: Silver;" /></td>
        </tr>
        <tr>
            <td>Saldo cartola bancaria</td>
            <td>
                <input type="text" id="SaldoCartola" name="SaldoCartola" style="text-align: right;" value="@ViewBag.SaldoCartola" />
                <input type="hidden" id="SaldoCartolaHidden" name="SaldoCartolaHidden" value="0" />
            </td>
            <td>(+) Gastos bancarios<br />consignados en el libro banco</td>
            <td>
                <input type="text" id="GastosBancarios" name="GastosBancarios" style="text-align: right;" value="@ViewBag.GastosBancarios" />
                <input type="hidden" id="GastosBancariosHidden" name="GastosBancariosHidden" value="0" />
            </td>
        </tr>
        <tr>
            <td>(+) Despósitos no consignados <br />en cartola</td>
            <td>
                <input type="text" id="Depositos" name="Depositos" style="text-align: right;" value="@ViewBag.Depositos" />
                <input type="hidden" id="DepositosHidden" name="DepositosHidden" style="text-align: right;" value="0" />
            </td>
            <td>Saldo Libro Banco</td>
            <td><input type="text" id="SaldoLibro" name="SaldoLibro" style="text-align: right; background-color: Silver;" readonly="readonly" value="0" /></td>
         <td>  <select id="vconciliar" name="vconciliar" class="form-control" style="width: 108px;">
                <option value="ver">Ver</option>
                <option value="c">Conciliar</option>
             
            </select></td>  
        </tr>
    </table>
</fieldset>
 </td>
    </tr>
</table>
}
<br />
@if (Model.Count() == 0)
{
    @Html.Raw("No existen registros!");
}
else
{
    var totalNoConciliado = 0;
<div style="height: 300px; overflow: scroll">
    <table class ="table table-bordered">
        <thead>
            <tr>
                <th>Fecha</th>
                <th>Nº doc.</th>
                <th>Debe</th>
                <th>Haber</th>
                <th>Saldo</th>
                <th>Tipo Comp.</th>
                <th>Nº Comp.</th>
                <th>Cuenta</th>
                <th>Beneficiario</th>
            </tr>
        </thead>
        <tbody>

    @foreach (var item in Model)
    {
        string mensaje = "";
        if (item.TipoComprobanteID == 2)
        {
            // Egreso !
            List<SAG2.Models.DetalleEgreso> detalles = db.DetalleEgreso.Where(d => d.MovimientoID == item.ID).Where(d=> d.Egreso.auto == 0).ToList();
            foreach (var detalle in detalles)
            {
                bool conciliado = false;
                bool salto = true;

                try
                {
                    int detalleID = detalle.ID;
                    SAG2.Models.ConciliacionRegistro cr = db.ConciliacionRegistro.Where(c => c.DetalleID == detalleID).Single();

                    if (cr.Fecha != null && cr.PersonaID != null)
                    {
                        mensaje = "Conciliado el " + cr.Fecha.Value.ToShortDateString() + " a las " + cr.Fecha.Value.ToShortTimeString() + " por " + cr.Persona.NombreCompleto;
                    }


                    if (cr.Periodo < PeriodoSeleccionado)
                    {
                        continue;
                    }
                    else if (cr.Periodo == PeriodoSeleccionado && cr.Mes < mesSeleccionado)
                    {
                        continue;
                    }


                    if (cr.Mes > mesSeleccionado)
                    {
                        conciliado = false;
                    }
                    else
                    {
                        conciliado = true;
                    }

                    if (cr.Periodo == PeriodoSeleccionado && cr.Mes == mesSeleccionado)
                    {
                        salto = false;
                    }

                    if (cr.Periodo > PeriodoSeleccionado)
                    {
                        conciliado = false;
                    }

                }
                catch (Exception)
                {
                    conciliado = false;
                }

                if (detalle.Conciliado != null && detalle.Conciliado.Equals("S") && !(item.Periodo == PeriodoSeleccionado && item.Mes == mesSeleccionado) && salto)
                {
          
                    try
                    {
                        SAG2.Models.ConciliacionRegistro cr = db.ConciliacionRegistro.Where(c => c.DetalleID == detalle.ID).Single();
                        if (cr.Periodo == PeriodoSeleccionado && cr.Mes > mesSeleccionado)
                        {
                            // Revisar si la conciliacion es mayor al mes de conciliacion y que la fecha sea menor o igual al mes de conciliacion!!!!
                            if (item.Periodo < PeriodoSeleccionado)
                            {

                                conciliado = false;
                            }
                            else
                            {

                                if (item.Periodo == PeriodoSeleccionado && mesSeleccionado >= item.Mes)
                                {
                                    conciliado = false;
                                }
                                else
                                {
                                    continue;
                                }
                            }
                        }
                        else
                        {
                            continue;
                        }
                    }
                    catch
                    {
                        continue;
                    }
                }

                if (!conciliado)
                {
                    totalNoConciliado = totalNoConciliado + detalle.Monto;
                }
            <tr @if (PuedeConciliar || Usuario.esAdministrador)
                { @Html.Raw("class=\"conciliar\"")} title="@mensaje" detalleEgresoID="@detalle.ID" Monto="@detalle.Monto.ToString()" style="@if (PuedeConciliar || Usuario.esAdministrador) { @Html.Raw("cursor: pointer;")}@if (conciliado) {@Html.Raw(" background-color: Orange;")}">
                <td>
                    @item.Fecha.Value.ToShortDateString()
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Cheque)
                </td>
                <td align="right">
                    0
                </td>
                <td align="right">
                    @Html.Raw(@detalle.Monto.ToString("#,##0"))
                    @{
                        Saldo = Saldo - detalle.Monto;
                    }
                </td>
                <td align="right"@{
                if (Saldo >= 0)
                {
                    @Html.Raw(" style=\"color: Blue;\"");
                }
                else if (Saldo < 0)
                {
                    @Html.Raw(" style=\"color: Red;\"");
                }
                }>
                    @Html.Raw(Saldo.ToString("#,##0"))
                </td>
                <td>
                    Egreso
                </td>
                <td>
                    @Html.Raw(@item.NumeroComprobante.ToString())
                </td>
                <td>
                    @Html.DisplayFor(modelItem => detalle.Cuenta.NombreLista)
                </td>
                <td>
                @if (item.Persona != null)
                {
                    @Html.DisplayFor(modelItem => item.Persona.NombreCompleto)
                }
                else if (item.Proveedor != null)
                {
                    @Html.DisplayFor(modelItem => item.Proveedor.Nombre)
                }
                else
                { 
                    @Html.Raw(@item.Beneficiario)
                }
                </td>
            </tr>
            }
        }
        else
        {
            bool conciliado = false;
            bool salto = true;
            
            try
            {
                SAG2.Models.ConciliacionRegistro cr = db.ConciliacionRegistro.Where(c => c.MovimientoID == item.ID).Single();
                
                if (cr.Fecha != null && cr.PersonaID != null)
                    {
                        mensaje = "Conciliado el " + cr.Fecha.Value.ToShortDateString() + " a las " + cr.Fecha.Value.ToShortTimeString() + " por " + cr.Persona.NombreCompleto;
                    }
                    
                    
                    if (cr.Periodo < PeriodoSeleccionado)
                    {
                        continue;
                    }
                    else if (cr.Periodo == PeriodoSeleccionado && cr.Mes < mesSeleccionado)
                    {
                        continue;
                    }
                    
                    
                    if (cr.Mes > mesSeleccionado)
                    {
                        conciliado = false;
                    }
                    else
                    {
                        conciliado = true;
                    }
                    
                    if (cr.Periodo == PeriodoSeleccionado && cr.Mes == mesSeleccionado)
                    {
                        salto = false;
                    }

                    if (cr.Periodo > PeriodoSeleccionado)
                    {
                        conciliado = false;
                    }
                    
                }
                catch (Exception)
                {
                    conciliado = false;
                }

                if (item.Conciliado != null && item.Conciliado.Equals("S") && !(item.Periodo == PeriodoSeleccionado && item.Mes == mesSeleccionado) && salto)
                {
                    continue;
                }
            
        <tr @if (PuedeConciliar || Usuario.esAdministrador)
            { @Html.Raw("class=\"conciliar\"")} title="@mensaje" movimientoID="@item.ID" Monto="0" style="@if (PuedeConciliar || Usuario.esAdministrador){ @Html.Raw("cursor: pointer;")}@if (conciliado) {@Html.Raw(" background-color: Orange;")}">
            <td>
                @item.Fecha.Value.ToShortDateString()
            </td>
            <td align="center">
                @Html.DisplayFor(modelItem => item.NumeroComprobante)
            </td>
            <td align="right">
                @item.Monto_Ingresos.ToString("#,##0")
                @{
                    Saldo = Saldo + item.Monto_Ingresos;
                }
            </td>
            <td align="right">
                0
            </td>
            <td align="right"@{
                if (Saldo >= 0)
                {
                    @Html.Raw(" style=\"color: Blue;\"");
                }
                else if (Saldo < 0)
                {
                    @Html.Raw(" style=\"color: Red;\"");
                }
                }>
                @Html.Raw(Saldo.ToString("#,##0"))
            </td>
            <td>
                @if (item.TipoComprobanteID == 1)
                { 
                    @Html.Raw("Ingreso")
                }
                else if (item.TipoComprobanteID == 3)
                { 
                    @Html.Raw("Reintegro")
                }
            </td>
            <td>
                @Html.Raw(@item.NumeroComprobante.ToString())
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cuenta.NombreLista)
            </td>
            <td>      
            @Html.DisplayFor(modelItem => item.Descripcion)           
            </td>
        </tr>
        }
    }
    </tbody>
    </table>
    </div>
    <input type="text" id="totalNoConciliado" name="totalNoConciliado" value="@totalNoConciliado.ToString()" />
}
</div>

    <script type="text/javascript" language="javascript">
        $(document).ready(function () {
          

       

     
   
       });
        

</script>