@model SAG2.Models.Informe
@{
    ViewBag.Title = "Reporte Programa EstandarCC";
    Layout = "~/Views/Shared/_Layoutinf.cshtml";
    SAG2.Models.SAG2DB db = new SAG2.Models.SAG2DB();

}

<script type="text/javascript">
    $(document).ready(function () {
        $(".js-autocomplete").select2();
    });
</script>
<style media="print">
    @@page {
        size: landscape;
        margin: 1cm !important;
    }

    body {
        font-family: "Times New Roman" !important;
        margin: 0 !important;
        display: block !important;
        overflow: visible !important;
    }

    td {
        font-size: 10px !important;
    }

    th {
        font-size: 12px !important;
    }

    h2 {
        font-size: 16px !important;
        text-align: center;
    }

    .pie {
        display: none;
    }

    .permisos, .body, .contenedor {
        padding: 0 !important;
        border: 0 !important;
        display: block !important;
    }

    .permisos {
        width: 90% !important;
    }

    .ocultoImpresion, .menu, .top {
        display: none;
    }

    .soloImpresion {
        display: block;
    }

    .DatosPresupuesto {
        overflow: visible !important;
        display: block !important;
    }

    th {
        font-size: 11px !important;
    }
</style>
<style media="screen">
    th {
        font-size: 11px !important;
    }
</style>

@using (Html.BeginForm())
{
   <h2><i class="fa fa-file-text-o"></i> Reporte Estandar por Programa</h2>

    <hr />
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-4 col-lg-4 col-sm-6 col-xs-6">
            <label class="control-label" for="Programas">Programas</label>
            @Html.DropDownList("Proyectos", null, htmlAttributes: new { @class = "form-control js-autocomplete" })
        </div>
        <div class="col-md-4 col-lg-4 col-sm-6 col-xs-6">
           <label class="control-label" for="Mes">Mes</label>  
                @Html.DropDownList("Mes", new List<SelectListItem> { new SelectListItem { Value = "1", Text = "Enero" }, new SelectListItem { Value = "2", Text = "Febrero" }, new SelectListItem { Value = "3", Text = "Marzo" }, new SelectListItem { Value = "4", Text = "Abril" }, new SelectListItem { Value = "5", Text = "Mayo" }, new SelectListItem { Value = "6", Text = "Junio" }, new SelectListItem { Value = "7", Text = "Julio" }, new SelectListItem { Value = "8", Text = "Agosto" }, new SelectListItem { Value = "9", Text = "Septiembre" }, new SelectListItem { Value = "10", Text = "Octubre" }, new SelectListItem { Value = "11", Text = "Noviembre" }, new SelectListItem { Value = "12", Text = "Diciembre" }, new SelectListItem { Value = "13", Text = "Primer Semestre" }, new SelectListItem { Value = "14", Text = "Segundo Semestre" }, new SelectListItem { Value = "15", Text = "Anual" } }, new { @class = "form-control js-autocomplete" })
        </div>
        <div class="col-md-4 col-lg-4 col-sm-6 col-xs-6">
            <label class="control-label" for="Periodo">AÃ±o</label>
                            <select class="form-control" name="Periodo" id="Periodo">
                            @for (var i = DateTime.Now.Year - 3; i <= DateTime.Now.Year + 1; i++)
                            {
                                <option value="@Html.Raw((@i).ToString())" @if (@ViewBag.periodo == i)
                                                                            {@Html.Raw("selected=\"selected\"")}>@Html.Raw((@i).ToString())</option>
                            }
                </select>  
         </div>
    </div>
    <br/>
    <div class="row">
    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12 centrado">
        <input type="submit" name="ReportePrograma" value="Procesar" class="btn btn-primary" />
        @if (ViewBag.ID != null)
        {  
        @Html.ActionLink("Excel", "ReporteProgramaEstandarExcelCC", "Informe", new { Informe = ViewBag.IdInforme, Proyectos = ViewBag.ID, Mes = ViewBag.Mes, periodo = ViewBag.Periodo }, new { @class = "btn btn-success" })
        }
    </div>
    </div>
    <hr/>
}
@if (ViewBag.ID != null)
{
    //try
    //{
    int mesSeleccion = ViewBag.Mes;
    var Meses = ViewBag.GrupoMeses;
    var NombreMeses = new string[12]
    {
"Ene.",
"Feb.",
"Mar.",
"Abr.",
"May.",
"Jun.",
"Jul.",
"Ago.",
"Sep.",
"Oct.",
"Nov.",
"Dic."
    };
    //List<SAG2.Models.Cuenta> cuentas = new List<SAG2.Models.Cuenta>();
    try{
    
    List<SAG2.Models.DetalleInformes> listaCuentas = ViewBag.listaCuentas;
    int id = ViewBag.ID;
    int periodo = ViewBag.Periodo;
    var presupuestoID = db.Presupuesto.Where(p => p.Proyecto.ID == id && p.Periodo == periodo).First().ID;
    var presupuestoDetalle = db.DetallePresupuesto.Where(p => p.Presupuesto.Proyecto.ID == id && p.Periodo == periodo).ToList();
    //  int mes = 1;
    var ingresos = db.Movimiento.Where(m => m.Proyecto.ID == id && m.Periodo == periodo && m.Temporal == null).ToList();
    var egresos = db.DetalleEgreso.Where(e => e.Egreso.Proyecto.ID == id && e.Egreso.Periodo == periodo && e.Egreso.Temporal == null).ToList();
   // var reintegros = db.DetalleReintegro.Where(r => r.Reintegro.Proyecto.ID == id && r.Reintegro.Periodo == periodo && r.Reintegro.Temporal == null).ToList();
    var reintegros = db.Movimiento.Where(m => m.ProyectoID == id).Where(m => m.TipoComprobanteID == 3).Where(m => m.CuentaID != null && m.CuentaID != 1 && m.Nulo == null && m.Eliminado == null && m.Temporal == null && m.Periodo == periodo).OrderBy(m => m.Cuenta.Orden).ToList();
    var reintegrosGastos = db.DetalleReintegro.Where(m => m.Reintegro.ProyectoID == id).Where(m => m.CuentaIDD != null && m.Reintegro.Periodo == periodo).OrderBy(m => m.CuentaIDD).ToList();

        
     var totalEgreso = new double[13];
    var totalPresupuestoE = new double[13];
    var totalIngresosEgreso = new double[13];
    var totalesIngresos = new double[13];
    var totalesEgresos = new double[13];
    var totalPresupuesto = new double[13];
    var totalesPresupuestosIngresos = new double[13];
    var totalesPresupuestosEgresos = new double[13];
    var pruebacuentas = db.Cuenta.ToList();
    var presupuestoInicial = new double[13];
    var saldoInicial = new double[13];
   
    double presupuestoCabecera = 0;



    <div class="col-md-12" style="overflow-y: scroll;" id="prueba ocultoImpresion">
        <table border="1" class="table table-bordered table-hover">
            <tr>
                <tH>Estado de Resultado</tH>
                @if (@ViewBag.Mes == 13 || @ViewBag.Mes == 14)
                {
                <tH colspan="25">@db.Proyecto.Find(id).NombreLista</tH>
                }
                @if (@ViewBag.Mes == 15)
                {
                <tH colspan="49">@db.Proyecto.Find(id).NombreLista</tH>
                }
                 @if (@ViewBag.Mes < 13)
                 {
                <tH colspan="5">@db.Proyecto.Find(id).NombreLista</tH>
                 }

            </tr>
            <tr>

                <th rowspan="2">CONCEPTO</th>
                @foreach (var mes in Meses)
                {
                    <th colspan="4"> @NombreMeses[mes - 1]</th>

                }
            </tr>
            <tr>
                @foreach (var mes in Meses)
                {
                    <th style="width:80px !important;">Pres. $</th>
                    <th style="width:80px !important;">Real $</th>
                   <th style="width:80px !important;"> Desv. $</th>
                    <th style="width:80px !important;"> Desv. %</th>
                }
            </tr>

    <tr style="background-color: yellow; text-align: left">

            <th align="left">SALDO INICIAL</th>
             @{
                  var i = 1;
                  double xTotalSaldo = 0;
                  var xSSaldo = ViewBag.SaldoInicial;
                  var SSaldoPre = ViewBag.SaldoInicial;
                  double SSaldo = xSSaldo;
                  foreach (var mes in Meses)
                  {
                      int tope = int.Parse(mes.ToString());
                      if (i != mes)
                      {
                          SSaldo = xSSaldo;
                          saldoInicial[1] = SSaldo;
                          presupuestoInicial[1] = SSaldoPre;
                          int j = 1;
                          while (j < tope)
                          {
                              // Real
                              double valorIngresos = double.Parse(ingresos.Where(e => (e.CuentaID == 3 || e.CuentaID == 4 || e.CuentaID == 5 || e.CuentaID == 8 || e.CuentaID == 12) && e.Temporal == null && e.Nulo == null &&  e.Mes == j && e.Periodo == periodo).Sum(m => m.Monto_Ingresos).ToString());
                              double valorIngresos2 = double.Parse(ingresos.Where(m => (m.CuentaID == 10 || m.CuentaID == 14 || m.CuentaID == 16 || m.CuentaID == 17 || m.CuentaID == 17 || m.CuentaID == 158 || m.CuentaID == 20) && m.Temporal == null && m.Nulo == null &&  m.Mes == j && m.Periodo == periodo).Sum(m => m.Monto_Ingresos).ToString());
                              double valorEgresos = double.Parse(egresos.Where(e => e.Egreso.Temporal == null  && e.Egreso.Nulo == null  && e.Egreso.Mes == j && e.Egreso.Periodo == periodo && (e.CuentaID == 127 || e.CuentaID == 101 || e.CuentaID == 102 || e.CuentaID == 104 || e.CuentaID == 43 || e.CuentaID == 22 || e.CuentaID == 23 || e.CuentaID == 25 || e.CuentaID == 26 || e.CuentaID == 27 || e.CuentaID == 28 || e.CuentaID == 163 || e.CuentaID == 41 || e.CuentaID == 33 || e.CuentaID == 34 || e.CuentaID == 35 || e.CuentaID == 36 || e.CuentaID == 44 || e.CuentaID == 125 || e.CuentaID == 123 || e.CuentaID == 123 || e.CuentaID == 62 || e.CuentaID == 48 || e.CuentaID == 49 || e.CuentaID == 52 || e.CuentaID == 53 || e.CuentaID == 54 || e.CuentaID == 55 || e.CuentaID == 56 || e.CuentaID == 57 || e.CuentaID == 58 || e.CuentaID == 147 || e.CuentaID == 149 || e.CuentaID == 150 || e.CuentaID == 151 || e.CuentaID == 153 || e.CuentaID == 154 || e.CuentaID == 50 || e.CuentaID == 59 || e.CuentaID == 60 || e.CuentaID == 61 || e.CuentaID == 64 || e.CuentaID == 145 || e.CuentaID == 66 || e.CuentaID == 146 || e.CuentaID == 68 || e.CuentaID == 69 || e.CuentaID == 70 || e.CuentaID == 72 || e.CuentaID == 73 || e.CuentaID == 74 || e.CuentaID == 76 || e.CuentaID == 75 || e.CuentaID == 77 || e.CuentaID == 78 || e.CuentaID == 79)).Sum(m => m.Monto).ToString());
                              double valor_Reintegros = double.Parse(reintegros.Where(e => (e.CuentaID == 127 || e.CuentaID == 101 || e.CuentaID == 102 || e.CuentaID == 104 || e.CuentaID == 43 || e.CuentaID == 22 || e.CuentaID == 23 || e.CuentaID == 25 || e.CuentaID == 26 || e.CuentaID == 27 || e.CuentaID == 28 || e.CuentaID == 163 || e.CuentaID == 41 || e.CuentaID == 33 || e.CuentaID == 34 || e.CuentaID == 35 || e.CuentaID == 36 || e.CuentaID == 44 || e.CuentaID == 125 || e.CuentaID == 123 || e.CuentaID == 123 || e.CuentaID == 62 || e.CuentaID == 48 || e.CuentaID == 49 || e.CuentaID == 52 || e.CuentaID == 53 || e.CuentaID == 54 || e.CuentaID == 55 || e.CuentaID == 56 || e.CuentaID == 57 || e.CuentaID == 58 || e.CuentaID == 147 || e.CuentaID == 149 || e.CuentaID == 150 || e.CuentaID == 151 || e.CuentaID == 153 || e.CuentaID == 154 || e.CuentaID == 50 || e.CuentaID == 59 || e.CuentaID == 60 || e.CuentaID == 61 || e.CuentaID == 64 || e.CuentaID == 145 || e.CuentaID == 66 || e.CuentaID == 146 || e.CuentaID == 68 || e.CuentaID == 69 || e.CuentaID == 70 || e.CuentaID == 72 || e.CuentaID == 73 || e.CuentaID == 74 || e.CuentaID == 76 || e.CuentaID == 75 || e.CuentaID == 77 || e.CuentaID == 78 || e.CuentaID == 79)).Where(d => d.Mes == j).Where(d => d.Periodo == periodo && d.Nulo == null).Sum(d => d.Monto_Ingresos).ToString());
                              double valorEgresosE = double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Nulo == null  && e.Egreso.Mes == j && e.Egreso.Periodo == periodo && (e.CuentaID == 63 || e.CuentaID == 155 || e.CuentaID == 156 || e.CuentaID == 159)).Sum(m => m.Monto).ToString());
                              double valor_ReintegrosE = double.Parse(reintegros.Where(e => (e.CuentaID == 63 || e.CuentaID == 155 || e.CuentaID == 156 || e.CuentaID == 159)).Where(d => d.Mes == j).Where(d => d.Periodo == periodo && d.Nulo == null).Sum(d => d.Monto_Ingresos).ToString());
                              valorEgresosE = valorEgresosE - valor_ReintegrosE;
                              valorEgresos = valorEgresos - valor_Reintegros;
                              SSaldo = (valorIngresos + valorIngresos2) - valorEgresos + SSaldo - valorEgresosE;
                              
                              // Presupuesto
                              double valorIngresosPresupuesto = double.Parse(presupuestoDetalle.Where(e => (e.CuentaID == 3 || e.CuentaID == 4 || e.CuentaID == 5 || e.CuentaID == 8 || e.CuentaID == 12) && e.Mes == j && e.Periodo == periodo).Sum(m => m.Monto).ToString());
                              double valorEgresosPresupuesto = double.Parse(presupuestoDetalle.Where(e => e.Mes == j && e.Periodo == periodo && (e.CuentaID == 127 || e.CuentaID == 101 || e.CuentaID == 102 || e.CuentaID == 104 || e.CuentaID == 43 || e.CuentaID == 22 || e.CuentaID == 23 || e.CuentaID == 25 || e.CuentaID == 26 || e.CuentaID == 27 || e.CuentaID == 28 || e.CuentaID == 163 || e.CuentaID == 41 || e.CuentaID == 33 || e.CuentaID == 34 || e.CuentaID == 35 || e.CuentaID == 36 || e.CuentaID == 44 || e.CuentaID == 125 || e.CuentaID == 123 || e.CuentaID == 123 || e.CuentaID == 62 || e.CuentaID == 48 || e.CuentaID == 49 || e.CuentaID == 52 || e.CuentaID == 53 || e.CuentaID == 54 || e.CuentaID == 55 || e.CuentaID == 56 || e.CuentaID == 57 || e.CuentaID == 58 || e.CuentaID == 147 || e.CuentaID == 149 || e.CuentaID == 150 || e.CuentaID == 151 || e.CuentaID == 153 || e.CuentaID == 154 || e.CuentaID == 50 || e.CuentaID == 59 || e.CuentaID == 60 || e.CuentaID == 61 || e.CuentaID == 64 || e.CuentaID == 145 || e.CuentaID == 66 || e.CuentaID == 146 || e.CuentaID == 68 || e.CuentaID == 69 || e.CuentaID == 70 || e.CuentaID == 72 || e.CuentaID == 73 || e.CuentaID == 74 || e.CuentaID == 76 || e.CuentaID == 75 || e.CuentaID == 77 || e.CuentaID == 78 || e.CuentaID == 79)).Sum(m => m.Monto).ToString());
                              SSaldoPre = valorIngresosPresupuesto - valorEgresosPresupuesto + SSaldoPre;
                              
                              j++;


                          }
                      }
                      double difSaldoInicial = SSaldo - SSaldoPre;
                      double DsIp = 0;
                      if (!SSaldoPre.Equals(0))
                      {
                          DsIp = (difSaldoInicial / SSaldoPre * 100);
                      }
                      
                    <td style=" text-align: right ;font-weight: bold;"> @SSaldoPre.ToString("$#,###")</td>
                    <td style=" text-align: right ;font-weight: bold;"> @SSaldo.ToString("$#,###")</td>
                    <td style=" text-align: right ;font-weight: bold;"> @difSaldoInicial.ToString("$#,###")</td>
                    <td style=" text-align: right ;font-weight: bold;"> @DsIp.ToString("#,##0.0#") %  </td>
                
                               saldoInicial[mes] = SSaldo;
                               presupuestoInicial[mes] = SSaldoPre;

                  }
                  if (@ViewBag.Mes > 12)
                  { 
                        <th style="text-align: right;font-weight: bold;color:blue;"> @saldoInicial[1].ToString("$#,###")</th>
                  } 
            }    
        
            </tr>
             <tr style="background-color: silver; text-align: left">
                <th>INGRESOS</th>
            </tr>
            <tr>
                <th style="text-align: left"> Subvenci&oacute;n</th>
                 @{ 
                  double xTot1 = 0;
                }
                @foreach (var mes in Meses)
                {
                    double valorIngresos = ingresos.Where(m => (m.CuentaID == 3 || m.CuentaID == 4) && m.Temporal == null && m.Mes == mes && m.Periodo == periodo).Sum(m => m.Monto_Ingresos);
                    xTot1 += valorIngresos;
                   
                    <td style=" text-align: right; font-weight: bold;color:blue;">
                        @if (valorIngresos != 0)
                        {@valorIngresos.ToString("$#,###")
              
                        }
                        else
                        {@Html.Raw("$0")}
                    </td>
                  

                }

                  @if (@ViewBag.Mes > 12)
                  { 
                     <th style=" text-align: right; font-weight: bold;color:blue;"> 
                       @if (xTot1 != 0)
                       { @xTot1.ToString("$#,###") }
                       else
                       {@Html.Raw("$0")}
                    </th>
                  } 
            </tr>
        </table>
   
 </div>
}     catch{
        
    }

}

