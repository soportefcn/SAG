@if (ViewBag.ID != null)
{
    //try
    //{
    var NombreMeses = new string[12]
    {
        "Ene.", "Feb.", "Mar.", "Abr.", "May.", "Jun.", "Jul.", "Ago.", "Sep.", "Oct.", "Nov.",  "Dic."
    };
    
    int mesSeleccion = ViewBag.Mes;
    var Meses = ViewBag.GrupoMeses;
    var celdas = new string[]
    {
	    "", "A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P"
	};

    try
    {

        int id = ViewBag.ID;
        int periodo = ViewBag.Periodo;
        int ConIva = ViewBag.ConIva;
        
        List<SAG2.Models.DetalleIngresoIva> ingresoIVA = ViewBag.IngresosIva;
        List<SAG2.Models.Movimiento> ingresos = ViewBag.ingresos;
        List<SAG2.Models.DetalleEgreso> egresos = ViewBag.egresos;
        List<SAG2.Models.Movimiento> reintegros = ViewBag.reintegros;
        List<SAG2.Models.DetalleReintegro> reintegrosGastos = ViewBag.reintegrosGastos;
        List<SAG2.Models.Cuenta> pruebacuentas = ViewBag.cuentasT;
        
        var totalEgreso = new double[13];
        var totalPresupuestoE = new double[13];
        var totalIngresosEgreso = new double[13];
        var totalesIngresos = new double[13];
        var totalesEgresos = new double[13];
        var totalPresupuesto = new double[13];
        var totalesPresupuestosIngresos = new double[13];
        var totalesPresupuestosEgresos = new double[13];       
        var TotalesREstandar = new double[26];    
        var saldoInicial = new double[13];
        int FinalFila = 0;
        int LineaSF = 15;
        double xTotSename = 0;
        if (ConIva == 1) {
            LineaSF = 18;
        }
        foreach (var mes in Meses)
        {
            double valorIngresos = ingresos.Where(m => (m.CuentaID == 3 || m.CuentaID == 4 || m.CuentaID == 5 || m.CuentaID == 8) && m.Temporal == null && m.Mes == mes && m.Periodo == periodo).Sum(m => m.Monto_Ingresos);
            xTotSename += valorIngresos;


        }
        TotalesREstandar[3] = xTotSename;
   
    
        <table align="center" cellspacing="0" cellpadding="3" width="100%" border="1">
            <tr>
                <tH style="width:430px">Estado de Resultado</tH>
                @if (@ViewBag.Mes == 13 || @ViewBag.Mes == 14)
                {
                    FinalFila = 7;
                <tH colspan="8" style="width:680px">@ViewBag.NombreLista</tH>
                }
                @if (@ViewBag.Mes == 15)
                {
                    FinalFila = 13;
                    <tH colspan="14">@ViewBag.NombreLista</tH>
                }
                 @if (@ViewBag.Mes < 13)
                 {
                    <tH >@ViewBag.NombreLista</tH>
                 }
               
            </tr>
            <tr>
                <th rowspan="2">CONCEPTO</th>
                @foreach (var mes in Meses)
                {
                    <th style="width:115px;"> @NombreMeses[mes - 1]</th>
                }
                <th colspan="2"> </th>
            </tr>
            <tr>
                @foreach (var mes in Meses)
                {                    
                    <th style="width:115px !important;">Real $</th>
                }
                @if (@ViewBag.Mes > 12)
                { 
                    <th style=" text-align: center;width=130px !important;"> Total</th>
                    <th> </th>
                } 
            </tr>         
            <tr>
                <th align="left" width="300">SALDO INICIAL</th>
                 @{
                  var i = 1;
                  double xTotalSaldo = 0;
                  var xSSaldo = ViewBag.SaldoInicial;
                  double SSaldo = xSSaldo;
                  saldoInicial[i] = SSaldo;
                  foreach (var mes in Meses)
                  {

                      if (mes == 1) {
                        <td class="num">                   
                        @if (SSaldo != 0){
                            @SSaldo.ToString("#,###")
                        }else
                            {@Html.Raw("0")
                        }
                        </td>
                    }else
                    {
                        <td class="num">=@celdas[mes]@LineaSF</td>
                    }                             
                  }
                  if (@ViewBag.Mes > 12)
                  { 
                   
                    <th class="num"> @saldoInicial[1].ToString("#,###")</th>
                    <th class="por100">=SI( @celdas[FinalFila + 1]6 <> 0; (@saldoInicial[1] / @celdas[FinalFila + 1]6 );0) </th>
                  }
             }          
            </tr>
            <tr style="text-align: left">
                <th width="300"></th>
            </tr>
            <tr>
                <th style="text-align: left;width:300px">INGRESOS</th>
                 @{ 
                  double xTot1 = 0;
                }
                @foreach (var mes in Meses)
                {
                    double valorIngresos = ingresos.Where(m => (m.CuentaID == 3 || m.CuentaID == 4) && m.Temporal == null && m.Mes == mes && m.Periodo == periodo).Sum(m => m.Monto_Ingresos);
                           valorIngresos += ingresos.Where(m => (m.CuentaID == 5) && m.Temporal == null && m.Mes == mes && m.Periodo == periodo).Sum(m => m.Monto_Ingresos);
                           valorIngresos += ingresos.Where(m => (m.CuentaID == 8) && m.Temporal == null && m.Mes == mes && m.Periodo == periodo).Sum(m => m.Monto_Ingresos);
                    xTot1 += valorIngresos;                  

                    <td class="num">
                        @if (valorIngresos != 0)
                        {@valorIngresos.ToString("#,###")
              
                        }
                        else
                        {@Html.Raw("0")}
                    </td>                 
                }

                  @if (@ViewBag.Mes > 12)
                  {
                      TotalesREstandar[0] = xTot1;
                      double PSename = (xTot1 / TotalesREstandar[3])*100;
                       if (xTot1 != 0)
                       { 
                            <th class="num">=SUMA(@celdas[2]6:@celdas[FinalFila]6) </th>
                        }
                       else
                        {
                            <th style="text-align: right; font-weight: bold;color:blue;"> @Html.Raw("0")</th> 
                        }
                    
                        
                    <th class="por100"> =SI(@celdas[FinalFila + 1]6 <> 0; ( @celdas[FinalFila + 1]6 / @celdas[FinalFila + 1]6);0) </th>
                  } 
            </tr>

            <tr>
                <th style="background-color: silver; text-align: left">Egresos</th>
            </tr>
  
            <tr>
                <th style="text-align: left ;width: 300px">Personal</th>
                 @{ 
                  double xRem = 0;
                }
                @foreach (var mes in Meses)
                {

                    double valorEgresos = double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Mes == mes && e.Egreso.Periodo == periodo && (e.CuentaID == 22 || e.CuentaID == 23 || e.CuentaID == 25 || e.CuentaID == 26 || e.CuentaID == 27 || e.CuentaID == 28 || e.CuentaID == 163)).Sum(m => m.Monto).ToString());
                    double valor_Reintegros = double.Parse(reintegros.Where(e => (e.CuentaID == 22 || e.CuentaID == 23 || e.CuentaID == 25 || e.CuentaID == 26 || e.CuentaID == 27 || e.CuentaID == 28 || e.CuentaID == 163)).Where(d => d.Mes == mes).Where(d => d.Periodo == periodo).Sum(d => d.Monto_Ingresos).ToString());
                    double valor_GastosReintegros = double.Parse(reintegrosGastos.Where(d => d.Reintegro.Cuenta.Codigo.Equals("7.1.9")).Where(e => (e.CuentaIDD == 22 || e.CuentaIDD == 23 || e.CuentaIDD == 25 || e.CuentaIDD == 26 || e.CuentaIDD == 27 || e.CuentaIDD == 28 || e.CuentaIDD == 163)).Where(d => d.Reintegro.Mes == mes).Where(d => d.Reintegro.Periodo == periodo).Sum(d => d.Monto).ToString());
                    valorEgresos += double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Mes == mes && e.Egreso.Periodo == periodo && (e.CuentaID == 41)).Sum(m => m.Monto).ToString());
                     valor_Reintegros += double.Parse(reintegros.Where(e => (e.CuentaID == 41)).Where(d => d.Mes == mes).Where(d => d.Periodo == periodo).Sum(d => d.Monto_Ingresos).ToString());
                     valor_GastosReintegros += double.Parse(reintegrosGastos.Where(d => d.Reintegro.Cuenta.Codigo.Equals("7.1.9")).Where(e => (e.CuentaIDD == 41)).Where(d => d.Reintegro.Mes == mes).Where(d => d.Reintegro.Periodo == periodo).Sum(d => d.Monto).ToString());
 
                    valorEgresos = (valorEgresos + valor_GastosReintegros) - valor_Reintegros;
                    xRem += valorEgresos;
                    
                    <td class="num">
                        @if (valorEgresos != 0)
                        {@valorEgresos.ToString("#,###") }
                        else
                        {@Html.Raw("0")}
                    </td>
                   
                }
                    @if (@ViewBag.Mes > 12)
                    { 
                        TotalesREstandar[4] = xRem;					  
                        double PSename = (xRem / TotalesREstandar[3])*100;
                        
                        if (xRem != 0)
                        { 
	                        <th class="num">=SUMA(@celdas[2]8:@celdas[FinalFila]8) </th>
                        }else{
                            <th style=" text-align: right;color:blue;"> @Html.Raw("0")</th> 
                        }

                   <th class="por100"> =SI(@celdas[FinalFila + 1]6 <> 0; ( @celdas[FinalFila + 1]8 / @celdas[FinalFila + 1]6 ) ; 0)</th>
                    }
            </tr>

            <tr>
                <th style="text-align: left;width: 300px">Operaci&oacute;n</th>
                 @{ 
                  double xCB = 0;
                }
                @foreach (var mes in Meses)
                {
                    double valorEgresos = double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Mes == mes && e.Egreso.Periodo == periodo && (e.CuentaID == 33 || e.CuentaID == 34 || e.CuentaID == 35 || e.CuentaID == 36 || e.CuentaID == 44 || e.CuentaID == 123 || e.CuentaID == 125 || e.CuentaID == 48 || e.CuentaID == 49 || e.CuentaID == 52 || e.CuentaID == 150 || e.CuentaID == 151 || e.CuentaID == 153 || e.CuentaID == 154 || e.CuentaID == 53 || e.CuentaID == 54 || e.CuentaID == 55 || e.CuentaID == 56 || e.CuentaID == 57 || e.CuentaID == 58 || e.CuentaID == 147 || e.CuentaID == 149 || e.CuentaID == 61 || e.CuentaID == 62 || e.CuentaID == 64 || e.CuentaID == 145 || e.CuentaID == 44 || e.CuentaID == 123 || e.CuentaID == 50 || e.CuentaID == 59 || e.CuentaID == 60)).Sum(m => m.Monto).ToString());
                    double valor_Reintegros = double.Parse(reintegros.Where(e => (e.CuentaID == 33 || e.CuentaID == 34 || e.CuentaID == 35 || e.CuentaID == 36 || e.CuentaID == 44 || e.CuentaID == 123 || e.CuentaID == 125 || e.CuentaID == 48 || e.CuentaID == 49 || e.CuentaID == 52 || e.CuentaID == 150 || e.CuentaID == 151 || e.CuentaID == 153 || e.CuentaID == 154 || e.CuentaID == 53 || e.CuentaID == 54 || e.CuentaID == 55 || e.CuentaID == 56 || e.CuentaID == 57 || e.CuentaID == 58 || e.CuentaID == 147 || e.CuentaID == 149 || e.CuentaID == 61 || e.CuentaID == 62 || e.CuentaID == 64 || e.CuentaID == 145 || e.CuentaID == 44 || e.CuentaID == 123 || e.CuentaID == 50 || e.CuentaID == 59 || e.CuentaID == 60)).Where(d => d.Mes == mes).Where(d => d.Periodo == periodo).Sum(d => d.Monto_Ingresos).ToString());
                    double valor_GastosReintegros = double.Parse(reintegrosGastos.Where(d => d.Reintegro.Cuenta.Codigo.Equals("7.1.9")).Where(e => (e.CuentaIDD == 33 || e.CuentaIDD == 34 || e.CuentaIDD == 35 || e.CuentaIDD == 36 || e.CuentaIDD == 44 || e.CuentaIDD == 123 || e.CuentaIDD == 125 || e.CuentaIDD == 48 || e.CuentaIDD == 49 || e.CuentaIDD == 52 || e.CuentaIDD == 150 || e.CuentaIDD == 151 || e.CuentaIDD == 153 || e.CuentaIDD == 154 || e.CuentaIDD == 53 || e.CuentaIDD == 54 || e.CuentaIDD == 55 || e.CuentaIDD == 56 || e.CuentaIDD == 57 || e.CuentaIDD == 58 || e.CuentaIDD == 147 || e.CuentaIDD == 149 || e.CuentaIDD == 61 || e.CuentaIDD == 62 || e.CuentaIDD == 64 || e.CuentaIDD == 145 || e.CuentaIDD == 44 || e.CuentaIDD == 123 || e.CuentaIDD == 50 || e.CuentaIDD == 59 || e.CuentaIDD == 60)).Where(d => d.Reintegro.Mes == mes).Where(d => d.Reintegro.Periodo == periodo).Sum(d => d.Monto).ToString());
                           valorEgresos += double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Mes == mes && e.Egreso.Periodo == periodo && (e.CuentaID == 66 || e.CuentaID == 146 || e.CuentaID == 68 || e.CuentaID == 69 || e.CuentaID == 70)).Sum(m => m.Monto).ToString());
                           valor_Reintegros += double.Parse(reintegros.Where(e => (e.CuentaID == 66 || e.CuentaID == 146 || e.CuentaID == 68 || e.CuentaID == 69 || e.CuentaID == 70)).Where(d => d.Mes == mes).Where(d => d.Periodo == periodo).Sum(d => d.Monto_Ingresos).ToString());
                           valor_GastosReintegros += double.Parse(reintegrosGastos.Where(d => d.Reintegro.Cuenta.Codigo.Equals("7.1.9")).Where(e => (e.CuentaIDD == 66 || e.CuentaIDD == 146 || e.CuentaIDD == 68 || e.CuentaIDD == 69 || e.CuentaIDD == 70)).Where(d => d.Reintegro.Mes == mes).Where(d => d.Reintegro.Periodo == periodo).Sum(d => d.Monto).ToString());
                           valorEgresos += double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Mes == mes && e.Egreso.Periodo == periodo && (e.CuentaID == 72 || e.CuentaID == 73 || e.CuentaID == 74 || e.CuentaID == 75 || e.CuentaID == 76 || e.CuentaID == 77 || e.CuentaID == 78 || e.CuentaID == 79)).Sum(m => m.Monto).ToString());
                           valor_Reintegros += double.Parse(reintegros.Where(e => (e.CuentaID == 72 || e.CuentaID == 73 || e.CuentaID == 74 || e.CuentaID == 75 || e.CuentaID == 76 || e.CuentaID == 77 || e.CuentaID == 78 || e.CuentaID == 79)).Where(d => d.Mes == mes).Where(d => d.Periodo == periodo).Sum(d => d.Monto_Ingresos).ToString());
                           valor_GastosReintegros += double.Parse(reintegrosGastos.Where(d => d.Reintegro.Cuenta.Codigo.Equals("7.1.9")).Where(e => (e.CuentaIDD == 72 || e.CuentaIDD == 73 || e.CuentaIDD == 74 || e.CuentaIDD == 75 || e.CuentaIDD == 76 || e.CuentaIDD == 77 || e.CuentaIDD == 78 || e.CuentaIDD == 79)).Where(d => d.Reintegro.Mes == mes).Where(d => d.Reintegro.Periodo == periodo).Sum(d => d.Monto).ToString());

                    valorEgresos = (valorEgresos + valor_GastosReintegros) - valor_Reintegros;
                    xCB += valorEgresos; 
                    <td class="num">
                        @if (valorEgresos != 0)
                        {@valorEgresos.ToString("#,###")}
                        else
                        {@Html.Raw("0")}
                    </td>
                }
                   @if (@ViewBag.Mes > 12)
                   { 
                    TotalesREstandar[7] = xCB;					  
                    double PSename = (xCB / TotalesREstandar[3])*100;
                    if (xCB != 0)
                    { 
	                    <th class="num">=SUMA(@celdas[2]9:@celdas[FinalFila]9) </th>
                    }else{
                        <th style=" text-align: right; color:blue;"> @Html.Raw("0")</th> 
                    }  

                    <th class="por100">=SI(@celdas[FinalFila + 1]6 <> 0;( @celdas[FinalFila + 1]9 / @celdas[FinalFila + 1]6 ) ;0) </th>
                   }
            </tr>


            <tr>
                <th style="text-align: left">Inversi&oacute;n</th>
                @{ 
                    double xTinvEgreso1 = 0;// voy aqui
                }
                @foreach (var mes in Meses)
                {

                    double valorEgresos = double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Mes == mes && e.Egreso.Periodo == periodo && (e.CuentaID == 127 || e.CuentaID == 101 || e.CuentaID == 102 || e.CuentaID == 104 || e.CuentaID == 43)).Sum(m => m.Monto).ToString());
                    double valor_Reintegros = double.Parse(reintegros.Where(e => (e.CuentaID == 127 || e.CuentaID == 101 || e.CuentaID == 102 || e.CuentaID == 104 || e.CuentaID == 43)).Where(d => d.Mes == mes).Where(d => d.Periodo == periodo).Sum(d => d.Monto_Ingresos).ToString());
                    double valor_GastosReintegros = double.Parse(reintegrosGastos.Where(d => d.Reintegro.Cuenta.Codigo.Equals("7.1.9")).Where(e => (e.CuentaIDD == 127 || e.CuentaIDD == 101 || e.CuentaIDD == 102 || e.CuentaIDD == 104 || e.CuentaIDD == 43)).Where(d => d.Reintegro.Mes == mes).Where(d => d.Reintegro.Periodo == periodo).Sum(d => d.Monto).ToString());
                    valorEgresos = (valorEgresos + valor_GastosReintegros) - valor_Reintegros;
                    xTinvEgreso1 += valorEgresos;
                    <td class="num">
                        @if (valorEgresos != 0)
                        {@valorEgresos.ToString("#,###") }
                        else
                        {@Html.Raw("0")}
                    </td>            
                }
                     @if (@ViewBag.Mes > 12)
                     { 
                         TotalesREstandar[11] = xTinvEgreso1;					  
                        double PSename = (xTinvEgreso1 / TotalesREstandar[3])*100;
                        if (xTinvEgreso1 != 0)
                        { 
	                        <th class="num">=SUMA(@celdas[2]10:@celdas[FinalFila]10) </th>
                        }else{
                            <th style=" text-align: right; font-weight: bold;color:blue;"> @Html.Raw("0")</th> 
                        }
                         <th class="por100">=SI(@celdas[FinalFila + 1]6 <> 0;( @celdas[FinalFila + 1]10 / @celdas[FinalFila + 1]6 ) ; 0)</th>
                     } 
            </tr>

   
            <tr >
                <th style="background-color: silver; text-align: left">Total Egresos</th>
                                 @{
                     double xTotegreso = 0;
                                }
                                @foreach (var mes in Meses)
                                {   //valorIngresos
                                    <td class="num">=SUMA(@celdas[mes + 1]8 : @celdas[mes + 1]10 )</td>    
                                }
                                 @if (@ViewBag.Mes > 12)
                                 { 
                                    <td class="num">=SUMA(@celdas[(FinalFila + 1)]8 : @celdas[(FinalFila + 1)]10)</td>
                                   <th class="por100">=SI(@celdas[FinalFila + 1]6 <> 0;( @celdas[FinalFila + 1]11 / @celdas[FinalFila + 1]6);0) </th>
                                 } 
             </tr>
            <tr style="text-align: left">
                <th >Resultado</th>
                 @{
                   double xTotflujo = 0;
                 }
                 @foreach (var mes in Meses)
                 {   //valorIngresos
                  <td class="num">= @celdas[mes + 1]6 - @celdas[mes + 1]11</td>        
                 }
                @if (@ViewBag.Mes > 12)
               {                                  
                    <th class="num">= @celdas[(FinalFila + 1)]6 - @celdas[(FinalFila + 1)]11</th>  
                    <th class="por100"> =SI(@celdas[FinalFila + 1]6 <> 0;( @celdas[FinalFila + 1]12 / @celdas[FinalFila + 1]6);0) </th>
                } 
 
            </tr>
            <tr>
                <th style="text-align: left">Financimiento</th>
                @{ 
                                double xTotf2 = 0;
                }
                @foreach (var mes in Meses)
                {
                    double valorIngresos = ingresos.Where(m => (m.CuentaID == 10 || m.CuentaID == 12 || m.CuentaID == 14 || m.CuentaID == 20 || m.CuentaID == 158) && m.Temporal == null && m.Mes == mes && m.Periodo == periodo).Sum(m => m.Monto_Ingresos);
                           valorIngresos += ingresos.Where(m => (m.CuentaID == 19) && m.Temporal == null && m.Mes == mes && m.Periodo == periodo).Sum(m => m.Monto_Ingresos);

                    double valorEgresos = double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Mes == mes && e.Egreso.Periodo == periodo && (e.CuentaID == 155 || e.CuentaID == 156 || e.CuentaID == 159)).Sum(m => m.Monto).ToString());
                    double valor_Reintegros = double.Parse(reintegros.Where(e => (e.CuentaID == 155 || e.CuentaID == 156 || e.CuentaID == 159)).Where(d => d.Mes == mes).Where(d => d.Periodo == periodo).Sum(d => d.Monto_Ingresos).ToString());
                    double valor_GastosReintegros = double.Parse(reintegrosGastos.Where(d => d.Reintegro.Cuenta.Codigo.Equals("7.1.9")).Where(e => (e.CuentaIDD == 155 || e.CuentaIDD == 156 || e.CuentaIDD == 159)).Where(d => d.Reintegro.Mes == mes).Where(d => d.Reintegro.Periodo == periodo).Sum(d => d.Monto).ToString());

                     valorEgresos += double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Mes == mes && e.Egreso.Periodo == periodo && (e.CuentaID == 63)).Sum(m => m.Monto).ToString());
                     valor_Reintegros += double.Parse(reintegros.Where(e => (e.CuentaID == 63)).Where(d => d.Mes == mes).Where(d => d.Periodo == periodo).Sum(d => d.Monto_Ingresos).ToString());
                     valor_GastosReintegros += double.Parse(reintegrosGastos.Where(d => d.Reintegro.Cuenta.Codigo.Equals("7.1.9")).Where(e => (e.CuentaIDD == 63)).Where(d => d.Reintegro.Mes == mes).Where(d => d.Reintegro.Periodo == periodo).Sum(d => d.Monto).ToString());
 
                    valorEgresos = (valorEgresos + valor_GastosReintegros) - valor_Reintegros;

                    valorIngresos = valorIngresos - valorEgresos;
                    <td class="num">
                        @if (valorIngresos != 0)
                        {@valorIngresos.ToString("#,###")

                        }
                        else
                        {@Html.Raw("0")}
                    </td>                  
                }
                 @if (@ViewBag.Mes > 12)
                 { 
                     TotalesREstandar[14] = xTotf2;					  
                      double PSename = (xTotf2 / TotalesREstandar[3])*100;
                      if (xTotf2 != 0)
                    { 
	                    <th class="num">=SUMA(@celdas[2]13:@celdas[FinalFila]13) </th>
                    }else{
                        <th class="num">=SUMA(@celdas[2]13:@celdas[FinalFila]13) </th>
                    }
                    <th class="por100"> =SI(@celdas[FinalFila + 1]6 <> 0;(  @celdas[FinalFila + 1]13 / @celdas[FinalFila + 1]6);0) </th>
                 } 

            </tr>

		       <tr>
                <th style="text-align: left">DAP</th>
                   @{ 
                              double xAI13 = 0;
                }
                @foreach (var mes in Meses)
                {
                    double valorIngresos = ingresos.Where(m => (m.CuentaID == 16) && m.Temporal == null && m.Mes == mes && m.Periodo == periodo).Sum(m => m.Monto_Ingresos);
                           valorIngresos += ingresos.Where(m => (m.CuentaID == 17) && m.Temporal == null && m.Mes == mes && m.Periodo == periodo).Sum(m => m.Monto_Ingresos);
                    double valorEgresos = double.Parse(egresos.Where(e => e.Egreso.Temporal == null && e.Egreso.Mes == mes && e.Egreso.Periodo == periodo && (e.CuentaID == 40)).Sum(m => m.Monto).ToString());
                    double valor_Reintegros = double.Parse(reintegros.Where(e => (e.CuentaID == 40)).Where(d => d.Mes == mes).Where(d => d.Periodo == periodo).Sum(d => d.Monto_Ingresos).ToString());
                    double valor_GastosReintegros = double.Parse(reintegrosGastos.Where(d => d.Reintegro.Cuenta.Codigo.Equals("7.1.9")).Where(e => (e.CuentaIDD == 40)).Where(d => d.Reintegro.Mes == mes).Where(d => d.Reintegro.Periodo == periodo).Sum(d => d.Monto).ToString());

                    valorEgresos = valorIngresos - ((valorEgresos + valor_GastosReintegros) - valor_Reintegros);
                    xAI13 += valorEgresos;
                   
                    <td class="num">
                        @if (valorEgresos != 0)
                        {@valorEgresos.ToString("#,###")}
                        else
                        {@Html.Raw("0")}
                    </td>  
                }
                    @if (@ViewBag.Mes > 12)
                    { 
                        TotalesREstandar[20] = xAI13;					  
                        double PSename = (xAI13 / TotalesREstandar[3])*100;
                        if (xAI13 != 0)
                        { 
	                        <th class="num">=SUMA(@celdas[2]14:@celdas[FinalFila]14) </th>
                        }else{
                            <th style=" text-align: right; font-weight: bold;color:blue;"> @Html.Raw("0")</th> 
                        }
                 <th class="por100"> =SI(@celdas[FinalFila + 1]6 <> 0;(  @celdas[FinalFila + 1]14 / @celdas[FinalFila + 1]6 );0)</th>
                    }
            </tr>	
                        @if(ConIva == 1 ){
                 <tr>
                    <th style="background-color: silver; text-align: left">Gestion IVA </th>
                </tr>
                  <tr>
                   <th>11.1 IVA D&eacute;bito Fiscal</th>
                    @{
                        
                        foreach (var mes in Meses )
                        {
                            int valor_ingresosIva = ingresoIVA.Where(m => m.Ingreso.Mes == mes).Sum(d => d.ValorIva);                        
                            <td class="num">@valor_ingresosIva.ToString("#,##0")</td>                      
                        }
                        <th class="num">=SUMA(@celdas[2]16:@celdas[FinalFila]16) </th>
                        <th class="por100">=SI( @celdas[FinalFila + 1]6 = 0; 0 ;  @celdas[FinalFila + 1]16 / @celdas[FinalFila + 1]6 ) </th>
                    }
                </tr>   
                <tr>
                   <th>12.1 IVA Cr&eacute;dito Fiscal</th>
                    @{
                       
                       foreach (var mes in Meses)
                        {
                            int valor_egresos = egresos.Where(d => d.Cuenta.Codigo.Equals("12.1")).Where(d => d.Egreso.Mes == mes).Sum(d => d.Monto);
                        
                            <td class="num">@valor_egresos.ToString("#,##0")</td>                      
                        }
                        <th class="num">=SUMA(@celdas[2]17:@celdas[FinalFila]17) </th>
                        <th class="por100">=SI( @celdas[FinalFila + 1]6 = 0; 0 ;  @celdas[FinalFila + 1]17 / @celdas[FinalFila + 1]17 ) </th>
                    }
               </tr>  
            }
            <tr style="text-align: left">
                <th >Saldo Final</th>  
                @foreach (var mes in Meses)
                {
                     if(ConIva == 0 ){
                        <th class="num">=@celdas[mes + 1]4 + @celdas[mes + 1]12 + @celdas[mes + 1]13 + @celdas[mes + 1]14 </th> 
                     }else{
                        <th class="num">=@celdas[mes + 1]4 + @celdas[mes + 1]12 + @celdas[mes + 1]13 + @celdas[mes + 1]14 + @celdas[mes + 1]16 - @celdas[mes + 1]17 </th> 
                     }
                }                               
                  @if (@ViewBag.Mes > 12)
                 {
                       if(ConIva == 0 ){
                            <th class="num">=@celdas[(FinalFila + 1)]4 + @celdas[(FinalFila + 1)]12 + @celdas[(FinalFila + 1)]13 + @celdas[(FinalFila + 1)]14</th> 
                            <th class="por100">=SI(@celdas[FinalFila + 1]6 <> 0;( @celdas[FinalFila + 1]15 / @celdas[FinalFila + 1]6);0 )</th>
                       }else{
                            <th class="num">=@celdas[(FinalFila + 1)]4 + @celdas[(FinalFila + 1)]12 + @celdas[(FinalFila + 1)]13 + @celdas[(FinalFila + 1)]14 + @celdas[FinalFila + 1]16 - @celdas[FinalFila + 1]17</th> 
                            <th class="por100">=SI(@celdas[FinalFila + 1]6 <> 0;( @celdas[FinalFila + 1]18 / @celdas[FinalFila + 1]6);0 )</th>
                       }
                 } 
            </tr>
        </table>




    }
    catch
    {

    }

}
