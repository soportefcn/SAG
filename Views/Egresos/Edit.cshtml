@model SAG2.Models.Movimiento
@using SAG2.Models
@{
    ViewBag.Title = "Modificar";
    var egresoID = Model.ID;
    Usuario Usuario = (Usuario)Session["Usuario"];
    int PeriodoEstado = ViewBag.PeriodoEstado;

    var Meses = new string[12]
    {
	    "Enero",
	    "Febrero",
	    "Marzo",
	    "Abril",
	    "Mayo",
	    "Junio",
	    "Julio",
	    "Agosto",
	    "Septiembre",
	    "Octubre",
	    "Noviembre",
	    "Diciembre"
	};
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<style>
/* Conversion a mayusculas */
input[type="text"], textarea
{
    text-transform: uppercase;
}
</style>
@if (ViewBag.Imprimir != null && ViewBag.Imprimir.Equals("true"))
{ 
    <script type="text/javascript" language="javascript">
        window.open("../../Imprimir/Egreso/@Html.Raw(Model.ID.ToString())", 'Comprobante de Egreso', 'width=800,height=600,scrollbars=yes,menubar=no,toolbars=no');
    </script>
}
<div id="SAGBox">
    <h3>Egresos</h3>
    <div class="panel panel-default">
  <div class="panel-heading"><h3><b>Registro de Comprobante de Egreso</b></h3></div>
   <div class="panel-body">
   

        @if (Model.Nulo == null || Model.Nulo.Equals("N"))
        {
             <div class="btn-group">
       <a href="./Index" id="linkGeneral" class="btn btn-default">GENERAL</a>
       <a href="./Index" class="linkDetalle btn btn-default" editar="1" id="Ldetalle">DETALLE</a>
             </div>
        }

    <div id="contenido" class="cuentacorriente egreso">
<fieldset id="general">
  <p>&nbsp;</p>
          
@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    @Html.Raw(@ViewBag.Mensaje)
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.ProyectoID)
    @Html.HiddenFor(model => model.CuentaCorrienteID)
    @Html.HiddenFor(model => model.Periodo)
    @Html.HiddenFor(model => model.Mes)
    @Html.HiddenFor(model => model.TipoComprobanteID)
    @Html.HiddenFor(model => model.FechaCreacion)
    @Html.Hidden("MontoOriginal", "0")
    <input type="hidden" name="GestionIva" id="GestionIva" value="@ViewBag.GestionIva" />
     <input type="hidden" name="ActualizarGrilla" id="ActualizarGrilla" value="no" />
    <input type="hidden" name="FondoFijoGrupoID" id="FondoFijoGrupoID" value="@ViewBag.FondoFijoGrupoID" />
    <input type="hidden" name="NDocumento" id="NDocumento" value="1" />
    if (Model.Nulo != null && Model.Nulo.Equals("S"))
    {
        <input type="hidden" name="Nulo" id="Nulo" value="S" />
        <script type="text/javascript" language="javascript">
            $(document).ready(function () {
                $("input").attr('disabled', 'disabled');
                $("select").attr('disabled', 'disabled');
                $("textarea").attr('disabled', 'disabled');
            });
        </script>
    }
    <div class="form-group form-inline">
         <div class="form-group" style="margin-right: 15px;">
            @Html.LabelFor(model => model.NumeroComprobante)
        </div>
        <div class="form-group" style="margin-right: 150px;">
            @Html.TextBoxFor(model => model.NumeroComprobante, new { @class = "form-control", @readonly = "readonly", @Value = @Model.NumeroComprobante, @size = @Model.NumeroComprobante.ToString().Length })
            
        </div>

        <div class="form-group" style="margin-right: 15px;">
            @Html.LabelFor(model => model.Fecha)
        </div>
        <div class="form-group">
            @Html.TextBoxFor(model => model.Fecha, new { @Value = @Model.Fecha.Value.ToShortDateString(), @readonly = "readonly", @class = "calendario_mov form-control" })
        </div>
        </div>
      <div class="form-group form-inline">
         <div class="form-group" style="margin-left: 7px;">
                    <label>Medio Pago</label>
                    <br />
                    @Html.DropDownList("TipoPagoID", null,String.Empty, new { @class = "form-control"})
            </div>
        <div class="form-group" style="margin-right: 15px;">
          <label>N° </label>
        <br />

           <input class="text-box single-line valid" data-val="true" data-val-number="The field N&amp;#186; Cheque must be a number." id="Cheque" name="Cheque" type="text" value=@Model.Cheque maxlength="9">
        </div>

        <div class="form-group" style="margin-right: 15px;">
           <label>Fecha</label>
        <br />
            @Html.TextBoxFor(model => model.FechaCheque, new { @Value = @Model.FechaCheque.Value.ToShortDateString(), @readonly = "readonly", @class = "calendario form-control" })
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.Monto_Egresos)
        <br />
            <input class="form-control" type="text" name="Monto_Egresos" id="Monto_Egresos" readonly="readonly" style="background-color: #CCC;" value="@ViewBag.MontoEgreso" />
        </div>
          </div>

        <div class="form-inline">
            <div class="editor-label expandido">
                @Html.Label("Beneficiario")
            </div>
            <div class="editor-field tipobeneficiario">
                <select name="tipoBeneficiario" id="tipoBeneficiario" class="form-control" style="width:150px !important;">
                    <option value="1"@if (Model.Persona != null)
                                     { @Html.Raw(" selected=\"selected\"") }>Personal</option>
                    <option value="2"@if (Model.Proveedor != null)
                                     { @Html.Raw(" selected=\"selected\"") }>Proveedores</option>
                    <option value="3"@if (Model.Persona == null && Model.Proveedor == null)
                                     { @Html.Raw(" selected=\"selected\"") }>Otro</option>
                </select> 
                @Html.Hidden("PersonaID")
                @Html.Hidden("ProveedorID")

                <span id="InfoBeneficiario">
                    @Html.TextBoxFor(model => model.Rut, new { @style = "width: 95px;", @maxlength = "8", @class="form-control" })-@Html.TextBoxFor(model => model.DV, new { @id = "DVBuscar", @style = "width: 40px !important;", @maxlength = "1", @class="form-control" }) 
                    <img src="@Url.Content("~/Content/Images/Buscar2.png")" class="BuscarPopUpPersonal" alt="Buscar" title="Buscar" style="vertical-align: middle; cursor:pointer;" />
                    @Html.TextBoxFor(model => model.Beneficiario, new { @style = "width: 300px;", @readonly = "readonly", @class="form-control" })
                </span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, "Glosa global")
        </div>
        <div class="form-group">
            @if (Model.Nulo == null || Model.Nulo.Equals("N"))
            {
                @Html.TextArea("Descripcion", new { @class = "form-control", @value = Model.Descripcion })
            }
            else
            {
                @Html.Raw("<textarea name=\"Descripcion\" id=\"Descripcion\" cols=\"60\" rows=\"7\">COMPROBANTE NULO</textarea>")
            }
        </div>
    
            if (Usuario.esAdministrador)
            {
       <div class="form-group form-inline">
         <div class="form-group" style="margin-right: 15px;">
            Período
        </div>
        <div class="form-group" style="margin-right: 15px;">
            <input class="form-control" type="text" value="@Model.Periodo" readonly="readonly" />
        </div>
         <div class="form-group" style="margin-right: 15px;">
            Mes
        </div>
        <div class="form-group">
            <input class="form-control" type="text" value="@Meses[@Model.Mes - 1]" readonly="readonly" />
        </div>
           </div>
            }

            if (Model.Nulo == null || Model.Nulo.Equals("N"))
            {

            }
             <div class="panel-footer"> 
             <div class="alert alert-warning"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> RECUERDE QUE AL MOMENTO DE EDITAR O REALIZAR MODIFICACIONES EN EL EGRESO, SE ELIMINARÁ EL O LOS REINTEGROS y BIENES DE INVENTARIO RELACIONADOS, EN CASO DE EXISTIR. </div>
      <div class="form-group form-inline">

      <div style ="width: 400px ; display:inline-block">
           <a class="btn btn-success" data-toggle="tooltip" data-placement="top" title="Buscar" href="@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Egresos/Index" onclick="window.open(this.href, 'Buscar','width=1100,height=400,scrollbars=yes,menubar=no,toolbars=no'); return false"><span class ="fa fa-search fa-lg"></span></a>
       <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Nuevo" href="@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Egresos/Create"><span class ="fa fa-file-o  fa-lg"></span></a>
        <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Imprimir" href="../../Imprimir/Egreso/@Html.Raw(Model.ID.ToString())" onclick="window.open(this.href, 'Comprobante de Egreso','width=800,height=600,scrollbars=yes,menubar=no,toolbars=no'); return false"><span class ="fa fa-print fa-lg"></span></a>
           <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Imprimir Cheque" href="../../Imprimir/EgresoCheque/@Html.Raw(Model.ID.ToString())" onclick="window.open(this.href, 'Comprobante de Egreso','width=800,height=600,scrollbars=yes,menubar=no,toolbars=no'); return false"><span class ="fa fa-money fa-lg"></span></a>
        @if (Model.Nulo == null || Model.Nulo.Equals("N") )
        {
            if (PeriodoEstado == 0 || Usuario.esAdministrador)
            {
           
                <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Liberar" href="../LiberarEgreso/@Html.Raw(Model.ID.ToString())" onclick="return confirm('Realmente desea liberar este egreso? Eliminará todo el detalle asociado a él.  y se eliminaran los bienes asociados');"><span class ="fa fa-unlock fa-lg"></span></a>
                <a class="btn btn-warning" data-toggle="tooltip" data-placement="top" title="Anular" href="../Anular/@Html.Raw(Model.ID.ToString())" onclick="return confirm('Realmente desea anular este egreso? Si lo hace, PERDERÁ el correlativo. y se eliminaran los bienes asociados');"><span class ="fa fa-times fa-lg"></span></a>
            } 
        }
        @if (@ViewBag.UltimoIdentificador != null && @ViewBag.UltimoIdentificador.Equals(Model.ID.ToString()))
        {
            <a class="btn btn-danger" data-toggle="tooltip" data-placement="top" title="Eliminar" href="../Delete/@Html.Raw(Model.ID.ToString())" onclick="return confirm('Realmente desea eliminar este egreso? Si lo hace, podrá utilizar nuevamente este correlativo. y se eliminaran los bienes asociados');"><span class ="fa fa-trash-o fa-fw"></span></a>
        }
        <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Cancelar" href="@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Egresos/Create"><span class ="fa fa-undo fa-fw"></span></a>
          
</div>
          <div style="float :right;width:200px;display:inline-block">
     @if (Model.Nulo == null || Model.Nulo.Equals("N"))
     {
         if (PeriodoEstado == 0 || Usuario.esAdministrador)
         {
            <input class="btn btn-primary" type="submit" value="Guardar" id="guardar-egreso" />
        }
     }
      </div>
      </div>

       </div>

        <script type="text/javascript">
            $('#guardar-egreso').click(function(){ if(confirm("Esta seguro que desea editar el egreso? Recuerde que se eliminarán los reintegros asociados.")) return true; else return false; })
        </script>
}
    <br />

    </fieldset>
    <fieldset id="detalle">
       <p>&nbsp;</p> 
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.Hidden("DeudaPendienteID", null);
    @Html.Hidden("BoletaHonorarioID", null);
    @Html.Hidden("DetalleEgresoID", null);
    @Html.Hidden("MontoOriginal", null);
     @Html.Hidden("DetalleEgresoIndex", null);
    
        <div class="form-group form-inline">
            <div class="form-group" style="margin-right: 15px;">
                @Html.Label("Origen")
            </div>
            <div  class="form-group">
                <select name="Origen" id="Origen" class="form-control">
                    <option></option>
                    <option value="dp">DEUDA PENDIENTE</option>
                    <option value="hs">HONORARIOS Y SERVICIOS</option>
                    <option value="ff">CAJA CHICA</option>
                    <option value="oo" selected="selected">OTROS</option>
                </select>
            </div>
            <div class="form-group" style="margin-right: 15px;">
                @Html.Label("Nº Comprobante D/P")
            </div>
            <div class="form-group">
                @Html.TextBox("NComprobanteDP", String.Empty, new { @class = "form-control"})
            </div>
        </div>
       
      <div id="Fingreso">
       
        <div class="form-group form-inline">
        <div class="form-group" style="margin-right: 15px;">
            @Html.Label("Tipo Documento")
        </div>
        <div class="editor-field">
           @{ try
              {
            @Html.DropDownList("DocumentoIDD",  null,String.Empty, new { @class = "form-control"})
              }
              catch (Exception)
              {
              }
        }
        </div>
            </div>
         <div id="formularioGestionIva" style="display: none;">
           <div class ="form-group form-inline">
                <div class="form-group">
                   <label> Valor Neto</label> 
                    <br />     
                    <input class="form-control"  id="ValorNeto" name="ValorNeto" type="text" value="@ViewBag.ValorNeto">
                 </div>
                 <div class="form-group">
                    <label>% Iva</label>  
                    <br />     
                    <input class="form-control"  id="Iva" name="Iva" type="text" value="@ViewBag.Iva">
                 </div>
                  <div class="form-group">
                    <label> Valor Iva </label>
                    <br />     
                    <input class="form-control"  id="ValorIva" name="ValorIva" type="text" value="@ViewBag.ValorIva">
                 </div>
          </div>     
        </div>
       <div class="form-group form-inline">
        <div class="form-group" style="margin-right: 15px;">
            @Html.Label("Nº Documento")
        <br />
          <input id="NDocumentoD" name="NDocumentoD" type="text" value="" class="valid validarDocumento form-control">
        </div>

        <div class="form-group" style="margin-right: 15px;">
            @Html.Label("Monto $")
       <br />
             <input id="Monto" name="Monto" type="text" value="" class="valid validarCero form-control">
     
        </div>

        <div class="form-group" style="margin-right: 15px;">
            @Html.Label("Emisión")
       <br />
            @Html.TextBox("FechaEmision", DateTime.Now.ToShortDateString(), new { @class = "calendario form-control", @readonly = "readonly" })
        </div>

        <div class="form-group" style="margin-right: 15px;">
            @Html.Label("Vencimiento")
        <br />
            @Html.TextBox("FechaVencimiento", DateTime.Now.ToShortDateString(), new { @class = "calendario form-control", @readonly = "readonly" })
        </div>
           </div>
        <div class="editor-label expandido">
            @Html.Label("Cuenta")
        </div>
        <div class="editor-field">
            <select class="form-control" name="CuentaID" id="CuentaID">
                @Html.Raw(@ViewBag.Arbol)
            </select>
        </div>

        <div class="form-group">
            @Html.Label("Glosa")
        </div>
        <div class="form-group">
            @Html.TextArea("Glosa", new { @class = "form-control" })
        </div>
      </div>
          if (Model.Nulo == null || Model.Nulo.Equals("N"))
         {
            <div class="row">
                <div class="col-xs-12 col-md-8">
                    <input type="button" value="Calcular Iva" id="LineaIva" class="btn btn-warning" style="display: none;">
                </div>
                <div class="col-xs-6 col-md-4 form-inline" style="text-align: right;">
                    <div class="form-group-inline">
                       <input type="button" value="Eliminar Linea" id="BorrarLinea" class="btn btn-danger" />
                       <input type="button" value="Guardar Linea" id="GuardarLinea" class="btn btn-primary" />          
                    </div>
                </div>
            </div>
         }
         <p>&nbsp;</p>
        <p>&nbsp;</p>
       
    
        <table style="margin: 0; padding: 0;">
            <tr style="margin: 0; padding: 0;">
                <td style="margin: 0; padding: 0;"><h3 style="margin: 0; padding: 0;">Detalle del egreso</h3></td>
                <td style="margin: 0; padding: 0; text-align: right;">Haga clic en una línea para ver información</td>
            </tr>
        </table>
    <div id="DetalleData"></div>
  
    
}
        </fieldset>
    </div>
    </div> 
 
    </div>
</div>
<script>
    function Get_Fecha(value) {
        var d = value.getDate();
        var m = value.getMonth() + 1;
        var y = value.getFullYear();

        if (d < 9) {
            var dia = "0" + d.toString();
        } else {
            var dia = d.toString();
        }
        if (m < 9) {
            var mm = "0" + m.toString();
        } else {
            var mm = m.toString();
        }
        var XFecha1 = dia + "-" + mm + "-" + y.toString();
        return XFecha1;
    }

    function CargaGrilla() {
        $.get('/SAG_5/Data/DetalleEgreso', function (data) {

            var ValorEgresos = 0;
            var html = "";
            var Detalle = $.parseJSON(data);
            if (Detalle.length > 0) {
                var html = "<table class='table table-bordered'> <tr class='info'> <td>#</td><td>N° Comp. D/P</td><td> Documento</td><td>N° Doc</td><td>Monto</td><td>Emision</td><td>Vencimiento</td><td>Cuenta</td><td>Glosa</td></tr> "
                for (i = 0; i < Detalle.length; i++) {
                    var documento = "";
                    var  DD_ID = 0 ;
                    if (Detalle[i].Documento != null) {
                        documento = Detalle[i].Documento;
                    }
                    if (Detalle[i].DetalleID != 0) {
                        DD_ID = Detalle[i].DetalleID;
                    } else {
                        DD_ID = i + 1;
                    }

                    html = html + "<tr onclick='LDetalle(" + DD_ID + ")' style='cursor: pointer;' ID=" + "Linea_" + DD_ID + " >";
                    html = html + "<td>" + (i + 1) + "</td>";
                    html = html + "<td>" + Detalle[i].NComprobanteDP + "</td>";
                    html = html + "<td>" + documento + "</td>";
                    html = html + "<td>" + Detalle[i].NDocumento + "</td>";
                    html = html + "<td>" + Detalle[i].Monto + "</td>";
                    html = html + "<td>" + Detalle[i].FechaEmision + "</td>";
                    html = html + "<td>" + Detalle[i].FechaVencimiento + "</td>";
                    html = html + "<td>" + Detalle[i].NombreCuenta + "</td>";
                    html = html + "<td>" + Detalle[i].Glosa + "</td>";
                    html = html + "<td>" + Detalle[i].Iva + "</td>";
                    html = html + "</tr>";
                    ValorEgresos += Detalle[i].Monto;

                    if (Detalle[i].FondoFijoID != null) {
                        window.parent.document.getElementById("Origen").value = "ff";
                        $('#Origen').prop('disabled', true);
                        $("#GuardarLinea").hide();
                        $("#Fingreso").hide();
                    }
                    if (Detalle[i].BoletaHonorarioID != null) {
                        window.parent.document.getElementById("Origen").value = "hs";
                        $("Egresos Monto_Egresos").val(Detalle[i].Monto);
                        $('#Origen').prop('disabled', true);
                        $("#GuardarLinea").hide();
                        $("#Fingreso").hide();
                    }
                    if (Detalle[i].DeudaPendienteID != null) {
                        window.parent.document.getElementById("Origen").value = "dp";                       
                        $('#Origen').prop('disabled', true);
                    }
                    if (Detalle[i].Iva == 0) {
                        $(".egreso #DocumentoIDD").val("");
                        $(".egreso #NDocumentoD").val("");
                        $("#LineaIva").hide();
                    }
                    if (Detalle[i].Iva == 1) {
                        $("#LineaIva").show();
                    }
                    if (Detalle[i].Iva == 2) {
                        $("#LineaIva").hide();
                    }

                }
                html = html + "</table>";
                $('#Origen').prop('disabled', true);
            }
            var xpress = document.getElementById("DetalleData");
            $('#Monto_Egresos').val(ValorEgresos);
            xpress.innerHTML = html;

        });
      
    };

    $("#LineaIva").click(function () {
        var GestionIva = $("#GestionIva").val();
        var DocumentoID = $("#DocumentoIDD option:selected").attr('value');
        if (DocumentoID == 1 && GestionIva == 1) {
            $.post("/SAG_5/Egresos/LineaIVA", $("#detalle form").serialize(),
            function (data) {
                if (data == "OK") {
                    $.get('/SAG_5/Data/SumaDetalleEgreso', function (data) {
                        $('#Monto_Egresos').val(data);
                      
                        CargaGrilla();
                       
                        alert("Calculo de IVA con exito!");
                       
                    });
                } else {
                 
                    alert("Ocurrió un error al borrar el detalle.");

                    return false;
                }
            })
            .success(function () { })
            .error(function () { })
            .complete(function () { });
        }


    });
    $("#BorrarLinea").click(function () {
        var monto = new Number($("#Monto").val());
        var montoEgreso = new Number($("#Monto_Egresos").val());
        // Guardamos linea del formulario si opcion es otro
        if ($(".egreso #Origen").val() == "oo" || $(".egreso #Origen").val() == "dp" || $(".egreso #Origen").val() == "hs") {
            $.post("/SAG_5/Egresos/BorrarLinea", $("#detalle form").serialize(),
            function (data) {
                if (data == "OK") {
                    $.get('/SAG_5/Data/SumaDetalleEgreso', function (data) {
                        $('#Monto_Egresos').val(data);
                        $('body').css('opacity', '0.25');
                        CargaGrilla();
             
                        alert("Detalle borrada con exito!");
                        $('body').css('opacity', '1');
                    });
                } else {
                    $('body').css('opacity', '0.25');
                    alert("Ocurrió un error al borrar el detalle.");
                    $('body').css('opacity', '1');
                    return false;
                }
            })
            .success(function () { })
            .error(function () { })
            .complete(function () { });
        } else if ($(".egreso #Origen").val() == "ff") {

        }

        if ($(".egreso #DetalleEgresoID") != undefined && $(".egreso #DetalleEgresoID").val() != "" && $(".egreso #DetalleEgresoID") != null && $(".egreso #DetalleEgresoID").val() != "0") {
            $(".egreso #DetalleEgresoID").val("");
        } else {
            $(".egreso #DetalleEgresoIndex").val("");
        }



        window.parent.document.getElementById("NComprobanteDP").value = "";

        window.parent.document.getElementById("Monto").value = "";
        window.parent.document.getElementById("CuentaID").value = "";
        window.parent.document.getElementById("Glosa").value = "";
        window.parent.document.getElementById("DeudaPendienteID").value = "";

        window.parent.document.getElementById("BoletaHonorarioID").value = "";
     
        $("#BorrarLinea").hide();
        $("#DetalleEgresoIndex").val("");
        $("#texto").val("");
    });

    $("#LineaIva").click(function () {
        var GestionIva = $("#GestionIva").val();
        var DocumentoID = $("#DocumentoIDD option:selected").attr('value');
        if (DocumentoID == 1 && GestionIva == 1) {
            $.post("/SAG_5/Egresos/LineaIVA", $("#detalle form").serialize(),
            function (data) {
                if (data == "OK") {
                    $.get('/SAG_5/Data/SumaDetalleEgreso', function (data) {
                        $('#Monto_Egresos').val(data);
                     
                        CargaGrilla();
    
                        alert("Calculo de IVA con exito!");
                        $('body').css('opacity', '1');
                    });
                } else {
                 
                    alert("Ocurrió un error al borrar el detalle.");
                    $('body').css('opacity', '1');
                    return false;
                }
            })
            .success(function () { })
            .error(function () { })
            .complete(function () { });
        }


    });
    $(".egreso #GuardarLinea").click(function () {
        if ($("#CuentaID").val() == "" && $(".egreso #Origen").val() != "ff") {
            $('body').css('opacity', '0.25');
            alert("Debe seleccionar una cuenta para guardar el detalle.");
            $('body').css('opacity', '1');
            $("#CuentaID").focus();
            return false;
        }

        var monto = new Number($("#Monto").val());
        var montoEgreso = new Number($("#Monto_Egresos").val());
        var montoTotal = monto + montoEgreso;

        if ($(".egreso #Origen").val() == "oo" || $(".egreso #Origen").val() == "dp" || $(".egreso #Origen").val() == "hs") {
            $.post("/SAG_5/Egresos/GuardarLinea", $("#detalle form").serialize(),
            function (data) {
                if (data == "OK") {
                    CargaGrilla();
                    // Si el monto fue guardado leemos utilidad para sumar detalles del egreso
                    $("#Monto_Egresos").val(montoTotal);
                    $(".egreso #NComprobanteDP").val("");

                    $(".egreso #Monto").val("");
                    $(".egreso #CuentaID").val("");
                    $(".egreso #Glosa").val("");
                    $(".egreso #DeudaPendienteID").val("");
                    $(".egreso #BoletaHonorarioID").val("");
                 
                   
                } else {
                    $('body').css('opacity', '0.25');
                    alert(data);
                    $('body').css('opacity', '1');
                    return false;
                }
            })
            .success(function () { })
            .error(function () { })
            .complete(function () { });
        } else if ($(".egreso #Origen").val() == "ff") {

            var fondoFijoGrupoID = $("#FondoFijoGrupoID").val();

            $.get('/SAG_5/CajaChica/GenerarEgreso/?fondoFijoGrupoID=' + fondoFijoGrupoID, function (response) {
                $('body').css('opacity', '0.25');
                if (response == "-1") {
                    alert("Ocurrió un error al agregar el detalle del fondo fijo.");
                    return false;
                } else if (response == "0") {
                    alert("No hay fondo fijo disponible para generar el egreso.");
                    return false;
                } else {
                    alert("Fondo fijo agregado al detalle del egreso con exito!");
                    CargaGrilla();
                    $(".egreso #GuardarLinea").click(function () {
                        if ($("#CuentaID").val() == "" && $(".egreso #Origen").val() != "ff") {
                            $('body').css('opacity', '0.25');
                            alert("Debe seleccionar una cuenta para guardar el detalle.");
                            $('body').css('opacity', '1');
                            $("#CuentaID").focus();
                            return false;
                        }

                        var monto = new Number($("#Monto").val());
                        var montoEgreso = new Number($("#Monto_Egresos").val());
                        var montoTotal = monto + montoEgreso;

                        if ($(".egreso #Origen").val() == "oo" || $(".egreso #Origen").val() == "dp" || $(".egreso #Origen").val() == "hs") {
                            $.post("/SAG_5/Egresos/GuardarLinea", $("#detalle form").serialize(),
                            function (data) {
                                if (data == "OK") {
                                    // Si el monto fue guardado leemos utilidad para sumar detalles del egreso
                                    CargaGrilla();
                                   
                                } else {
                                    $('body').css('opacity', '0.25');
                                    alert(data);
                                    $('body').css('opacity', '1');
                                    return false;
                                }
                            })
                            .success(function () { })
                            .error(function () { })
                            .complete(function () { });
                        } else if ($(".egreso #Origen").val() == "ff") {

                            var fondoFijoGrupoID = $("#FondoFijoGrupoID").val();

                            $.get('/SAG_5/CajaChica/GenerarEgreso/?fondoFijoGrupoID=' + fondoFijoGrupoID, function (response) {
                                $('body').css('opacity', '0.25');
                                if (response == "-1") {
                                    alert("Ocurrió un error al agregar el detalle del fondo fijo.");
                                    return false;
                                } else if (response == "0") {
                                    alert("No hay fondo fijo disponible para generar el egreso.");
                                    return false;
                                } else {
                                    alert("Fondo fijo agregado al detalle del egreso con exito!");
                                    montoEgreso = new Number(response);
                                    CargaGrilla();
                                    $("#Monto_Egresos").val(montoEgreso);
                                    $(".egreso #NComprobanteDP").val("");
                                    $(".egreso #DocumentoIDD").val("");
                                    $(".egreso #NDocumentoD").val("");
                                    $(".egreso #Monto").val("");
                                    $(".egreso #CuentaID").val("");
                                    $(".egreso #Glosa").val("");
                                    $(".egreso #Origen").val("");
                                    $(".egreso #DeudaPendienteID").val("");
                                    $(".egreso #BoletaHonorarioID").val("");
                                }
                                $('body').css('opacity', '1');
                            });
                            //}
                        }
                        if ($(".egreso #DetalleEgresoID") != undefined && $(".egreso #DetalleEgresoID").val() != "" && $(".egreso #DetalleEgresoID") != null && $(".egreso #DetalleEgresoID").val() != "0") {
                            $(".egreso #DetalleEgresoID").val("");
                        } else {
                            $(".egreso #DetalleEgresoIndex").val("");
                        }

                    });
                    montoEgreso = new Number(response);
                    $("#Monto_Egresos").val(montoEgreso);
                    $(".egreso #NComprobanteDP").val("");
                    $(".egreso #DocumentoIDD").val("");
                    $(".egreso #NDocumentoD").val("");
                    $(".egreso #Monto").val("");
                    $(".egreso #CuentaID").val("");
                    $(".egreso #Glosa").val("");
                    $(".egreso #Origen").val("");
                    $(".egreso #DeudaPendienteID").val("");
                    $(".egreso #BoletaHonorarioID").val("");
                }
                $('body').css('opacity', '1');
            });
            //}
        }
        if ($(".egreso #DetalleEgresoID") != undefined && $(".egreso #DetalleEgresoID").val() != "" && $(".egreso #DetalleEgresoID") != null && $(".egreso #DetalleEgresoID").val() != "0") {
            $(".egreso #DetalleEgresoID").val("");
        } else {
            $(".egreso #DetalleEgresoIndex").val("");
        }

    });

    $(".egreso #DocumentoIDD").change(function () {

        if ($(this).val() == 3) {
            var tipoBeneficiario = $(".tipobeneficiario #tipoBeneficiario").val();
            var personalID = 0;
            var proveedorID = 0;
            var rut = "", dv = "", beneficiario = "";
            if (tipoBeneficiario == "1" && $(".tipobeneficiario #PersonaID").val() != "") {
                personalID = $(".tipobeneficiario #PersonaID").val();
            } else if (tipoBeneficiario == "2" && $(".tipobeneficiario #ProveedorID").val() != "") {
                proveedorID = $(".tipobeneficiario #ProveedorID").val();
            } else if (tipoBeneficiario == "3" && $(".tipobeneficiario #Rut").val() != "" && $(".tipobeneficiario #DVBuscar").val() != "" && $(".tipobeneficiario #Beneficiario").val() != "") {
                rut = $(".tipobeneficiario #Rut").val();
                dv = $(".tipobeneficiario #DVBuscar").val();
                beneficiario = $(".tipobeneficiario #Beneficiario").val();
            }
            if (personalID != 0) {
                window.open("/SAG_5/BoletasHonorarios/IngresarPopUp/?personalID=" + personalID, 'SeleccionBoletaHonorarios', 'width=800,height=600');
            } else if (proveedorID != 0) {
                window.open("/SAG_5/BoletasHonorarios/IngresarPopUp/?proveedorID=" + proveedorID, 'SeleccionBoletaHonorarios', 'width=800,height=600');
            } else {
                window.open("/SAG_5/BoletasHonorarios/IngresarPopUp/?rut=" + rut + "&dv=" + dv + "&beneficiario=" + beneficiario, 'SeleccionBoletaHonorarios', 'width=800,height=600');
            }

            $(".egreso #NComprobanteDP").attr("disabled", true);
            $(".egreso #NDocumento").attr("readonly", "readonly");
            $(".egreso #FechaEmision").attr("readonly", "readonly");
            $(".egreso #FechaVencimiento").attr("disabled", true);
            //$(".egreso #Monto").attr("readonly", "readonly");
            // $(".egreso #DocumentoID").val("3");
            $(".egreso #Origen").val("hs");
        }
    });

    $(".egreso #Origen").change(function () {


        $(".egreso #NComprobanteDP").removeAttr("disabled");
        $(".egreso #NDocumento").removeAttr("disabled");
        $(".egreso #FechaEmision").removeAttr("disabled");
        $(".egreso #FechaVencimiento").removeAttr("disabled");
        $(".egreso #CuentaID").removeAttr("disabled");
        $(".egreso #Glosa").removeAttr("disabled");
        $(".egreso #Monto").removeAttr("disabled");
        $(".egreso #NDocumento").removeAttr("readonly");
        $(".egreso #Monto").removeAttr("readonly");

        var tipoBeneficiario = $(".tipobeneficiario #tipoBeneficiario").val();
        var personalID = 0;
        var proveedorID = 0;
        var rut = "", dv = "", beneficiario = "";
        if (tipoBeneficiario == "1" && $(".tipobeneficiario #PersonaID").val() != "") {
            personalID = $(".tipobeneficiario #PersonaID").val();
        } else if (tipoBeneficiario == "2" && $(".tipobeneficiario #ProveedorID").val() != "") {
            proveedorID = $(".tipobeneficiario #ProveedorID").val();
        } else if (tipoBeneficiario == "3" && $(".tipobeneficiario #Rut").val() != "" && $(".tipobeneficiario #DVBuscar").val() != "" && $(".tipobeneficiario #Beneficiario").val() != "") {
            rut = $(".tipobeneficiario #Rut").val();
            dv = $(".tipobeneficiario #DVBuscar").val();
            beneficiario = $(".tipobeneficiario #Beneficiario").val();
        } else {
            if ($(this).val() != "oo") {
                $('body').css('opacity', '0.25');
                alert("Para ingresar el detalle debe seleleccionar el beneficiario del egreso.");
                $('body').css('opacity', '1');
                $(".egreso #general").show();
                $(this).prop('selectedIndex', 0);
                $(".egreso #detalle").hide();
                $(".tipobeneficiario #tipoBeneficiario").focus();
                return false;
            }
        }

        if ($(this).val() == "ff") {
            /****
            Deshabilitamos campos que no se utilizan
            *****/
            $(".egreso #NComprobanteDP").attr("disabled", true);
            $(".egreso #NDocumento").attr("disabled", true);
            $(".egreso #FechaEmision").attr("disabled", true);
            $(".egreso #FechaVencimiento").attr("disabled", true);
            $(".egreso #CuentaID").attr("disabled", true);
            $(".egreso #Glosa").attr("disabled", true);
            $(".egreso #Monto").attr("disabled", true);
            $(".egreso #DocumentoID").attr("disabled", true);

            /* Desplegamos los fondos fijos activos */
            window.open("/SAG_5/Egresos/FondoFijo", 'SeleccionCC', 'width=800,height=400');

            /*

*/
        } else if ($(this).val() == "dp") {
            if (personalID != 0) {
                window.open("/SAG_5/DeudasPendientes/ListadoEgreso/?personalID=" + personalID, 'SeleccionDP', 'width=800,height=400');
            } else if (proveedorID != 0) {
                window.open("/SAG_5/DeudasPendientes/ListadoEgreso/?proveedorID=" + proveedorID, 'SeleccionDP', 'width=800,height=400');
            } else {
                window.open("/SAG_5/DeudasPendientes/ListadoEgreso/", 'SeleccionDP', 'width=300,height=800');
            }
            $(".egreso #NComprobanteDP").attr("readonly", "readonly");
            $(".egreso #NDocumento").attr("readonly", "readonly");
            $(".egreso #FechaEmision").attr("readonly", "readonly");
            $(".egreso #FechaVencimiento").attr("readonly", "readonly");
            $(".egreso #DocumentoID").attr("readonly", "readonly");
        } else if ($(this).val() == "hs") {
            if (personalID != 0) {
                window.open("/SAG_5/BoletasHonorarios/IngresarPopUp/?personalID=" + personalID, 'SeleccionBoletaHonorarios', 'width=800,height=500');
            } else if (proveedorID != 0) {
                window.open("/SAG_5/BoletasHonorarios/IngresarPopUp/?proveedorID=" + proveedorID, 'SeleccionBoletaHonorarios', 'width=800,height=500');
            } else {
                window.open("/SAG_5/BoletasHonorarios/IngresarPopUp/?rut=" + rut + "&dv=" + dv + "&beneficiario=" + beneficiario, 'SeleccionBoletaHonorarios', 'width=800,height=500');
            }

            $(".egreso #NComprobanteDP").attr("disabled", true);
            $(".egreso #NDocumento").attr("readonly", "readonly");
            $(".egreso #FechaEmision").attr("readonly", "readonly");
            $(".egreso #FechaVencimiento").attr("disabled", true);
            //$(".egreso #Monto").attr("readonly", "readonly");
            $(".egreso #DocumentoID").val("3");
        } else {
            $(".egreso #NComprobanteDP").attr("disabled", true);
            $(".egreso #NComprobanteDP").attr("readonly", true);
            $(".egreso #DocumentoID").removeAttr("readonly");
            $(".egreso #DocumentoID").removeAttr("disabled");
        }
    });

    $(".egreso #Origen").change();
  

    function LDetalle(dato) {
        var MuestraDetalle = $("#DetalleEgresoID").val();
        $("#Linea_" + MuestraDetalle).css('background-color', 'white');
        if (dato == MuestraDetalle) {
            window.parent.document.getElementById("NComprobanteDP").value = "";
            window.parent.document.getElementById("DocumentoIDD").value = "";
            window.parent.document.getElementById("NDocumentoD").value = "";
            window.parent.document.getElementById("Monto").value = "";
            window.parent.document.getElementById("CuentaID").value = "";
            window.parent.document.getElementById("Glosa").value = "";
            window.parent.document.getElementById("DeudaPendienteID").value = "";
            window.parent.document.getElementById("BoletaHonorarioID").value = "";
      
            $("#BorrarLinea").hide();
            $("#DetalleEgresoID").val("");
            $("#texto").val("");
            $("#Linea_" + dato).css('background-color', 'white');
        } else {
            url = '@Url.Action("NDetalleEgresoGrilla", "data")';
            window.parent.document.getElementById("NComprobanteDP").value = "";
            window.parent.document.getElementById("DocumentoIDD").value = "";
            window.parent.document.getElementById("NDocumentoD").value = "";
            window.parent.document.getElementById("Monto").value = "";
            window.parent.document.getElementById("CuentaID").value = "";
            window.parent.document.getElementById("Glosa").value = "";
            window.parent.document.getElementById("DeudaPendienteID").value = "";           
            window.parent.document.getElementById("BoletaHonorarioID").value = "";
            window.parent.document.getElementById("Glosa").innerHTML = "";
            if (window.parent.document.getElementById("Origen").value == "oo") {
                $("#BorrarLinea").show();
                $("#Linea_" + dato).css('background-color', 'yellow');
            }
            if (window.parent.document.getElementById("Origen").value == "dp") {
                $("#BorrarLinea").show();
                $("#Linea_" + dato).css('background-color', 'yellow');
            }
            return $.ajax({
                url: url,
                method: 'POST',
                async: false,
                dataType: 'json',
                data: {
                    x: dato
                },
                success: function (DEgreso, textStatus, xhr) {

                    var Datos = DEgreso;

                    if (Datos.FondoFijoID == null && Datos.DeudaPendienteID == null && Datos.BoletaHonorarioID == null) {
                        value = new Date(parseInt(Datos.FechaEmision.replace("/Date(", "").replace(")/", ""), 10));
                        value2 = new Date(parseInt(Datos.FechaVencimiento.replace("/Date(", "").replace(")/", ""), 10));

                        var XFecha1 = Get_Fecha(value);
                        var XFecha2 = Get_Fecha(value2);

                        if (Datos.Iva == 0) {
                            $('#DetalleEgresoID').val(dato);
                            $('#Monto').val(Datos.Monto);
                            $('#NDocumentoD').val(Datos.NDocumento);
                            $('#DocumentoIDD').val(Datos.DocumentoID);
                            $('#Glosa').val(Datos.Glosa);
                            $('#CuentaID').val(Datos.CuentaID);
                            $('#FechaEmision').val(XFecha1);
                            $('#FechaVencimiento').val(XFecha2);
                            $("#CuentaID").change();
                            window.parent.document.getElementById("Origen").value = "oo";
                            window.parent.document.getElementById("MontoOriginal").value = Datos.Monto;

                            window.parent.document.getElementById("BorrarLinea").style.display = 'block-inline';
                        }
                        if (Datos.Iva == 1) {
                           
                             $('#Origen').prop('disabled', true);
                           
                         
                            $('#DetalleEgresoID').val(dato);
       
                            $('#Monto').val(Datos.Monto);
                            $('#NDocumentoD').val(Datos.NDocumento);
                            $('#DocumentoIDD').val(Datos.DocumentoID);
                            $('#Glosa').val(Datos.Glosa);
                            $('#CuentaID').val(Datos.CuentaID);
                            $('#FechaEmision').val(XFecha1);
                            $('#FechaVencimiento').val(XFecha2);
                            $("#CuentaID").change();
                            window.parent.document.getElementById("Origen").value = "oo";
                            window.parent.document.getElementById("MontoOriginal").value = Datos.Monto;
                            $("#GuardarLinea").show();
                            window.parent.document.getElementById("GuardarLinea").style.display = 'block-inline';
                            window.parent.document.getElementById("BorrarLinea").style.display = 'block-inline';
                          
                            
                        }
                        if (Datos.Iva == 2) {
                            alert("Debe Seleccionar el otro concepto")
                            $("#Linea_" + dato).css('background-color', 'white');
                            $("#BorrarLinea").hide();
                            $("#GuardarLinea").hide();
                        }
                    }
    
                    if (Datos.DeudaPendienteID != null) {
                        $('#DeudaPendienteID').val(Datos.DeudaPendienteID);
                        window.parent.document.getElementById("Origen").value = "dp";
                        value = new Date(parseInt(Datos.FechaEmision.replace("/Date(", "").replace(")/", ""), 10));
                        value2 = new Date(parseInt(Datos.FechaVencimiento.replace("/Date(", "").replace(")/", ""), 10));

                        var XFecha1 = Get_Fecha(value);
                        var XFecha2 = Get_Fecha(value2);

                        $('#DetalleEgresoID').val(dato);
                        $('#Monto').val(Datos.Monto);
                        $('#NDocumentoD').val(Datos.NDocumento);
                        $('#DocumentoIDD').val(Datos.DocumentoID);
                        $('#Glosa').val(Datos.Glosa);
                        $('#CuentaID').val(Datos.CuentaID);
                        $('#FechaEmision').val(XFecha1);
                        $('#FechaVencimiento').val(XFecha2);
                        $("#CuentaID").change()
                        window.parent.document.getElementById("MontoOriginal").value = Datos.Monto;
                        window.parent.document.getElementById("BorrarLinea").style.display = 'block-inline';
                    }
                    if (Datos.BoletaHonorarioID != null) {
                        $('#BoletaHonorarioID').val(Datos.BoletaHonorarioID);
                        window.parent.document.getElementById("Origen").value = "hs";
                        window.parent.document.getElementById("DocumentoIDD").value = "3";
                        window.open("/SAG_5/BoletasHonorarios/EditarPopUp/?ID=" + Datos.BoletaHonorarioID, 'SeleccionBoletaHonorarios', 'width=800,height=500');
                    }
                    if (Datos.FondoFijoID != null) {
                        $('#FondoFijoID').val(Datos.FondoFijoID);
                        $('body').css('opacity', '0.25');
                        alert("El detalle de la caja chica no se puede modificar ya que se genera automáticamente.");
                        $('body').css('opacity', '1');
                        return false;
                    }
                },
                error: function (request, status, error) {
                    alert("error");
                }
            });
        }

    };
    $(document).ready(function () {
        window.onload = function () {
            CargaGrilla();
        }
        $(window).focusin(function () {
            if ($("#ActualizarGrilla").val() == "SI") {
                if ($('#Fingreso').is(':hidden')) {
                    CargaGrilla();
                    $("#ActualizarGrilla").val("NO");
                }
            }
        });
    });
</script>