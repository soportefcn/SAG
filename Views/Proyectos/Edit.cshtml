@model SAG2.Models.Proyecto
@{
    ViewBag.Title = "Modificar";
}
@{
    SAG2.Models.Usuario Usuario = (SAG2.Models.Usuario)Session["Usuario"];
    long ValorAnterior = 0;
    if(Model.ValorSubvencion == null){
        ValorAnterior = 0;
    }else{
        ValorAnterior = long.Parse(Model.ValorSubvencion.ToString());
    }
}
<style>
/* Conversion a mayusculas */
input[type="text"], textarea
{
    text-transform: uppercase;
}
</style>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<div id="SAGBox">
    <h3>Proyectos</h3>
    <div id="controles">

    </div>
    <div id="contenido" class="personal">
@using (Html.BeginForm("Edit", "Proyectos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.Raw(@ViewBag.Mensaje)
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.MesInicio)
    @Html.HiddenFor(model => model.PeriodoInicio)
    @Html.Hidden("DireccionID", Model.DireccionID)
    @Html.Hidden("ConvenioID", Model.ConvenioID)
    @Html.Hidden("ValorS",Model.ValorSubvencion)
       
  <fieldset>      
  <div class="panel panel-default">
  <div class="panel-heading"><h3><b>Datos de Proyecto</b></h3></div>
  <div class="panel-body">
   <h3><b>Antecedentes del Proyecto</b></h3>
      <div class="form-group form-inline">
          <div class="form-group" style="margin-right: 28px;">
              @Html.LabelFor(model => model.Institucion, "Institución")
          </div>
           <div class="form-group" style="margin-right: 20px;">
                @if (Usuario.esAdministrador)
                {
                    @Html.TextBoxFor(model => model.Institucion, new { @class = "form-control", @style="width: 350px;" })
                }
                else
                {
                    @Html.TextBoxFor(model => model.Institucion, new { @class = "form-control", @readonly = "readonly", @style="width: 350px;" })
                }
           </div>
          <div class="form-group" style="margin-right: 10px;">
            @Html.LabelFor(model => model.Nombre, "Proyecto")
          </div>
          <div class="form-group">
               @if (Usuario.esAdministrador)
                {
                    @Html.TextBoxFor(model => model.Nombre, new { @class="form-control", @style="width: 250px;" })
                }
                else
                {
                    @Html.TextBoxFor(model => model.Nombre, new {@class="form-control", @readonly = "readonly", @style="width: 250px;" })
                }
          </div>
      </div>
       <div class="form-group form-inline">
          <div class="form-group" style="margin-right: 10px;">
               @Html.LabelFor(model => model.TipoProyectoID, "Tipo proyecto")
          </div>
           <div class="form-group">
                @Html.DropDownList("TipoProyectoID", null, new { @class = "form-control" })
           </div>
          </div>
      <div class="form-group form-inline">
          <div class="form-group" style="margin-right: 15px;">
               @Html.LabelFor(model => model.CodCodeni, "Cód. Programa")
          </div>
          <div class="form-group" style="margin-right: 99px;">
              @if (Usuario.esAdministrador)
                {
                    @Html.TextBoxFor(model => model.CodCodeni, new {  @class = "form-control" })
                }
                else
                {
                    @Html.TextBoxFor(model => model.CodCodeni, new {  @class = "form-control", @readonly = "readonly" })
                }
          </div>
          <div class="form-group" style="margin-right: 10px;">
           <label>Cod. Sename/Servicio Mejor Ni&ntilde;ez</label> 
          </div>
          <div class="form-group">
              @Html.TextBoxFor(model => model.CodSename, new { @class = "form-control" })
          </div>
      </div>
       <div class="form-group form-inline">
          <div class="form-group" style="margin-right: 30px;">
              @Html.LabelFor(model => model.DireccionID, "Dirección")
          </div>
           <div class="form-group" >
            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control", @placeholder="Calle" })
          </div>
           <div class="form-group" >
             @Html.TextBoxFor(model => model.Direccion.Numero, new { @class = "form-control", @placeholder="Numero", @style="width: 100px;" })
          </div>
           <div class="form-group" >
             @Html.TextBoxFor(model => model.Direccion.Depto, new { @class = "form-control", @placeholder="Depto" })
          </div>
       </div>
       <div class="form-group form-inline">
          <div class="form-group" style="margin-right: 45px;">
              @Html.Label("Región")
          </div>    
           <div class="form-group" style="margin-right: 65px;">
              @Html.DropDownList("RegionID", null, new { @class = "form-control", @comuna = Model.Direccion.ComunaID.ToString() })
          </div>  
           <div class="form-group" style="margin-right: 10px;">
              @Html.Label("Comuna")
          </div>    
           <div class="form-group" style="margin-right: 10px;">
                   <select class="form-control" name="ComunaID" id="ComunaID" tabindex="11">
                    <option>Seleccione región</option>
                </select>
          </div>      
       </div>
       <div class="form-group form-inline">
          <div class="form-group" style="margin-right: 10px;">
              @Html.LabelFor(model => model.Fono, "Tél. contacto")
          </div>
             <div class="form-group" style="margin-right: 10px;">
             @Html.TextBoxFor(model => model.Fono, new { @class = "form-control" })
          </div>
       </div>
    <h3><b>Antecedentes del Convenio</b></h3>
    <div class="row form-group form-inline">
          <div class="form-group col-md-4" >             
              <label class="control-label col-md-3" style="padding-left: 0px;top: 10px;">Res.Ex.</label>             
                <div class="form-group col-md-9">
                    @Html.TextBoxFor(model => model.Convenio.ResEx, new { @class = "form-control" })
                </div>
            </div>
          <div class="form-group col-md-4">
               <label class="control-label col-md-3" style="padding-left: 0px;top: 10px;">Nº Plazas</label>              
            <div class="form-group col-md-9">
                @Html.TextBoxFor(model => model.Convenio.NroPlazas, new { @class = "form-control" })
            </div>
          </div>
    </div>
    <div class="row form-group form-inline">
          <div class="form-group col-md-4">
              <label class="control-label col-md-3" style="padding-left: 0px;top: 10px;">Desde</label>          
                <div class="form-group col-md-9">
                @{
                if (Model.Convenio.FechaInicio != null)
                {
                        @Html.TextBox("FechaInicio", Model.Convenio.FechaInicio.Value.ToShortDateString(), new {  @class = "calendario form-control" })
                }
                else
                {
                        @Html.TextBox("FechaInicio", string.Empty, new {  @class = "calendario form-control" })
                }
                    }
          </div>
              </div>
         <div class="form-group col-md-4">
              <label class="control-label col-md-3" style="padding-left: 0px;top: 10px;">Hasta</label>         
             <div class="form-group col-md-9">
                @{
                    if (Model.Convenio.FechaTermino != null)
                    {
                        @Html.TextBox("FechaTermino", Model.Convenio.FechaTermino.Value.ToShortDateString(), new { @class = "calendario form-control" })
                    }
                    else
                    {
                        @Html.TextBox("FechaTermino", string.Empty, new {  @class = "calendario form-control" })
                    }
                } 
            </div>
      </div>
    </div>
      <label>Edades</label>
     <div class="row form-group form-inline">     
         <div class="form-group col-md-4">
             <label class="control-label col-md-3" style="padding-left: 0px;top: 10px;">Mínima</label>                     
            <div class="form-group col-md-9">
                 @Html.TextBoxFor(model => model.EdadMinima, new { @class = "form-control" })   
             </div>
         </div>
          <div class="form-group col-md-4">
              <label class="control-label col-md-3" style="padding-left: 0px;top: 10px;">Máxima</label>              
                <div class="form-group col-md-9">
                    @Html.TextBoxFor(model => model.EdadMaxima, new { @class = "form-control" })  
                </div>
          </div>
          <div class="form-group col-md-4">
            <label class="control-label col-md-3" style="padding-left: 0px;top: 10px;">Sexo</label>               
            <div class="form-group col-md-9">
                 <select id="Sexo" name="Sexo" class="form-control">
                    <option value="F"@if (Model.Sexo == "F")
                                     {@Html.Raw(" selected=\"selected\"")}>Femenino</option>
                    <option value="M"@if (Model.Sexo == "M")
                                     {@Html.Raw(" selected=\"selected\"")}>Masculino</option>
                    <option value="A"@if (Model.Sexo == "A")
                                     {@Html.Raw(" selected=\"selected\"")}>Mixto</option>
                </select>
          </div>
          </div>
     </div>

       <div class="form-group">
           <label>Comentarios</label>

            <div class="form-group">@Html.TextAreaFor(model => model.Convenio.Comentarios, new { @class = "form-control", @rows = 4 })


            </div>

       </div>
      <div class="form-group form-inline">
          	<div class="form-group" style="margin-right: 10px;">
             <label>Tipo Pago Intervención</label> 
          </div>
			<div class="form-group" style="margin-right: 10px;">
                 <select id="Convenio.Tintervencion" name="Convenio.Tintervencion" class="form-control">
                    <option value="1"@if (Model.Convenio.Tintervencion == 1)
                                     {@Html.Raw(" selected=\"selected\"")}>Valor USS</option>
                    <option value="2"@if (Model.Convenio.Tintervencion == 2)
                                     {@Html.Raw(" selected=\"selected\"")}>Valor UF</option>
                </select>
			</div>
            <div  class="form-group">@Html.LabelFor(model => model.ValorSubvencion, "Subvención diaria")</div>
            <div  class="form-group">@Html.TextBoxFor(model => model.ValorSubvencion, new { @class = "form-control" })</div>
         
            <div  class="form-group">@Html.LabelFor(model => model.DiasAtencion, "Dias atención")</div>
            <div  class="form-group">@Html.TextBoxFor(model => model.DiasAtencion, new { @class = "form-control" })</div>
            
     

      </div>
      <div class="form-group form-inline">  
             <div class="form-group">@Html.LabelFor(model => model.Flexibilizacion)</div>
             <div class="form-group">
                @if (Model.Flexibilizacion != null)
                {
                <input class="form-control" type="checkbox" name="Flexibilizacion" value="S" checked="checked" tabindex="21" />
                }
                else
                { 
                <input class="form-control" type="checkbox" name="Flexibilizacion" value="S" tabindex="21" />
                }

            </div>
              <div class="form-group"><label>Gestion IVA</label> </div>
             <div class="form-group">
                 <select id="MI" name="MI" class="form-control">
                    <option value="1"@if (Model.MI == 1)
                                     {@Html.Raw(" selected=\"selected\"")}>SI</option>
                    <option value="0"@if (Model.MI == 0)
                                     {@Html.Raw(" selected=\"selected\"")}>NO</option>
                </select>

 

            </div>
          </div>
      
  </div>
  <div class="panel-footer">
	<div  style ="width: 500px ; display:inline-block">
           <a class="btn btn-success" data-toggle="tooltip" data-placement="top" title="Buscar" href="../Index" onclick="window.open(this.href, 'Buscar','width=750,height=400,scrollbars=yes,menubar=no,toolbars=no'); return false"><span class ="fa fa-search fa-lg"></span></a>
        @if (Usuario.esAdministrador)
        {
        <a  class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Nuevo" href="@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Proyectos/Create"><span class ="fa fa-file-o  fa-lg"></span></a>
        <a class="btn btn-danger" data-toggle="tooltip" data-placement="top" title="Eliminar" href="../Eliminar/@Html.Raw(Model.ID.ToString())" onclick="return confirm('Realmente desea borrar este Proyecto, se borrara toda la información de la Base de Datos?');"><span class ="fa fa-trash-o fa-fw"></span></a>
        }
        @if (Usuario.esAdministrador || Usuario.esSupervisor)
        {
        <a class="btn btn-warning" data-toggle="tooltip" data-placement="top" title="Cerrar" href="../Cerrar/@Html.Raw(Model.ID.ToString())" onclick="return confirm('Al cerrar este Proyecto no podrá realizar más modificaciones, desea continuar?');"><span class ="fa fa-exclamation-triangle fa-fw"></span></a>   
        }
        <a class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Cancelar" href="@System.Configuration.ConfigurationManager.AppSettings["prePath"].ToString()/Proyectos/Create"><span class ="fa fa-undo fa-fw"></span></a>
          
        </div>
         <div style="float :right;display:inline-block">
	    <input class="btn btn-primary" type="button" value="Guardar" id="crearProyecto"/>
	</div>

  </div>
</div>
  
    </fieldset>
}
    </div>
</div>
<script>
    function Guardar(){

    Swal.fire({
            title: '¿Esta Seguro?',
            text: "Esto es irreversible!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Guardar !',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
            $("form").submit();
        Swal.fire(
          'Programa',
          'se ha Modificado',
          'success'
        )
    }
    })




    }
        
    
    $(document).ready(function () {


        $("#crearProyecto").click(function () {
            // Validar entrada
            var MensajeError = "";
            var EdadMinima = $("#EdadMinima").val();
            var EdadMaxima = $("#EdadMaxima").val();
            var ValorSubvencion = $("#ValorSubvencion").val();
            var DiasAtencion = $("#DiasAtencion").val();

            // Validar largo de texto

            var CodCodeni = $("#CodCodeni").val();
            var CodSename = $("#CodSename").val();
            var Nombre = $("#Nombre").val();
            var Institucion = $("#Institucion").val();
            var Fono = $("#Fono").val();
          
            if($("#EdadMinima").val() != ""){
                if (!$.isNumeric(EdadMinima)) {
                    MensajeError = "La Edad Minima debe ser numero ";
                }
            }
            if($("#EdadMaxima").val() != ""){
                if (!$.isNumeric(EdadMaxima)) {
                MensajeError = MensajeError + ", La Edad Maxima debe ser numero ";
                }
            }

            if (!$.isNumeric(ValorSubvencion)) {
                MensajeError = MensajeError +   ",El Valor Subvencion debe ser numero";
            }
            if (!$.isNumeric(DiasAtencion)) {
                MensajeError = MensajeError + ",El Valor de los días de atencion debe ser numero";
            }
            if (CodCodeni.length > 50) {
                MensajeError = MensajeError + ",El Valor supera el largo al Codigo Codeni que es de 50 caracteres";
            }
            if (CodSename.length > 50) {
                MensajeError = MensajeError + ",El Valor supera el largo al Codigo Sename/ Mejor Niñez que es de 50 caracteres";
            }
            if (Nombre.length > 60) {
                MensajeError = MensajeError + ",El Valor supera el largo al Nombre que es de 60 caracteres";
            }
            if (Institucion.length > 100) {
                MensajeError = MensajeError + ",El Valor supera el largo al Institucion que es de 100 caracteres";
            }
            if (Fono.length > 10) {
                MensajeError = MensajeError + ",El Valor supera el largo al Fono que es de 10 caracteres";
            }
        

            if (MensajeError == "") {
                Guardar();
            }else{
               swal(MensajeError); 
            }
    });


    });
  </script> 